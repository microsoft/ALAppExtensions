name: '_Build AL-GO project'

run-name: 'Build project ${{ inputs.project }}'

on:
  workflow_call:
    inputs:
      shell:
        description: Shell in which you want to run the action (powershell or pwsh)
        required: false
        default: powershell
        type: string
      runsOn:
        description: JSON-formatted string og the types of machine to run the build job on
        required: true
        type: string
      checkoutRef:
        description: Ref to checkout
        required: false
        default: ${{ github.ref }}
        type: string
      project:
        description: Name of the built project
        required: true
        type: string
      projectName:
        description: Friendly name of the built project
        required: true
        type: string
      projectDependenciesJson:
        description: Dependencies of the built project in compressed Json format
        required: false
        default: '{}'
        type: string
      buildMode:
        description: Build mode used when building the artifacts
        required: true
        type: string
      baselineWorkflowRunId:
        description: ID of the baseline workflow run, from where to download the current project dependencies, in case they are not built in the current workflow run
        required: false
        default: '0'
        type: string
      secrets:
        description: A comma-separated string with the names of the secrets, required for the workflow.
        required: false
        default: ''
        type: string
      publishThisBuildArtifacts:
        description: Flag indicating whether this build artifacts should be published
        type: boolean
        default: false
      publishArtifacts:
        description: Flag indicating whether the artifacts should be published
        type: boolean
        default: false
      artifactsNameSuffix:
        description: Suffix to add to the artifacts names
        required: false
        default: ''
        type: string
      signArtifacts:
        description: Flag indicating whether the apps should be signed
        type: boolean
        default: false
      useArtifactCache:
        description: Flag determining whether to use the Artifacts Cache
        type: boolean
        default: false
      parentTelemetryScopeJson:
        description: Specifies the telemetry scope for the telemetry signal
        required: false
        type: string

env:
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}

jobs:
  BuildALGoProject:
    needs: [ ]
    runs-on: ${{ fromJson(inputs.runsOn) }}
    defaults:
      run:
        shell: ${{ inputs.shell }}
    name: ${{ inputs.projectName }} (${{ inputs.buildMode }})
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkoutRef }}
          lfs: true

      - name: Read settings
        uses: microsoft/AL-Go/Actions/ReadSettings@4c5bfbca1adebbf997f63882df4b9074a19aac1d
        with:
          shell: ${{ inputs.shell }}
          project: ${{ inputs.project }}
          get: useCompilerFolder,keyVaultCodesignCertificateName,doNotSignApps,doNotRunTests,artifact,generateDependencyArtifact

      - name: Read secrets
        id: ReadSecrets
        if: github.event_name != 'pull_request'
        uses: microsoft/AL-Go/Actions/ReadSecrets@4c5bfbca1adebbf997f63882df4b9074a19aac1d
        with:
          shell: ${{ inputs.shell }}
          gitHubSecrets: ${{ toJson(secrets) }}
          getSecrets: '${{ inputs.secrets }},appDependencyProbingPathsSecrets'

      - name: Determine ArtifactUrl
        uses: microsoft/AL-Go/Actions/DetermineArtifactUrl@4c5bfbca1adebbf997f63882df4b9074a19aac1d
        id: determineArtifactUrl
        with:
          shell: ${{ inputs.shell }}
          parentTelemetryScopeJson: ${{ inputs.parentTelemetryScopeJson }}
          project: ${{ inputs.project }}

      - name: Cache Business Central Artifacts
        if: env.useCompilerFolder == 'True' && inputs.useArtifactCache && env.artifactCacheKey
        uses: actions/cache@v4
        with:
          path: .artifactcache
          key: ${{ env.artifactCacheKey }}

      - name: Download Project Dependencies
        id: DownloadProjectDependencies
        uses: microsoft/AL-Go/Actions/DownloadProjectDependencies@4c5bfbca1adebbf997f63882df4b9074a19aac1d
        env:
          Secrets: '${{ steps.ReadSecrets.outputs.Secrets }}'
        with:
          shell: ${{ inputs.shell }}
          project: ${{ inputs.project }}
          buildMode: ${{ inputs.buildMode }}
          projectsDependenciesJson: ${{ inputs.projectDependenciesJson }}
          baselineWorkflowRunId: ${{ inputs.baselineWorkflowRunId }}

      - name: Build
        uses: microsoft/AL-Go/Actions/RunPipeline@4c5bfbca1adebbf997f63882df4b9074a19aac1d
        env:
          Secrets: '${{ steps.ReadSecrets.outputs.Secrets }}'
          BuildMode: ${{ inputs.buildMode }}
        with:
          shell: ${{ inputs.shell }}
          parentTelemetryScopeJson: ${{ inputs.parentTelemetryScopeJson }}
          artifact: ${{ env.artifact }}
          project: ${{ inputs.project }}
          buildMode: ${{ inputs.buildMode }}
          installAppsJson: ${{ steps.DownloadProjectDependencies.outputs.DownloadedApps }}
          installTestAppsJson: ${{ steps.DownloadProjectDependencies.outputs.DownloadedTestApps }}

      - name: Sign
        if: inputs.signArtifacts && env.doNotSignApps == 'False' && env.keyVaultCodesignCertificateName != ''
        id: sign
        uses: microsoft/AL-Go/Actions/Sign@4c5bfbca1adebbf997f63882df4b9074a19aac1d
        with:
          shell: ${{ needs.Initialization.outputs.githubRunnerShell }}
          azureCredentialsJson: ${{ secrets.AZURE_CREDENTIALS }}
          pathToFiles: '${{ inputs.project }}/.buildartifacts/Apps/*.app'
          parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}

      - name: Calculate Artifact names
        id: calculateArtifactsNames
        uses: microsoft/AL-Go/Actions/CalculateArtifactNames@4c5bfbca1adebbf997f63882df4b9074a19aac1d
        if: success() || failure()
        with:
          shell: ${{ inputs.shell }}
          project: ${{ inputs.project }}
          buildMode: ${{ inputs.buildMode }}
          suffix: ${{ inputs.artifactsNameSuffix }}

      - name: Upload thisbuild artifacts - apps
        if: inputs.publishThisBuildArtifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.calculateArtifactsNames.outputs.ThisBuildAppsArtifactsName }}
          path: '${{ inputs.project }}/.buildartifacts/Apps/'
          if-no-files-found: ignore
          retention-days: 1

      - name: Upload thisbuild artifacts - dependencies
        if: inputs.publishThisBuildArtifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.calculateArtifactsNames.outputs.ThisBuildDependenciesArtifactsName }}
          path: '${{ inputs.project }}/.buildartifacts/Dependencies/'
          if-no-files-found: ignore
          retention-days: 1

      - name: Upload thisbuild artifacts - test apps
        if: inputs.publishThisBuildArtifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.calculateArtifactsNames.outputs.ThisBuildTestAppsArtifactsName }}
          path: '${{ inputs.project }}/.buildartifacts/TestApps/'
          if-no-files-found: ignore
          retention-days: 1

      - name: Publish artifacts - apps
        uses: actions/upload-artifact@v4
        if: inputs.publishArtifacts
        with:
          name: ${{ steps.calculateArtifactsNames.outputs.AppsArtifactsName }}
          path: '${{ inputs.project }}/.buildartifacts/Apps/'
          if-no-files-found: ignore

      - name: Publish artifacts - dependencies
        uses: actions/upload-artifact@v4
        if: inputs.publishArtifacts && env.generateDependencyArtifact == 'True'
        with:
          name: ${{ steps.calculateArtifactsNames.outputs.DependenciesArtifactsName }}
          path: '${{ inputs.project }}/.buildartifacts/Dependencies/'
          if-no-files-found: ignore

      - name: Publish artifacts - test apps
        uses: actions/upload-artifact@v4
        if: inputs.publishArtifacts
        with:
          name: ${{ steps.calculateArtifactsNames.outputs.TestAppsArtifactsName }}
          path: '${{ inputs.project }}/.buildartifacts/TestApps/'
          if-no-files-found: ignore

      - name: Publish artifacts - build output
        uses: actions/upload-artifact@v4
        if: (success() || failure()) && (hashFiles(format('{0}/BuildOutput.txt',inputs.project)) != '')
        with:
          name: ${{ steps.calculateArtifactsNames.outputs.BuildOutputArtifactsName }}
          path: '${{ inputs.project }}/BuildOutput.txt'
          if-no-files-found: ignore

      - name: Publish artifacts - container event log
        uses: actions/upload-artifact@v4
        if: (failure()) && (hashFiles(format('{0}/ContainerEventLog.evtx',inputs.project)) != '')
        with:
          name: ${{ steps.calculateArtifactsNames.outputs.ContainerEventLogArtifactsName }}
          path: '${{ inputs.project }}/ContainerEventLog.evtx'
          if-no-files-found: ignore

      - name: Publish artifacts - test results
        uses: actions/upload-artifact@v4
        if: (success() || failure()) && (hashFiles(format('{0}/TestResults.xml',inputs.project)) != '')
        with:
          name: ${{ steps.calculateArtifactsNames.outputs.TestResultsArtifactsName }}
          path: '${{ inputs.project }}/TestResults.xml'
          if-no-files-found: ignore

      - name: Publish artifacts - bcpt test results
        uses: actions/upload-artifact@v4
        if: (success() || failure()) && (hashFiles(format('{0}/bcptTestResults.json',inputs.project)) != '')
        with:
          name: ${{ steps.calculateArtifactsNames.outputs.BcptTestResultsArtifactsName }}
          path: '${{ inputs.project }}/bcptTestResults.json'
          if-no-files-found: ignore

      - name: Analyze Test Results
        id: analyzeTestResults
        if: (success() || failure()) && env.doNotRunTests == 'False'
        uses: microsoft/AL-Go/Actions/AnalyzeTests@4c5bfbca1adebbf997f63882df4b9074a19aac1d
        with:
          shell: ${{ inputs.shell }}
          parentTelemetryScopeJson: ${{ inputs.parentTelemetryScopeJson }}
          project: ${{ inputs.project }}

      - name: Cleanup
        if: always()
        uses: microsoft/AL-Go/Actions/PipelineCleanup@4c5bfbca1adebbf997f63882df4b9074a19aac1d
        with:
          shell: ${{ inputs.shell }}
          parentTelemetryScopeJson: ${{ inputs.parentTelemetryScopeJson }}
          project: ${{ inputs.project }}

name: 'Pull Request Build'

on:
  pull_request_target:
    paths-ignore:
      - '**.md'
    branches: [ 'main' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

defaults:
  run:
    shell: powershell

permissions:
  contents: read
  actions: read
  pull-requests: read

env:
  workflowDepth: 2
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}

jobs:
  PregateCheck:
    if: github.event.pull_request.base.repo.full_name != github.event.pull_request.head.repo.full_name
    runs-on: [ windows-latest ]
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          ref: refs/pull/${{ github.event.number }}/merge

      - uses: microsoft/AL-Go-Actions/VerifyPRChanges@preview
        with:
          baseSHA: ${{ github.event.pull_request.base.sha }}
          headSHA: ${{ github.event.pull_request.head.sha }}
          prbaseRepository: ${{ github.event.pull_request.base.repo.full_name }}

  Initialization:
    needs: [ PregateCheck ]
    if: (!failure() && !cancelled())
    runs-on: [ windows-latest ]
    outputs:
      telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
      settings: ${{ steps.ReadSettings.outputs.SettingsJson }}
      githubRunner: ${{ steps.ReadSettings.outputs.GitHubRunnerJson }}
      githubRunnerShell: ${{ steps.ReadSettings.outputs.GitHubRunnerShell }}
      projects: ${{ steps.determineProjectsToBuild.outputs.ProjectsJson }}
      projectDependenciesJson: ${{ steps.determineProjectsToBuild.outputs.ProjectDependenciesJson }}
      buildOrderJson: ${{ steps.determineProjectsToBuild.outputs.BuildOrderJson }}
      workflowDepth: ${{ steps.DetermineWorkflowDepth.outputs.WorkflowDepth }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          ref: refs/pull/${{ github.event.number }}/merge

      - name: Initialize the workflow
        id: init
        uses: microsoft/AL-Go-Actions/WorkflowInitialize@preview
        with:
          shell: powershell
          eventId: "DO0104"

      - name: Read settings
        id: ReadSettings
        uses: microsoft/AL-Go-Actions/ReadSettings@preview
        with:
          shell: powershell
          parentTelemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
          getEnvironments: '*'
      
      - name: Determine Workflow Depth
        id: DetermineWorkflowDepth
        run: |
          Add-Content -Path $env:GITHUB_OUTPUT -Value "WorkflowDepth=$($env:workflowDepth)"
          
      - name: Determine Projects To Build
        id: determineProjectsToBuild
        uses: microsoft/AL-Go-Actions/DetermineProjectsToBuild@preview
        with:
          shell: powershell
          maxBuildDepth: ${{ env.workflowDepth }}

  Build1:
    needs: [ Initialization ]
    if: (!failure()) && (!cancelled()) && fromJson(needs.Initialization.outputs.buildOrderJson)[0].projectsCount > 0
    strategy:
      matrix:
        include: ${{ fromJson(needs.Initialization.outputs.buildOrderJson)[0].buildDimensions }}
      fail-fast: false
    name: Build ${{ matrix.project }} - ${{ matrix.buildMode }}
    uses: ./.github/workflows/_BuildALGoProject.yaml
    secrets: inherit
    with:
      shell: ${{ needs.Initialization.outputs.githubRunnerShell }}
      runsOn: ${{ needs.Initialization.outputs.githubRunner }}
      checkoutRef: refs/pull/${{ github.event.number }}/merge
      parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
      project: ${{ matrix.project }}
      buildMode: ${{ matrix.buildMode }}
      projectDependenciesJson: ${{ needs.Initialization.outputs.projectDependenciesJson }}
      secrets: 'licenseFileUrl,insiderSasToken,keyVaultCertificateUrl,keyVaultCertificatePassword,keyVaultClientId,gitHubPackagesContext'
      publishThisBuildArtifacts: ${{ needs.Initialization.outputs.workflowDepth > 1 }}

  Build:
    needs: [ Initialization, Build1 ]
    if: (!failure()) && (!cancelled()) && (needs.Build1.result == 'success' || needs.Build1.result == 'skipped') && fromJson(needs.Initialization.outputs.buildOrderJson)[1].projectsCount > 0
    strategy:
      matrix:
        include: ${{ fromJson(needs.Initialization.outputs.buildOrderJson)[1].buildDimensions }}
      fail-fast: false
    name: Build ${{ matrix.project }} - ${{ matrix.buildMode }}
    uses: ./.github/workflows/_BuildALGoProject.yaml
    secrets: inherit
    with:
      shell: ${{ needs.Initialization.outputs.githubRunnerShell }}
      runsOn: ${{ needs.Initialization.outputs.githubRunner }}
      checkoutRef: refs/pull/${{ github.event.number }}/merge
      parentTelemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
      project: ${{ matrix.project }}
      buildMode: ${{ matrix.buildMode }}
      projectDependenciesJson: ${{ needs.Initialization.outputs.projectDependenciesJson }}
      secrets: 'licenseFileUrl,insiderSasToken,keyVaultCertificateUrl,keyVaultCertificatePassword,keyVaultClientId,gitHubPackagesContext'
      publishThisBuildArtifacts: ${{ needs.Initialization.outputs.workflowDepth > 1 }}

  PostProcess:
    runs-on: [ windows-latest ]
    needs: [ Initialization, Build ]
    if: (!cancelled())
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          ref: refs/pull/${{ github.event.number }}/merge

      - name: Finalize the workflow
        id: PostProcess
        uses: microsoft/AL-Go-Actions/WorkflowPostProcess@preview
        with:
          shell: powershell
          eventId: "DO0104"
          telemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}

codeunit 10780 "Create ES GL Accounts"
{
    InherentPermissions = X;
    InherentEntitlements = X;

    [EventSubscriber(ObjectType::Codeunit, Codeunit::"Create Common GL Account", 'OnAfterAddGLAccountsForLocalization', '', false, false)]
    local procedure ModifyCommonGLAccounts()
    var
        InventorySetup: Record "Inventory Setup";
        CommonGLAccount: Codeunit "Create Common GL Account";
    begin
        InventorySetup.Get();

        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.CustomerDomesticName(), '4300001');
        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.VendorDomesticName(), '4000001');

        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.SalesDomesticName(), '7050011');
        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.PurchaseDomesticName(), '6000001');

        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.SalesVATStandardName(), '4770001');
        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.PurchaseVATStandardName(), '4720001');

        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.DirectCostAppliedRawMatName(), '3300130');
        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.DirectCostAppliedRetailName(), '3300100');

        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.OverheadAppliedRawMatName(), '3300140');
        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.OverheadAppliedRetailName(), '3300110');

        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.PurchaseVarianceRawMatName(), '3300150');
        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.PurchaseVarianceRetailName(), '3300120');

        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.RawMaterialsName(), '3000002');
        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.PurchRawMatDomName(), '6010001');

        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.InventoryAdjRawMatName(), '6110001');
        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.InventoryAdjRetailName(), '6100001');

        ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.ResalesName(), '3000001');
        if InventorySetup."Expected Cost Posting to G/L" then
            ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.ResaleInterimName(), '3000004')
        else
            ContosoGLAccount.AddAccountForLocalization(CommonGLAccount.ResaleInterimName(), '');
    end;

    [EventSubscriber(ObjectType::Codeunit, Codeunit::"Create Svc GL Account", 'OnAfterAddGLAccountsForLocalization', '', false, false)]
    local procedure ModifyServiceGLAccounts()
    var
        SvcGLAccount: Codeunit "Create Svc GL Account";
    begin
        ContosoGLAccount.AddAccountForLocalization(SvcGLAccount.ServiceContractSaleName(), '7051001');
    end;

    [EventSubscriber(ObjectType::Codeunit, Codeunit::"Create Mfg GL Account", 'OnAfterAddGLAccountsForLocalization', '', false, false)]
    local procedure ModifyManufacturingGLAccounts()
    var
        MfgGLAccount: Codeunit "Create Mfg GL Account";
    begin
        ContosoGLAccount.AddAccountForLocalization(MfgGLAccount.DirectCostAppliedCapName(), '3300180');
        ContosoGLAccount.AddAccountForLocalization(MfgGLAccount.OverheadAppliedCapName(), '3300190');
        ContosoGLAccount.AddAccountForLocalization(MfgGLAccount.PurchaseVarianceCapName(), '3300200');

        ContosoGLAccount.AddAccountForLocalization(MfgGLAccount.MaterialVarianceName(), '3300230');
        ContosoGLAccount.AddAccountForLocalization(MfgGLAccount.CapacityVarianceName(), '3300240');
        ContosoGLAccount.AddAccountForLocalization(MfgGLAccount.SubcontractedVarianceName(), '3300240');
        ContosoGLAccount.AddAccountForLocalization(MfgGLAccount.CapOverheadVarianceName(), '3300260');
        ContosoGLAccount.AddAccountForLocalization(MfgGLAccount.MfgOverheadVarianceName(), '3300250');

        ContosoGLAccount.AddAccountForLocalization(MfgGLAccount.FinishedGoodsName(), '3100001');
        ContosoGLAccount.AddAccountForLocalization(MfgGLAccount.WIPAccountFinishedGoodsName(), '3300280');
    end;

    [EventSubscriber(ObjectType::Codeunit, Codeunit::"Create FA GL Account", 'OnAfterAddGLAccountsForLocalization', '', false, false)]
    local procedure ModifyFixedAssetGLAccounts()
    var
        FAGLAccount: Codeunit "Create FA GL Account";
    begin
        ContosoGLAccount.AddAccountForLocalization(FAGLAccount.IncreasesDuringTheYearName(), '2130001');
        ContosoGLAccount.AddAccountForLocalization(FAGLAccount.DecreasesDuringTheYearName(), '2130001');
        ContosoGLAccount.AddAccountForLocalization(FAGLAccount.AccumDepreciationBuildingsName(), '2820001');

        ContosoGLAccount.AddAccountForLocalization(FAGLAccount.MiscellaneousName(), '6690001');

        ContosoGLAccount.AddAccountForLocalization(FAGLAccount.DepreciationEquipmentName(), '6810001');
        ContosoGLAccount.AddAccountForLocalization(FAGLAccount.GainsAndLossesName(), '6810001');
    end;

    [EventSubscriber(ObjectType::Codeunit, Codeunit::"Create HR GL Account", 'OnAfterAddGLAccountsForLocalization', '', false, false)]
    local procedure ModifyHumanResourcesGLAccounts()
    var
        HRGLAccount: Codeunit "Create HR GL Account";
    begin
        ContosoGLAccount.AddAccountForLocalization(HRGLAccount.EmployeesPayableName(), '4600001');
    end;

    [EventSubscriber(ObjectType::Codeunit, Codeunit::"Create Job GL Account", 'OnAfterAddGLAccountsForLocalization', '', false, false)]
    local procedure ModifyJobGLAccounts()
    var
        JobGLAccount: Codeunit "Create Job GL Account";
    begin
        ContosoGLAccount.AddAccountForLocalization(JobGLAccount.WIPInvoicedSalesName(), '3300012');
        ContosoGLAccount.AddAccountForLocalization(JobGLAccount.WIPJobCostsName(), '3300021');

        ContosoGLAccount.AddAccountForLocalization(JobGLAccount.JobSalesAppliedName(), '7050003');
        ContosoGLAccount.AddAccountForLocalization(JobGLAccount.RecognizedSalesName(), '7050006');

        ContosoGLAccount.AddAccountForLocalization(JobGLAccount.JobCostsAppliedName(), '6230004');
        ContosoGLAccount.AddAccountForLocalization(JobGLAccount.RecognizedCostsName(), '6230006');
    end;

    [EventSubscriber(ObjectType::Codeunit, Codeunit::"Create G/L Account", 'OnAfterAddGLAccountsForLocalization', '', false, false)]
    local procedure ModifyGLAccountforES()
    var
        CreateGLAccount: Codeunit "Create G/L Account";
    begin
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.BALANCESHEETName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ASSETSName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TangibleFixedAssetsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.FinishedGoodsName(), '35');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RawMaterialsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.WIPSalesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.WIPJobSalesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.WIPJobCostsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.BondsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TOTALASSETSName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AllowancesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LongtermLiabilitiesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OtherLiabilitiesName(), '589');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalLiabilitiesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.INCOMESTATEMENTName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesofResourcesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobSalesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OfficeSuppliesName(), '6290002');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AdvertisingName(), '6270001');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VehicleExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalariesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InvoiceRoundingName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InterestExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.NETINCOMEName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RepairsandMaintenanceExpenseName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OperatingEquipmentBeginTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LandandBuildingsBeginTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.FixedAssetsName(), '2');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LandandBuildingsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LandandBuildingsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.IncreasesduringtheYearBuildingsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DecreasesduringtheYearBuildingsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AccumDepreciationBuildingsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LandandBuildingsTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OperatingEquipmentName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OperatingEquipmentName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.IncreasesduringtheYearOperEquipName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DecreasesduringtheYearOperEquipName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AccumDeprOperEquipName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OperatingEquipmentTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VehiclesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VehiclesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.IncreasesduringtheYearVehiclesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DecreasesduringtheYearVehiclesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AccumDepreciationVehiclesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VehiclesTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TangibleFixedAssetsTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.FixedAssetsTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CurrentAssetsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InventoryName(), '3');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ResaleItemsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ResaleItemsInterimName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CostofResaleSoldInterimName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.FinishedGoodsInterimName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RawMaterialsInterimName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CostofRawMatSoldInterimName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PrimoInventoryName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InventoryTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobWIPName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InvoicedJobSalesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.WIPSalesTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.WIPCostsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AccruedJobCostsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.WIPCostsTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobWIPTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AccountsReceivableName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CustomersDomesticName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CustomersForeignName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AccruedInterestName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OtherReceivablesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AccountsReceivableTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchasePrepaymentsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VendorPrepaymentsVATName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VendorPrepaymentsVAT10Name(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VendorPrepaymentsVAT25Name(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchasePrepaymentsTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SecuritiesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SecuritiesTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LiquidAssetsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.BankLCYName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.BankCurrenciesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.GiroAccountName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LiquidAssetsTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CurrentAssetsTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LIABILITIESANDEQUITYName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.StockholderName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CapitalStockName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RetainedEarningsName(), '120');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.NetIncomefortheYearName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalStockholderName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DeferredTaxesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AllowancesTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LiabilitiesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LongtermBankLoansName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.MortgageName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LongtermLiabilitiesTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ShorttermLiabilitiesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RevolvingCreditName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesPrepaymentsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CustomerPrepaymentsVAT0Name(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CustomerPrepaymentsVAT10Name(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CustomerPrepaymentsVAT25Name(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesPrepaymentsTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AccountsPayableName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VendorsDomesticName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VendorsForeignName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AccountsPayableTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InvAdjmtInterimName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InvAdjmtInterimRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InvAdjmtInterimRawMatName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InvAdjmtInterimTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VATName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesVAT25Name(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesVAT10Name(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchaseVAT25EUName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchaseVAT10EUName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchaseVAT25Name(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchaseVAT10Name(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.FuelTaxName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ElectricityTaxName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.NaturalGasTaxName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CoalTaxName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CO2TaxName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.WaterTaxName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VATPayableName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VATTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PersonnelrelatedItemsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.WithholdingTaxesPayableName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SupplementaryTaxesPayableName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PayrollTaxesPayableName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VacationCompensationPayableName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.EmployeesPayableName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalPersonnelrelatedItemsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DividendsfortheFiscalYearName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CorporateTaxesPayableName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OtherLiabilitiesTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ShorttermLiabilitiesTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TOTALLIABILITIESANDEQUITYName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RevenueName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesofRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesRetailDomName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesRetailEUName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesRetailExportName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobSalesAppliedRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobSalesAdjmtRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalSalesofRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesofRawMaterialsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesRawMaterialsDomName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesRawMaterialsEUName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesRawMaterialsExportName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobSalesAppliedRawMatName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobSalesAdjmtRawMatName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalSalesofRawMaterialsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesResourcesDomName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesResourcesEUName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesResourcesExportName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobSalesAppliedResourcesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobSalesAdjmtResourcesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalSalesofResourcesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesofJobsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SalesOtherJobExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalSalesofJobsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ConsultingFeesDomName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.FeesandChargesRecDomName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DiscountGrantedName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalRevenueName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CostName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CostofRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchRetailDomName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchRetailEUName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchRetailExportName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DiscReceivedRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DeliveryExpensesRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InventoryAdjmtRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobCostAppliedRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobCostAdjmtRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CostofRetailSoldName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalCostofRetailName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CostofRawMaterialsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchRawMaterialsDomName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchRawMaterialsEUName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PurchRawMaterialsExportName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DiscReceivedRawMaterialsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DeliveryExpensesRawMatName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InventoryAdjmtRawMatName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobCostAppliedRawMatName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobCostAdjmtRawMaterialsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CostofRawMaterialsSoldName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalCostofRawMaterialsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CostofResourcesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobCostAppliedResourcesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobCostAdjmtResourcesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CostofResourcesUsedName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalCostofResourcesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.JobCostsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalCostName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OperatingExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.BuildingMaintenanceExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CleaningName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ElectricityandHeatingName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RepairsandMaintenanceName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalBldgMaintExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.AdministrativeExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PhoneandFaxName(), '6280003');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PostageName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalAdministrativeExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ComputerExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SoftwareName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ConsultantServicesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OtherComputerExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalComputerExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.SellingExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.EntertainmentandPRName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TravelName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DeliveryExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalSellingExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.GasolineandMotorOilName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RegistrationFeesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RepairsandMaintenanceName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalVehicleExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OtherOperatingExpensesName(), '65');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CashDiscrepanciesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.BadDebtExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.LegalandAccountingServicesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.MiscellaneousName(), '7050020');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OtherOperatingExpTotalName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalOperatingExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PersonnelExpensesName(), '64');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.WagesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RetirementPlanContributionsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.VacationCompensationName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PayrollTaxesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalPersonnelExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DepreciationofFixedAssetsName(), '28');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DepreciationBuildingsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DepreciationEquipmentName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.DepreciationVehiclesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.GainsandLossesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalFixedAssetDepreciationName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.OtherCostsofOperationsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.NetOperatingIncomeName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InterestonBankBalancesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.FinanceChargesfromCustomersName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PaymentDiscountsReceivedName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PmtDiscReceivedDecreasesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ApplicationRoundingName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PaymentToleranceReceivedName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PmtTolReceivedDecreasesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalInterestIncomeName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InterestonRevolvingCreditName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InterestonBankLoansName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.MortgageInterestName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.FinanceChargestoVendorsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PaymentDiscountsGrantedName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PmtDiscGrantedDecreasesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PaymentToleranceGrantedName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.PmtTolGrantedDecreasesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.TotalInterestExpensesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.UnrealizedFXGainsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.UnrealizedFXLossesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RealizedFXGainsName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.RealizedFXLossesName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.NIBEFOREEXTRITEMSTAXESName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ExtraordinaryIncomeName(), '7780001');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.ExtraordinaryExpensesName(), '6780001');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.NETINCOMEBEFORETAXESName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CorporateTaxName(), '');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.CashName(), '5700001');
        ContosoGLAccount.AddAccountForLocalization(CreateGLAccount.InterestIncomeName(), '');
        ContosoGLAccount.AddAccountForLocalization(ExtraordinaryIncomeHeadingName(), '778');
        ContosoGLAccount.AddAccountForLocalization(ExtraordinaryExpensesHeadingName(), '678');
        ContosoGLAccount.AddAccountForLocalization(ExtraordinaryExpensesHeadingExpenseName(), '6780');
        ContosoGLAccount.AddAccountForLocalization(OfficeSuppliesHeadingName(), '328');
        ContosoGLAccount.AddAccountForLocalization(FixedAssetsHeadingName(), '580');
        ContosoGLAccount.AddAccountForLocalization(BasicFinancingName(), '1');
        ContosoGLAccount.AddAccountForLocalization(CapitalHeadingName(), '10');
        ContosoGLAccount.AddAccountForLocalization(ShareCapitalHeadingName(), '100');
        ContosoGLAccount.AddAccountForLocalization(ShareCapitalPostingName(), '1000001');
        ContosoGLAccount.AddAccountForLocalization(SocialFundName(), '101');
        ContosoGLAccount.AddAccountForLocalization(CapitalName(), '102');
        ContosoGLAccount.AddAccountForLocalization(PartnersInvestName(), '103');
        ContosoGLAccount.AddAccountForLocalization(PartnersInvestSCapName(), '1030');
        ContosoGLAccount.AddAccountForLocalization(PartnersInvestPCapName(), '1034');
        ContosoGLAccount.AddAccountForLocalization(PartnersPendNonmonetaryInvName(), '104');
        ContosoGLAccount.AddAccountForLocalization(PartPendNonmonInvSCapName(), '1040');
        ContosoGLAccount.AddAccountForLocalization(PartPendNonmonInvPCapName(), '1044');
        ContosoGLAccount.AddAccountForLocalization(SharesSpecialSituationsName(), '108');
        ContosoGLAccount.AddAccountForLocalization(SharesCapitalReductionsName(), '109');
        ContosoGLAccount.AddAccountForLocalization(ReservesName(), '11');
        ContosoGLAccount.AddAccountForLocalization(SharePremiumName(), '110');
        ContosoGLAccount.AddAccountForLocalization(OtherCapitalInstrHeadingName(), '111');
        ContosoGLAccount.AddAccountForLocalization(CapitalMixedFinInstrName(), '1110');
        ContosoGLAccount.AddAccountForLocalization(OtherCapitalInstrName(), '1111');
        ContosoGLAccount.AddAccountForLocalization(LegalReserveHeadingName(), '112');
        ContosoGLAccount.AddAccountForLocalization(LegalReserveName(), '1120001');
        ContosoGLAccount.AddAccountForLocalization(VoluntaryReservesName(), '113');
        ContosoGLAccount.AddAccountForLocalization(VoluntaryReserveName(), '1130001');
        ContosoGLAccount.AddAccountForLocalization(SpecialReservesName(), '114');
        ContosoGLAccount.AddAccountForLocalization(MajorPartnerSharesReservesName(), '1140');
        ContosoGLAccount.AddAccountForLocalization(StatutoryReservesName(), '1141');
        ContosoGLAccount.AddAccountForLocalization(DeprCapitalReserveName(), '1142');
        ContosoGLAccount.AddAccountForLocalization(GoodwillReservesName(), '1143');
        ContosoGLAccount.AddAccountForLocalization(OwnSharesAsGuaranteeReserName(), '1144');
        ContosoGLAccount.AddAccountForLocalization(GainsLossReservesAndAdjHeadingName(), '115');
        ContosoGLAccount.AddAccountForLocalization(GainsLossReservesAndAdjName(), '1150001');
        ContosoGLAccount.AddAccountForLocalization(PartnersOrOwnerInvestmentsName(), '118');
        ContosoGLAccount.AddAccountForLocalization(DifCapitalExchEuroName(), '119');
        ContosoGLAccount.AddAccountForLocalization(UnappliedResultsName(), '12');
        ContosoGLAccount.AddAccountForLocalization(AccumulatedLossesName(), '121');
        ContosoGLAccount.AddAccountForLocalization(ProfitOrLossHeadingName(), '129');
        ContosoGLAccount.AddAccountForLocalization(ProfitOrLossName(), '1290001');
        ContosoGLAccount.AddAccountForLocalization(SubvGrantsAndCurrExchName(), '13');
        ContosoGLAccount.AddAccountForLocalization(OfficialSubvHeadingName(), '130');
        ContosoGLAccount.AddAccountForLocalization(OfficialSubvName(), '1300001');
        ContosoGLAccount.AddAccountForLocalization(GrantsAndLegaciesHeadingName(), '131');
        ContosoGLAccount.AddAccountForLocalization(GrantsAndLegaciesName(), '1310001');
        ContosoGLAccount.AddAccountForLocalization(OtherSubvGrantsAndLegHeadingName(), '132');
        ContosoGLAccount.AddAccountForLocalization(OtherSubvGrantsAndLegName(), '1320001');
        ContosoGLAccount.AddAccountForLocalization(ValueAdjFinAForSaleHeadingName(), '133');
        ContosoGLAccount.AddAccountForLocalization(ValueAdjFinAForSaleName(), '1330');
        ContosoGLAccount.AddAccountForLocalization(ValueAdjFinAForSalePostingName(), '1330001');
        ContosoGLAccount.AddAccountForLocalization(CoverageOperationsName(), '134');
        ContosoGLAccount.AddAccountForLocalization(CashFlowCoverageHeadingName(), '1340');
        ContosoGLAccount.AddAccountForLocalization(CashFlowCoverageName(), '1340001');
        ContosoGLAccount.AddAccountForLocalization(NetInvestCovAbroadHeadingName(), '1341');
        ContosoGLAccount.AddAccountForLocalization(NetInvestCovAbroadName(), '1341001');
        ContosoGLAccount.AddAccountForLocalization(ConversionDifferencesHeadingName(), '135');
        ContosoGLAccount.AddAccountForLocalization(ConversionDifferencesName(), '1350001');
        ContosoGLAccount.AddAccountForLocalization(ValueAdjNoncurrentASaleHeadingName(), '136');
        ContosoGLAccount.AddAccountForLocalization(ValueAdjNoncurrentASaleName(), '1360001');
        ContosoGLAccount.AddAccountForLocalization(FiscalIncRetPrevYearsName(), '137');
        ContosoGLAccount.AddAccountForLocalization(FiscalIncDifRetPrevYearsHeadingName(), '1370');
        ContosoGLAccount.AddAccountForLocalization(FiscalIncDifRetPrevYearsName(), '1370001');
        ContosoGLAccount.AddAccountForLocalization(FiscalIncDeductDiscountsName(), '1371');
        ContosoGLAccount.AddAccountForLocalization(ProvisionName(), '14');
        ContosoGLAccount.AddAccountForLocalization(ProvisionForPensionsEquityName(), '140');
        ContosoGLAccount.AddAccountForLocalization(TaxationReserveEquityName(), '141');
        ContosoGLAccount.AddAccountForLocalization(ProvisionForResponsibilitiesName(), '142');
        ContosoGLAccount.AddAccountForLocalization(ProvisionForMayorRepairsName(), '143');
        ContosoGLAccount.AddAccountForLocalization(ProvForEnvironmentalActEquityName(), '145');
        ContosoGLAccount.AddAccountForLocalization(ProvisionForRestructuringName(), '146');
        ContosoGLAccount.AddAccountForLocalization(ProvPaymTransCapitalInstName(), '147');
        ContosoGLAccount.AddAccountForLocalization(SpecialLtDebtsName(), '15');
        ContosoGLAccount.AddAccountForLocalization(LtSharesLiabilityName(), '150');
        ContosoGLAccount.AddAccountForLocalization(InvestLiabilityName(), '153');
        ContosoGLAccount.AddAccountForLocalization(InvestLiabilityGName(), '1533');
        ContosoGLAccount.AddAccountForLocalization(InvestLiabilityAName(), '1534');
        ContosoGLAccount.AddAccountForLocalization(InvestLiabilityOthName(), '1535');
        ContosoGLAccount.AddAccountForLocalization(OtherInvestLiabilityName(), '1536');
        ContosoGLAccount.AddAccountForLocalization(PendNonmonetaryInvLiabName(), '154');
        ContosoGLAccount.AddAccountForLocalization(PendNonmonetaryInvLiabGName(), '1543');
        ContosoGLAccount.AddAccountForLocalization(PendNonmonetaryInvLiabAName(), '1544');
        ContosoGLAccount.AddAccountForLocalization(PendNonmonInvLiabOthName(), '1545');
        ContosoGLAccount.AddAccountForLocalization(OtherPendNonmonInvName(), '1546');
        ContosoGLAccount.AddAccountForLocalization(VincCompaniesLtDebtsName(), '16');
        ContosoGLAccount.AddAccountForLocalization(DebtsLtWithVincFinInstName(), '160');
        ContosoGLAccount.AddAccountForLocalization(DebtsLtToFinInstGName(), '1603');
        ContosoGLAccount.AddAccountForLocalization(DebtsLtToFinInstAName(), '1604');
        ContosoGLAccount.AddAccountForLocalization(DebtsLtToOthVincCredInstName(), '1605');
        ContosoGLAccount.AddAccountForLocalization(LtFixedAssetVendorsVincName(), '161');
        ContosoGLAccount.AddAccountForLocalization(LtFixedAssetVendorsGName(), '1613');
        ContosoGLAccount.AddAccountForLocalization(LtFixedAssetVendorsAName(), '1614');
        ContosoGLAccount.AddAccountForLocalization(LtFixedAssetVendorsOthName(), '1615');
        ContosoGLAccount.AddAccountForLocalization(FinLtLeaseCreditorsVincName(), '162');
        ContosoGLAccount.AddAccountForLocalization(FinLtLeaseCreditorsGName(), '1623');
        ContosoGLAccount.AddAccountForLocalization(FinLtLeaseCreditorsAName(), '1624');
        ContosoGLAccount.AddAccountForLocalization(FinLtLeaseCreditorsOthName(), '1625');
        ContosoGLAccount.AddAccountForLocalization(OtherLtDebtsToVincCompName(), '163');
        ContosoGLAccount.AddAccountForLocalization(FinishedGoodsHeadingName(), '350');
        ContosoGLAccount.AddAccountForLocalization(OtherLtDebtsGName(), '1633');
        ContosoGLAccount.AddAccountForLocalization(OtherLtDebtsAName(), '1634');
        ContosoGLAccount.AddAccountForLocalization(OtherLtDebtsOthName(), '1635');
        ContosoGLAccount.AddAccountForLocalization(LoansAndSimilarBorrowingsName(), '17');
        ContosoGLAccount.AddAccountForLocalization(LTLoansFromFinInstName(), '170');
        ContosoGLAccount.AddAccountForLocalization(LongTermDebtsName(), '1700001');
        ContosoGLAccount.AddAccountForLocalization(LongTermDebtsHeadingName(), '171');
        ContosoGLAccount.AddAccountForLocalization(ConvertibleInGrantsName(), '172');
        ContosoGLAccount.AddAccountForLocalization(LtFixedAssetVendorsName(), '173');
        ContosoGLAccount.AddAccountForLocalization(FinLtLeaseCreditorsName(), '174');
        ContosoGLAccount.AddAccountForLocalization(TradeCredBillExchPayName(), '175');
        ContosoGLAccount.AddAccountForLocalization(LtDerivFinLiabName(), '176');
        ContosoGLAccount.AddAccountForLocalization(LtDerivFinLiabPortfolioName(), '1765');
        ContosoGLAccount.AddAccountForLocalization(LtDerivFinLiabCoverInstName(), '1768');
        ContosoGLAccount.AddAccountForLocalization(ObligAndDebentLoansName(), '177');
        ContosoGLAccount.AddAccountForLocalization(ObligAndConvDebentLoansName(), '178');
        ContosoGLAccount.AddAccountForLocalization(DebtsOthMarketableSecurName(), '179');
        ContosoGLAccount.AddAccountForLocalization(LtGuaranteesDepRecName(), '18');
        ContosoGLAccount.AddAccountForLocalization(LtGuaranteesReceivedName(), '180');
        ContosoGLAccount.AddAccountForLocalization(LtSalesAndServicesAdvancesName(), '181');
        ContosoGLAccount.AddAccountForLocalization(LtDepositsReceivedName(), '185');
        ContosoGLAccount.AddAccountForLocalization(LtFinancialGuaranteesName(), '189');
        ContosoGLAccount.AddAccountForLocalization(TransitionalSituationsName(), '19');
        ContosoGLAccount.AddAccountForLocalization(IssuedSharesOrPartStockName(), '190');
        ContosoGLAccount.AddAccountForLocalization(SharesSubscriptorsName(), '192');
        ContosoGLAccount.AddAccountForLocalization(EqCapitalCInCreationName(), '194');
        ContosoGLAccount.AddAccountForLocalization(IssuedSharesOrPartFinLiabName(), '195');
        ContosoGLAccount.AddAccountForLocalization(FinLiabSharesSubsName(), '197');
        ContosoGLAccount.AddAccountForLocalization(PendFinLiabSharesOrStName(), '199');
        ContosoGLAccount.AddAccountForLocalization(IntangibleAssetsName(), '20');
        ContosoGLAccount.AddAccountForLocalization(ResearchCostsHeadingName(), '200');
        ContosoGLAccount.AddAccountForLocalization(ResearchCostsName(), '2000001');
        ContosoGLAccount.AddAccountForLocalization(DevCostsHeadingName(), '201');
        ContosoGLAccount.AddAccountForLocalization(DevCostsName(), '2010001');
        ContosoGLAccount.AddAccountForLocalization(FranchisedAssetsName(), '202');
        ContosoGLAccount.AddAccountForLocalization(IndustrialPropertyName(), '203');
        ContosoGLAccount.AddAccountForLocalization(GoodwillName(), '204');
        ContosoGLAccount.AddAccountForLocalization(RightToLeaseName(), '205');
        ContosoGLAccount.AddAccountForLocalization(EdpApplicationsName(), '206');
        ContosoGLAccount.AddAccountForLocalization(IntangibleAssetsAdvancesName(), '209');
        ContosoGLAccount.AddAccountForLocalization(TangibleAssetsName(), '21');
        ContosoGLAccount.AddAccountForLocalization(FreeholdLandName(), '210');
        ContosoGLAccount.AddAccountForLocalization(LandName(), '2100001');
        ContosoGLAccount.AddAccountForLocalization(BuildingsName(), '211');
        ContosoGLAccount.AddAccountForLocalization(SpecificInstallationsName(), '212');
        ContosoGLAccount.AddAccountForLocalization(IndustrialMachineryHeadingName(), '213');
        ContosoGLAccount.AddAccountForLocalization(IndustrialMachineryName(), '2130001');
        ContosoGLAccount.AddAccountForLocalization(IndustrialToolingName(), '214');
        ContosoGLAccount.AddAccountForLocalization(PlantMachineryEquipmentName(), '215');
        ContosoGLAccount.AddAccountForLocalization(FurnitureHeadingName(), '216');
        ContosoGLAccount.AddAccountForLocalization(FurnitureName(), '2160001');
        ContosoGLAccount.AddAccountForLocalization(InfoProcessEquipmentName(), '217');
        ContosoGLAccount.AddAccountForLocalization(DataProcessingEquipmentName(), '2170001');
        ContosoGLAccount.AddAccountForLocalization(TransportEquipmentName(), '218');
        ContosoGLAccount.AddAccountForLocalization(VehicleName(), '2180001');
        ContosoGLAccount.AddAccountForLocalization(OtherTangibleFixedAssetsHeadingName(), '219');
        ContosoGLAccount.AddAccountForLocalization(OtherTangibleFixedAssetsName(), '2190001');
        ContosoGLAccount.AddAccountForLocalization(PropertiesInvestmName(), '22');
        ContosoGLAccount.AddAccountForLocalization(FreeholdLandInvName(), '220');
        ContosoGLAccount.AddAccountForLocalization(LandInvName(), '2200001');
        ContosoGLAccount.AddAccountForLocalization(BuildingsInvName(), '221');
        ContosoGLAccount.AddAccountForLocalization(FixedAssetsInProgressName(), '23');
        ContosoGLAccount.AddAccountForLocalization(ImprPrepCostsFreehLandName(), '230');
        ContosoGLAccount.AddAccountForLocalization(ConstructionWorkInProgressName(), '231');
        ContosoGLAccount.AddAccountForLocalization(PlantMachEquipmUndInstName(), '232');
        ContosoGLAccount.AddAccountForLocalization(MachineryUnderInstallationName(), '233');
        ContosoGLAccount.AddAccountForLocalization(InfoProcessEquipmUndInstName(), '237');
        ContosoGLAccount.AddAccountForLocalization(TangibleAssetsAdvancesName(), '239');
        ContosoGLAccount.AddAccountForLocalization(VincCompFinInvestmName(), '24');
        ContosoGLAccount.AddAccountForLocalization(LtInvestmInVincComName(), '240');
        ContosoGLAccount.AddAccountForLocalization(LtInvestmGName(), '2403');
        ContosoGLAccount.AddAccountForLocalization(LtInvestmAName(), '2404');
        ContosoGLAccount.AddAccountForLocalization(LtInvestmOthName(), '2405');
        ContosoGLAccount.AddAccountForLocalization(LtDebtValueVincName(), '241');
        ContosoGLAccount.AddAccountForLocalization(LtDebtValueGName(), '2413');
        ContosoGLAccount.AddAccountForLocalization(LtDebtValueAName(), '2414');
        ContosoGLAccount.AddAccountForLocalization(LtDebtValueOthName(), '2415');
        ContosoGLAccount.AddAccountForLocalization(LtCreditsToVincCompName(), '242');
        ContosoGLAccount.AddAccountForLocalization(LtCreditsToGName(), '2423');
        ContosoGLAccount.AddAccountForLocalization(LtCreditsToAName(), '2424');
        ContosoGLAccount.AddAccountForLocalization(LtCreditsToOthName(), '2425');
        ContosoGLAccount.AddAccountForLocalization(AmountsUncalledLtName(), '249');
        ContosoGLAccount.AddAccountForLocalization(AmountsUncalledGName(), '2493');
        ContosoGLAccount.AddAccountForLocalization(AmountsUncalledAName(), '2494');
        ContosoGLAccount.AddAccountForLocalization(AmountsUncalledOthName(), '2495');
        ContosoGLAccount.AddAccountForLocalization(OtherFinancialInvestmLtName(), '25');
        ContosoGLAccount.AddAccountForLocalization(LtInvestmInCapitalInstName(), '250');
        ContosoGLAccount.AddAccountForLocalization(LtDebtValuesHeadingName(), '251');
        ContosoGLAccount.AddAccountForLocalization(LtDebtValuesName(), '2510001');
        ContosoGLAccount.AddAccountForLocalization(LongTermLoansName(), '252');
        ContosoGLAccount.AddAccountForLocalization(FaTransfLoansName(), '253');
        ContosoGLAccount.AddAccountForLocalization(StaffLtCreditsName(), '254');
        ContosoGLAccount.AddAccountForLocalization(LtDerivFinCapitalName(), '255');
        ContosoGLAccount.AddAccountForLocalization(LtDerivFinCapPortfolioName(), '2550');
        ContosoGLAccount.AddAccountForLocalization(LtDerivFinCapCoverInstName(), '2553');
        ContosoGLAccount.AddAccountForLocalization(LtPersInsContReimbRightsName(), '257');
        ContosoGLAccount.AddAccountForLocalization(LongTermTaxationsName(), '258');
        ContosoGLAccount.AddAccountForLocalization(PendingInvestOnCapitalInstName(), '259');
        ContosoGLAccount.AddAccountForLocalization(GuarantDepSecuritiesName(), '26');
        ContosoGLAccount.AddAccountForLocalization(GuarantSecuritiesLTName(), '260');
        ContosoGLAccount.AddAccountForLocalization(GuaranteedSecuritiesName(), '2600001');
        ContosoGLAccount.AddAccountForLocalization(GuaranteedDepositsLTName(), '265');
        ContosoGLAccount.AddAccountForLocalization(DeprOfIntangibleFaName(), '280');
        ContosoGLAccount.AddAccountForLocalization(DepResearchCostsName(), '2800');
        ContosoGLAccount.AddAccountForLocalization(DepDevelopmCostsName(), '2801');
        ContosoGLAccount.AddAccountForLocalization(DepFranchisedAssetsName(), '2802');
        ContosoGLAccount.AddAccountForLocalization(DepIndustrialPropertyName(), '2803');
        ContosoGLAccount.AddAccountForLocalization(DepRightToLeaseName(), '2805');
        ContosoGLAccount.AddAccountForLocalization(DepEdpApplicationsName(), '2806');
        ContosoGLAccount.AddAccountForLocalization(DeprOfTangibleFaName(), '281');
        ContosoGLAccount.AddAccountForLocalization(DepBuildingsName(), '2811');
        ContosoGLAccount.AddAccountForLocalization(DepTechnicalInstallationsName(), '2812');
        ContosoGLAccount.AddAccountForLocalization(DepIndustrialMachineryHeadingName(), '2813');
        ContosoGLAccount.AddAccountForLocalization(DepIndustrialMachineryName(), '2813001');
        ContosoGLAccount.AddAccountForLocalization(DepIndustrialToolingName(), '2814');
        ContosoGLAccount.AddAccountForLocalization(DepPlantMachineryEquipName(), '2815');
        ContosoGLAccount.AddAccountForLocalization(DepFurnitureAssetsName(), '2816');
        ContosoGLAccount.AddAccountForLocalization(DepFurnitureName(), '2816001');
        ContosoGLAccount.AddAccountForLocalization(DepInfoProcessEquipmentName(), '2817');
        ContosoGLAccount.AddAccountForLocalization(DepTransportEquipmentHeadingName(), '2818');
        ContosoGLAccount.AddAccountForLocalization(DepTransportEquipmentName(), '2818001');
        ContosoGLAccount.AddAccountForLocalization(DepOtherTangibleFaHeadingName(), '2819');
        ContosoGLAccount.AddAccountForLocalization(DepOtherTangibleFaName(), '2819001');
        ContosoGLAccount.AddAccountForLocalization(DepPropertiesInvestmHeadingName(), '282');
        ContosoGLAccount.AddAccountForLocalization(DepPropertiesInvestmName(), '2820001');
        ContosoGLAccount.AddAccountForLocalization(DeteriorForFaName(), '29');
        ContosoGLAccount.AddAccountForLocalization(DeteriorOfIntangFaName(), '290');
        ContosoGLAccount.AddAccountForLocalization(DetResearchCostsName(), '2900');
        ContosoGLAccount.AddAccountForLocalization(DetDevelopmCostsName(), '2901');
        ContosoGLAccount.AddAccountForLocalization(DetFranchisedAssetsName(), '2902');
        ContosoGLAccount.AddAccountForLocalization(DetIndustrialPropertyName(), '2903');
        ContosoGLAccount.AddAccountForLocalization(DetRightToLeaseName(), '2905');
        ContosoGLAccount.AddAccountForLocalization(DetEdpApplicationsName(), '2906');
        ContosoGLAccount.AddAccountForLocalization(DeteriorOfTangFaName(), '291');
        ContosoGLAccount.AddAccountForLocalization(DetFreeholdLandName(), '2910');
        ContosoGLAccount.AddAccountForLocalization(DetBuildingName(), '2911');
        ContosoGLAccount.AddAccountForLocalization(DetTechnicalInstallationsName(), '2912');
        ContosoGLAccount.AddAccountForLocalization(DetIndustrialMachineryName(), '2913');
        ContosoGLAccount.AddAccountForLocalization(DetIndustrialToolingName(), '2914');
        ContosoGLAccount.AddAccountForLocalization(DetPlantMachineryEquipName(), '2915');
        ContosoGLAccount.AddAccountForLocalization(DepFurnitureHeadingName(), '2916');
        ContosoGLAccount.AddAccountForLocalization(DetInfoProcessEquipmentName(), '2917');
        ContosoGLAccount.AddAccountForLocalization(DetTransportEquipmentName(), '2918');
        ContosoGLAccount.AddAccountForLocalization(DetOtherTangFixedAssetsName(), '2919');
        ContosoGLAccount.AddAccountForLocalization(DetPropertiesInvestmName(), '292');
        ContosoGLAccount.AddAccountForLocalization(DetFreeholdLandHeadingName(), '2920');
        ContosoGLAccount.AddAccountForLocalization(DetBuildingHeadingName(), '2921');
        ContosoGLAccount.AddAccountForLocalization(DetLtSecValueInVincCName(), '293');
        ContosoGLAccount.AddAccountForLocalization(DetLtSecValueInGrName(), '2933');
        ContosoGLAccount.AddAccountForLocalization(DetLtSecValueInAsocName(), '2934');
        ContosoGLAccount.AddAccountForLocalization(DetLtDebtSecuritiesVinCName(), '294');
        ContosoGLAccount.AddAccountForLocalization(DetLtDebtSecuritiesGName(), '2943');
        ContosoGLAccount.AddAccountForLocalization(DetLtDebtSecuritiesAName(), '2944');
        ContosoGLAccount.AddAccountForLocalization(DetLtDebtSecurOVinName(), '2945');
        ContosoGLAccount.AddAccountForLocalization(DetLtCreditsValToVincCName(), '295');
        ContosoGLAccount.AddAccountForLocalization(DetLtCreditsToGrName(), '2953');
        ContosoGLAccount.AddAccountForLocalization(DetLtCreditsToAsocName(), '2954');
        ContosoGLAccount.AddAccountForLocalization(DetLtCreditsToOthVinName(), '2955');
        ContosoGLAccount.AddAccountForLocalization(DetLtDebtSecuritiesValueName(), '297');
        ContosoGLAccount.AddAccountForLocalization(DetLtCreditsValueName(), '298');
        ContosoGLAccount.AddAccountForLocalization(TradeGoodsName(), '30');
        ContosoGLAccount.AddAccountForLocalization(GoodsHeadingName(), '300');
        ContosoGLAccount.AddAccountForLocalization(GoodsName(), '3000001');
        ContosoGLAccount.AddAccountForLocalization(AssemblyBomName(), '3000002');
        ContosoGLAccount.AddAccountForLocalization(GoodsTradeCredName(), '3000003');
        ContosoGLAccount.AddAccountForLocalization(BillOfMaterTradeCredName(), '3000004');
        ContosoGLAccount.AddAccountForLocalization(RawMaterialsProvName(), '3100002');
        ContosoGLAccount.AddAccountForLocalization(SuppliesOtherConsumName(), '32');
        ContosoGLAccount.AddAccountForLocalization(ItemsAssembToIncorpName(), '320');
        ContosoGLAccount.AddAccountForLocalization(FuelsName(), '321');
        ContosoGLAccount.AddAccountForLocalization(ReplacementPartsName(), '322');
        ContosoGLAccount.AddAccountForLocalization(OtherMaterialsName(), '325');
        ContosoGLAccount.AddAccountForLocalization(PackagingName(), '326');
        ContosoGLAccount.AddAccountForLocalization(ContainersName(), '327');
        ContosoGLAccount.AddAccountForLocalization(ProdInProgrManufGoodsHeadingName(), '33');
        ContosoGLAccount.AddAccountForLocalization(ProdInProgrManufGoodsName(), '330');
        ContosoGLAccount.AddAccountForLocalization(SalesSpecialistName(), '3300010');
        ContosoGLAccount.AddAccountForLocalization(WipProjectSalesName(), '3300011');
        ContosoGLAccount.AddAccountForLocalization(WipInvoicedProjectSalesName(), '3300012');
        ContosoGLAccount.AddAccountForLocalization(CostsSpecialistName(), '3300020');
        ContosoGLAccount.AddAccountForLocalization(WipProjectCostsName(), '3300021');
        ContosoGLAccount.AddAccountForLocalization(WipAccruedProjectCostsName(), '3300022');
        ContosoGLAccount.AddAccountForLocalization(JobPostingGroupName(), '3300030');
        ContosoGLAccount.AddAccountForLocalization(WorkInProgressHeadingName(), '34');
        ContosoGLAccount.AddAccountForLocalization(WorkInProgressName(), '340');
        ContosoGLAccount.AddAccountForLocalization(ByProductsOrScrapName(), '36');
        ContosoGLAccount.AddAccountForLocalization(ByProductsName(), '360');
        ContosoGLAccount.AddAccountForLocalization(WasteProductsName(), '365');
        ContosoGLAccount.AddAccountForLocalization(RejectsOfManufacturingName(), '368');
        ContosoGLAccount.AddAccountForLocalization(DeteriorInventoryValueName(), '39');
        ContosoGLAccount.AddAccountForLocalization(DetGoodsValueName(), '390');
        ContosoGLAccount.AddAccountForLocalization(DetRawMatName(), '391');
        ContosoGLAccount.AddAccountForLocalization(DetSuppliesOtherConsumName(), '392');
        ContosoGLAccount.AddAccountForLocalization(DetProdProgrManufGoodsName(), '393');
        ContosoGLAccount.AddAccountForLocalization(DetForWorkInProgressName(), '394');
        ContosoGLAccount.AddAccountForLocalization(DetForFinishedGoodsName(), '395');
        ContosoGLAccount.AddAccountForLocalization(DetForByProdOrScrapName(), '396');
        ContosoGLAccount.AddAccountForLocalization(CreditorsAndDebtorsName(), '4');
        ContosoGLAccount.AddAccountForLocalization(TradeCreditorsHeadingName(), '40');
        ContosoGLAccount.AddAccountForLocalization(TradeCreditorsName(), '400');
        ContosoGLAccount.AddAccountForLocalization(STTradeCredEuroName(), '4000');
        ContosoGLAccount.AddAccountForLocalization(NationalTradeCreditorsName(), '4000001');
        ContosoGLAccount.AddAccountForLocalization(InternatTradeCreditorsName(), '4000002');
        ContosoGLAccount.AddAccountForLocalization(InvUnderPaymentOrderName(), '4000003');
        ContosoGLAccount.AddAccountForLocalization(ForCurrTradeCreditorsName(), '4004');
        ContosoGLAccount.AddAccountForLocalization(EuTradeCreditorsName(), '4004001');
        ContosoGLAccount.AddAccountForLocalization(TradeCredInvNotRecName(), '4009');
        ContosoGLAccount.AddAccountForLocalization(TradeCredBillOfExchPayName(), '401');
        ContosoGLAccount.AddAccountForLocalization(TradeCrBillExPayName(), '4010');
        ContosoGLAccount.AddAccountForLocalization(BillExPayNationalName(), '4010001');
        ContosoGLAccount.AddAccountForLocalization(BillExInPaymtOrderName(), '4010002');
        ContosoGLAccount.AddAccountForLocalization(TradeCreditorsGName(), '403');
        ContosoGLAccount.AddAccountForLocalization(TradeCreditorsGEuroHeadingName(), '4030');
        ContosoGLAccount.AddAccountForLocalization(TradeCreditorsGEuroName(), '4030001');
        ContosoGLAccount.AddAccountForLocalization(ProvForBillExchPayGName(), '4031');
        ContosoGLAccount.AddAccountForLocalization(TradeCreditorsGForCurrName(), '4034');
        ContosoGLAccount.AddAccountForLocalization(TradeCrReturnEmptiesGName(), '4036');
        ContosoGLAccount.AddAccountForLocalization(TradeCredInvNotRecGName(), '4039');
        ContosoGLAccount.AddAccountForLocalization(TradeCredAsocName(), '404');
        ContosoGLAccount.AddAccountForLocalization(TradeCredOthVinCName(), '405');
        ContosoGLAccount.AddAccountForLocalization(TradeCrReturnEmptiesName(), '406');
        ContosoGLAccount.AddAccountForLocalization(TradeCredAdvancesHeadingName(), '407');
        ContosoGLAccount.AddAccountForLocalization(TradeCredAdvancesName(), '4070');
        ContosoGLAccount.AddAccountForLocalization(TradeCredAdvancesNationalName(), '4070001');
        ContosoGLAccount.AddAccountForLocalization(TradeCredAdvancesEuName(), '4070002');
        ContosoGLAccount.AddAccountForLocalization(TradeCredAdvancesExportName(), '4070003');
        ContosoGLAccount.AddAccountForLocalization(OtherCreditorsHeadingName(), '41');
        ContosoGLAccount.AddAccountForLocalization(CreditorsProvOfServicesName(), '410');
        ContosoGLAccount.AddAccountForLocalization(STCreditorsEuroName(), '4100');
        ContosoGLAccount.AddAccountForLocalization(OtherCreditorsName(), '4100001');
        ContosoGLAccount.AddAccountForLocalization(CreditorsProvServForCurrName(), '4104');
        ContosoGLAccount.AddAccountForLocalization(CreditorsInvNotRecName(), '4109');
        ContosoGLAccount.AddAccountForLocalization(CreditorsBillExPayHeadingName(), '411');
        ContosoGLAccount.AddAccountForLocalization(CreditorsBillExPayName(), '4110');
        ContosoGLAccount.AddAccountForLocalization(CreditorsComOperationsHeadingName(), '419');
        ContosoGLAccount.AddAccountForLocalization(CreditorsComOperationsName(), '4190');
        ContosoGLAccount.AddAccountForLocalization(TradeAccReceivHeadingName(), '43');
        ContosoGLAccount.AddAccountForLocalization(TradeAccReceivName(), '430');
        ContosoGLAccount.AddAccountForLocalization(TradeAccReceivEuroName(), '4300');
        ContosoGLAccount.AddAccountForLocalization(NationalCustomersName(), '4300001');
        ContosoGLAccount.AddAccountForLocalization(InternationalCustomersName(), '4300002');
        ContosoGLAccount.AddAccountForLocalization(InvoicesToBePaidName(), '4300003');
        ContosoGLAccount.AddAccountForLocalization(DiscountedInvoicesAccountName(), '4300004');
        ContosoGLAccount.AddAccountForLocalization(RejectedInvoicesAccountName(), '4300005');
        ContosoGLAccount.AddAccountForLocalization(TradeAccReceivForCurrName(), '4304');
        ContosoGLAccount.AddAccountForLocalization(TradeAccRecInvNotRecName(), '4309');
        ContosoGLAccount.AddAccountForLocalization(TradeAccRecBillsCollName(), '431');
        ContosoGLAccount.AddAccountForLocalization(PendingReceivablesBillsHeadingName(), '4310');
        ContosoGLAccount.AddAccountForLocalization(PendingReceivablesBillsName(), '4310001');
        ContosoGLAccount.AddAccountForLocalization(DiscountedBillsHeadingName(), '4311');
        ContosoGLAccount.AddAccountForLocalization(DiscountedBillsName(), '4311001');
        ContosoGLAccount.AddAccountForLocalization(BillsOnCollectionManagHeadingName(), '4312');
        ContosoGLAccount.AddAccountForLocalization(BillsOnCollectionManagName(), '4312001');
        ContosoGLAccount.AddAccountForLocalization(UnpaidBillsOfExchangeHeadingName(), '4315');
        ContosoGLAccount.AddAccountForLocalization(UnpaidBillsOfExchangeName(), '4315001');
        ContosoGLAccount.AddAccountForLocalization(TradeAccFactoringOpName(), '432');
        ContosoGLAccount.AddAccountForLocalization(TradeAccRecAccGName(), '433');
        ContosoGLAccount.AddAccountForLocalization(GroupTrAccRecEuroHeadingName(), '4330');
        ContosoGLAccount.AddAccountForLocalization(GroupTrAccRecEuroName(), '4330001');
        ContosoGLAccount.AddAccountForLocalization(BillsOfExchRecGName(), '4331');
        ContosoGLAccount.AddAccountForLocalization(TrAccFactoringOpGName(), '4332');
        ContosoGLAccount.AddAccountForLocalization(ForCurrTrAccRecGName(), '4334');
        ContosoGLAccount.AddAccountForLocalization(TrAccRecRetEmptGName(), '4336');
        ContosoGLAccount.AddAccountForLocalization(GroupTrAccRecRetEmptName(), '4337');
        ContosoGLAccount.AddAccountForLocalization(TrAccRecInvNotRecGName(), '4339');
        ContosoGLAccount.AddAccountForLocalization(TradeAcsRecAccAName(), '434');
        ContosoGLAccount.AddAccountForLocalization(TrAccRecOtherVincCompName(), '435');
        ContosoGLAccount.AddAccountForLocalization(BadDoubtfulDebtsName(), '436');
        ContosoGLAccount.AddAccountForLocalization(TrAccRecRetEmptName(), '437');
        ContosoGLAccount.AddAccountForLocalization(TradeDebtorsCreditBalancesName(), '438');
        ContosoGLAccount.AddAccountForLocalization(StTrDebtAdvancesNationalName(), '4380001');
        ContosoGLAccount.AddAccountForLocalization(StTrDebtAdvancesEuName(), '4380002');
        ContosoGLAccount.AddAccountForLocalization(StTrDebtAdvancesExportName(), '4380003');
        ContosoGLAccount.AddAccountForLocalization(OtherDebtorsName(), '44');
        ContosoGLAccount.AddAccountForLocalization(DebtorsHeadingName(), '440');
        ContosoGLAccount.AddAccountForLocalization(DebtorsEuroName(), '4400');
        ContosoGLAccount.AddAccountForLocalization(DebtorsName(), '4400001');
        ContosoGLAccount.AddAccountForLocalization(DebtorsForeignCurrName(), '4404');
        ContosoGLAccount.AddAccountForLocalization(DebtorsInvNotRecName(), '4409');
        ContosoGLAccount.AddAccountForLocalization(DebtorsBillsOfCollectionName(), '441');
        ContosoGLAccount.AddAccountForLocalization(DebtorsReceivablesPendBillsName(), '4410');
        ContosoGLAccount.AddAccountForLocalization(DebtorsDiscountedBillsName(), '4411');
        ContosoGLAccount.AddAccountForLocalization(DebtBillsOnCollManagName(), '4412');
        ContosoGLAccount.AddAccountForLocalization(DebtorsUnpaidBillsName(), '4415');
        ContosoGLAccount.AddAccountForLocalization(BadDoubtfulDebtName(), '446');
        ContosoGLAccount.AddAccountForLocalization(DebtorsJointVenturesName(), '449');
        ContosoGLAccount.AddAccountForLocalization(EmployeesName(), '46');
        ContosoGLAccount.AddAccountForLocalization(RemunerationAdvancesHeadingName(), '460');
        ContosoGLAccount.AddAccountForLocalization(RemunerationAdvancesName(), '4600001');
        ContosoGLAccount.AddAccountForLocalization(PendingRemunerationsName(), '465');
        ContosoGLAccount.AddAccountForLocalization(PendingFixContribSistRemName(), '466');
        ContosoGLAccount.AddAccountForLocalization(GeneralGovernmentName(), '47');
        ContosoGLAccount.AddAccountForLocalization(GovernmentReceivableName(), '470');
        ContosoGLAccount.AddAccountForLocalization(GovernmentVatReceivHeadingName(), '4700');
        ContosoGLAccount.AddAccountForLocalization(GovernmentVatReceivName(), '4700001');
        ContosoGLAccount.AddAccountForLocalization(GovernmentSubvReceivName(), '4708');
        ContosoGLAccount.AddAccountForLocalization(GovernmentTaxReturnReceivName(), '4709');
        ContosoGLAccount.AddAccountForLocalization(SocialSecurityName(), '471');
        ContosoGLAccount.AddAccountForLocalization(SocialSecurityReceivableName(), '4710001');
        ContosoGLAccount.AddAccountForLocalization(ValueAddedTaxDeductName(), '472');
        ContosoGLAccount.AddAccountForLocalization(GovVatDeductibleName(), '4720001');
        ContosoGLAccount.AddAccountForLocalization(GovDeducPaymOnAccHeadingName(), '473');
        ContosoGLAccount.AddAccountForLocalization(GovDeducPaymOnAccName(), '4730001');
        ContosoGLAccount.AddAccountForLocalization(DeferredTaxAssetsName(), '474');
        ContosoGLAccount.AddAccountForLocalization(DeducTemporaryDifferencesName(), '4740');
        ContosoGLAccount.AddAccountForLocalization(DeferredDeductDiscountsName(), '4742');
        ContosoGLAccount.AddAccountForLocalization(CreditForLossesToCompName(), '4745');
        ContosoGLAccount.AddAccountForLocalization(GovernmentCreditorName(), '475');
        ContosoGLAccount.AddAccountForLocalization(GovernmentCreditorVatHeadingName(), '4750');
        ContosoGLAccount.AddAccountForLocalization(GovernmentCreditorVatName(), '4750001');
        ContosoGLAccount.AddAccountForLocalization(GovernmentCreditorIrpfHeadingName(), '4751');
        ContosoGLAccount.AddAccountForLocalization(GovernmentCreditorIrpfName(), '4751001');
        ContosoGLAccount.AddAccountForLocalization(GovCredCorpIncTaxHeadingName(), '4752');
        ContosoGLAccount.AddAccountForLocalization(GovCredCorpIncTaxName(), '4752001');
        ContosoGLAccount.AddAccountForLocalization(GovCreditorSubvHeadingName(), '4758');
        ContosoGLAccount.AddAccountForLocalization(GovCreditorSubvName(), '4758001');
        ContosoGLAccount.AddAccountForLocalization(SocialSecurityCreditorHeadingName(), '476');
        ContosoGLAccount.AddAccountForLocalization(SocialSecurityCreditorName(), '4760001');
        ContosoGLAccount.AddAccountForLocalization(ValueAddTaxCollByCompName(), '477');
        ContosoGLAccount.AddAccountForLocalization(VatCollByTheCompName(), '4770001');
        ContosoGLAccount.AddAccountForLocalization(VatEuReversionName(), '4770011');
        ContosoGLAccount.AddAccountForLocalization(DeferredProfitTaxName(), '479');
        ContosoGLAccount.AddAccountForLocalization(ChargSprOverSevPeriodsName(), '48');
        ContosoGLAccount.AddAccountForLocalization(PrepaymentsName(), '480');
        ContosoGLAccount.AddAccountForLocalization(UnearnedIncomeName(), '485');
        ContosoGLAccount.AddAccountForLocalization(DetCreditValAndStVendName(), '49');
        ContosoGLAccount.AddAccountForLocalization(DetCreditValTradeOperName(), '490');
        ContosoGLAccount.AddAccountForLocalization(DetCreditValTradeOVinName(), '493');
        ContosoGLAccount.AddAccountForLocalization(DetCreditValTradeOGName(), '4933');
        ContosoGLAccount.AddAccountForLocalization(DetCreditValTradeOAName(), '4934');
        ContosoGLAccount.AddAccountForLocalization(DetCreditValTradeOOvName(), '4935');
        ContosoGLAccount.AddAccountForLocalization(ProvForTradeTransactLiabilitiesName(), '499');
        ContosoGLAccount.AddAccountForLocalization(ProvForBurdensomeContractsName(), '4994');
        ContosoGLAccount.AddAccountForLocalization(ProvForOtherTradeTransactName(), '4999');
        ContosoGLAccount.AddAccountForLocalization(FinancialAccountsName(), '5');
        ContosoGLAccount.AddAccountForLocalization(ShortTermInvestmentsName(), '50');
        ContosoGLAccount.AddAccountForLocalization(ShortTermDebentLoansName(), '500');
        ContosoGLAccount.AddAccountForLocalization(TreasureBillsName(), '5000001');
        ContosoGLAccount.AddAccountForLocalization(ConvertibleDebentLoansName(), '501');
        ContosoGLAccount.AddAccountForLocalization(StSharesLiabilityName(), '502');
        ContosoGLAccount.AddAccountForLocalization(DebtsAsMarketableSecName(), '505');
        ContosoGLAccount.AddAccountForLocalization(BorrowingsInterestsName(), '506');
        ContosoGLAccount.AddAccountForLocalization(DividendsLiabilityName(), '507');
        ContosoGLAccount.AddAccountForLocalization(DeprMarketableSecName(), '509');
        ContosoGLAccount.AddAccountForLocalization(DeprOblAndDebLoansName(), '5090');
        ContosoGLAccount.AddAccountForLocalization(DeprConverOblAndDebLName(), '5091');
        ContosoGLAccount.AddAccountForLocalization(DeprOtherMarketableSecName(), '5095');
        ContosoGLAccount.AddAccountForLocalization(ShortTermDebtsWithVincName(), '51');
        ContosoGLAccount.AddAccountForLocalization(StDebtsVincFinInstName(), '510');
        ContosoGLAccount.AddAccountForLocalization(LoansFromFinInstitGName(), '5103');
        ContosoGLAccount.AddAccountForLocalization(LoansFromFinInstitAName(), '5104');
        ContosoGLAccount.AddAccountForLocalization(LoansFromFinInstitOthName(), '5105');
        ContosoGLAccount.AddAccountForLocalization(FixedAssetCredVincCName(), '511');
        ContosoGLAccount.AddAccountForLocalization(FixedAssetCredGName(), '5113');
        ContosoGLAccount.AddAccountForLocalization(FixedAssetCreditorsAName(), '5114');
        ContosoGLAccount.AddAccountForLocalization(FixedAssetsCredOthName(), '5115');
        ContosoGLAccount.AddAccountForLocalization(StFinLeaseCredVincCName(), '512');
        ContosoGLAccount.AddAccountForLocalization(StFinLeaseCredGName(), '5123');
        ContosoGLAccount.AddAccountForLocalization(StFinLeaseCredAName(), '5124');
        ContosoGLAccount.AddAccountForLocalization(StFinLeaseCredOthName(), '5125');
        ContosoGLAccount.AddAccountForLocalization(OtherStDebtsVincCName(), '513');
        ContosoGLAccount.AddAccountForLocalization(ShortTermDebtsGName(), '5133');
        ContosoGLAccount.AddAccountForLocalization(ShortTermDebtsAName(), '5134');
        ContosoGLAccount.AddAccountForLocalization(ShortTermDebtsOthName(), '5135');
        ContosoGLAccount.AddAccountForLocalization(StDebtInterestsVincCName(), '514');
        ContosoGLAccount.AddAccountForLocalization(DebtInterestsGName(), '5143');
        ContosoGLAccount.AddAccountForLocalization(DebtInterestsAName(), '5144');
        ContosoGLAccount.AddAccountForLocalization(DebtInterestsOthName(), '5145');
        ContosoGLAccount.AddAccountForLocalization(StLoansDebtName(), '52');
        ContosoGLAccount.AddAccountForLocalization(StLoansFromFinInstitutHeadingName(), '520');
        ContosoGLAccount.AddAccountForLocalization(StLoansFromFinInstitutName(), '5200');
        ContosoGLAccount.AddAccountForLocalization(ShortTermLoansPostingName(), '5200001');
        ContosoGLAccount.AddAccountForLocalization(StDebtsForCreditsName(), '5201');
        ContosoGLAccount.AddAccountForLocalization(DebtOnDiscountedBillsHeadingName(), '5208');
        ContosoGLAccount.AddAccountForLocalization(DebtOnDiscountedBillsName(), '5208001');
        ContosoGLAccount.AddAccountForLocalization(DiscInvoiceDebtAccName(), '5208002');
        ContosoGLAccount.AddAccountForLocalization(FactoringOpDebtAccName(), '5209');
        ContosoGLAccount.AddAccountForLocalization(ShortTermLoansName(), '521');
        ContosoGLAccount.AddAccountForLocalization(DebtInSubvAndLegName(), '522');
        ContosoGLAccount.AddAccountForLocalization(StFixedAssetCreditorsName(), '523');
        ContosoGLAccount.AddAccountForLocalization(StFinLeaseCreditorsName(), '524');
        ContosoGLAccount.AddAccountForLocalization(StBillOfExchPayName(), '525');
        ContosoGLAccount.AddAccountForLocalization(ActiveDividendToPayName(), '526');
        ContosoGLAccount.AddAccountForLocalization(ShortTermDebtIntCredInstName(), '527');
        ContosoGLAccount.AddAccountForLocalization(ShortTermDebtInterestName(), '528');
        ContosoGLAccount.AddAccountForLocalization(ShortTermProvisionsName(), '529');
        ContosoGLAccount.AddAccountForLocalization(ProvisionForPensionsHeadingName(), '5290');
        ContosoGLAccount.AddAccountForLocalization(TaxationReserveHeadingName(), '5291');
        ContosoGLAccount.AddAccountForLocalization(ProvisionForResponsibilitiesHeadingName(), '5292');
        ContosoGLAccount.AddAccountForLocalization(ProvisionForFaDismantleName(), '5293');
        ContosoGLAccount.AddAccountForLocalization(ProvForEnvironmentalActHeadingName(), '5295');
        ContosoGLAccount.AddAccountForLocalization(ProvForRestructuringName(), '5296');
        ContosoGLAccount.AddAccountForLocalization(ProvForPaymLiabInstName(), '5297');
        ContosoGLAccount.AddAccountForLocalization(GroupAssocFinInvestmName(), '53');
        ContosoGLAccount.AddAccountForLocalization(StTradeInvestmVincName(), '530');
        ContosoGLAccount.AddAccountForLocalization(StTradeInvestmGName(), '5303');
        ContosoGLAccount.AddAccountForLocalization(StTradeInvestmAName(), '5304');
        ContosoGLAccount.AddAccountForLocalization(StTradeInvestmOthName(), '5305');
        ContosoGLAccount.AddAccountForLocalization(StFixedIncomeSecVincName(), '531');
        ContosoGLAccount.AddAccountForLocalization(StFixedIncomeSecGName(), '5313');
        ContosoGLAccount.AddAccountForLocalization(StFixedIncomeSecAName(), '5314');
        ContosoGLAccount.AddAccountForLocalization(StFixedIncomeSecOthName(), '5315');
        ContosoGLAccount.AddAccountForLocalization(StLoansToVincCompName(), '532');
        ContosoGLAccount.AddAccountForLocalization(StLoansToGroupCName(), '5323');
        ContosoGLAccount.AddAccountForLocalization(StLoansToACompName(), '5324');
        ContosoGLAccount.AddAccountForLocalization(StLoansToOtherVincCName(), '5325');
        ContosoGLAccount.AddAccountForLocalization(FinInvestmInterestVincName(), '533');
        ContosoGLAccount.AddAccountForLocalization(FinInvestmInterestGName(), '5333');
        ContosoGLAccount.AddAccountForLocalization(FinInvestmInterestsAName(), '5334');
        ContosoGLAccount.AddAccountForLocalization(FinInvestmInterestsOthName(), '5335');
        ContosoGLAccount.AddAccountForLocalization(StInterestCreditsToVincName(), '534');
        ContosoGLAccount.AddAccountForLocalization(StInterestCreditsGName(), '5343');
        ContosoGLAccount.AddAccountForLocalization(StInterestCreditsAName(), '5344');
        ContosoGLAccount.AddAccountForLocalization(StInterestCreditsOthName(), '5345');
        ContosoGLAccount.AddAccountForLocalization(DividReceivFinInvInVincName(), '535');
        ContosoGLAccount.AddAccountForLocalization(DividReceivFinInvGName(), '5353');
        ContosoGLAccount.AddAccountForLocalization(DividReceivFinInvAName(), '5354');
        ContosoGLAccount.AddAccountForLocalization(DividReceivFinInvOthName(), '5355');
        ContosoGLAccount.AddAccountForLocalization(StDemandExpendEqVincName(), '539');
        ContosoGLAccount.AddAccountForLocalization(StDemandExpendEqGName(), '5393');
        ContosoGLAccount.AddAccountForLocalization(StDemandExpendEqAName(), '5394');
        ContosoGLAccount.AddAccountForLocalization(StDemandExpendEqOthName(), '5395');
        ContosoGLAccount.AddAccountForLocalization(InterimFinancialInvestmName(), '54');
        ContosoGLAccount.AddAccountForLocalization(InvestmentsInCapitalInstName(), '540');
        ContosoGLAccount.AddAccountForLocalization(StFixedIncomeSecurityName(), '541');
        ContosoGLAccount.AddAccountForLocalization(StFixedIncomeInvestmName(), '5410001');
        ContosoGLAccount.AddAccountForLocalization(ShortTermLoansHeadingName(), '542');
        ContosoGLAccount.AddAccountForLocalization(StFaTransferenceLoansName(), '543');
        ContosoGLAccount.AddAccountForLocalization(StaffStCreditsName(), '544');
        ContosoGLAccount.AddAccountForLocalization(DividendsReceivableName(), '545');
        ContosoGLAccount.AddAccountForLocalization(SecuritiesStInterestsName(), '546');
        ContosoGLAccount.AddAccountForLocalization(StCreditsInterestsName(), '547');
        ContosoGLAccount.AddAccountForLocalization(ShortTermTaxationsName(), '548');
        ContosoGLAccount.AddAccountForLocalization(StAmtsUncalledOnSharesName(), '549');
        ContosoGLAccount.AddAccountForLocalization(OtherNonBankAccountsName(), '55');
        ContosoGLAccount.AddAccountForLocalization(ProprietorsAccountName(), '550');
        ContosoGLAccount.AddAccountForLocalization(PartnAdministrCheckingAccName(), '551');
        ContosoGLAccount.AddAccountForLocalization(OthersCheckingAccName(), '552');
        ContosoGLAccount.AddAccountForLocalization(GroupVincCheckingAccName(), '5523');
        ContosoGLAccount.AddAccountForLocalization(AsocVincCheckingAccName(), '5524');
        ContosoGLAccount.AddAccountForLocalization(OthersVincCheckingAccName(), '5525');
        ContosoGLAccount.AddAccountForLocalization(MergeAndSplitCheckAccName(), '553');
        ContosoGLAccount.AddAccountForLocalization(PartnersDissolvedSocietyName(), '5530');
        ContosoGLAccount.AddAccountForLocalization(PartnersMergeAccName(), '5531');
        ContosoGLAccount.AddAccountForLocalization(PartnersSplitSocietyName(), '5532');
        ContosoGLAccount.AddAccountForLocalization(PartnersSplitAccName(), '5533');
        ContosoGLAccount.AddAccountForLocalization(TemporaryJoinsChecAccName(), '554');
        ContosoGLAccount.AddAccountForLocalization(UnappliedItemsName(), '555');
        ContosoGLAccount.AddAccountForLocalization(DemandExpendOnEquityName(), '556');
        ContosoGLAccount.AddAccountForLocalization(DemandExpendEqGroupName(), '5563');
        ContosoGLAccount.AddAccountForLocalization(DemandExpendEqAsocName(), '5564');
        ContosoGLAccount.AddAccountForLocalization(DemandExpendEqOtVinName(), '5565');
        ContosoGLAccount.AddAccountForLocalization(DemandExpendEqOthersName(), '5566');
        ContosoGLAccount.AddAccountForLocalization(InterimActiveDividendsName(), '557');
        ContosoGLAccount.AddAccountForLocalization(SharehPaymentCallableName(), '558');
        ContosoGLAccount.AddAccountForLocalization(SharehPayCallSharesOrGName(), '5580');
        ContosoGLAccount.AddAccountForLocalization(SharehPayCallFinLiabName(), '5585');
        ContosoGLAccount.AddAccountForLocalization(DerivativeInstrumentStName(), '559');
        ContosoGLAccount.AddAccountForLocalization(StFinDerivAssetsPortfolioName(), '5590');
        ContosoGLAccount.AddAccountForLocalization(AssetsDerivInstStCovInsName(), '5593');
        ContosoGLAccount.AddAccountForLocalization(LiabDerivInstStPortfolioName(), '5595');
        ContosoGLAccount.AddAccountForLocalization(LiabDerivInstStCovInsName(), '5598');
        ContosoGLAccount.AddAccountForLocalization(SecDepositsReceivGuarantName(), '56');
        ContosoGLAccount.AddAccountForLocalization(ShortTermGuaranteesReceivName(), '560');
        ContosoGLAccount.AddAccountForLocalization(ShortTermDepositsReceivName(), '561');
        ContosoGLAccount.AddAccountForLocalization(ShortTermGuaranteedSecName(), '565');
        ContosoGLAccount.AddAccountForLocalization(ShortTermGuarantDepositsName(), '566');
        ContosoGLAccount.AddAccountForLocalization(InterestPaidInAdvanceName(), '567');
        ContosoGLAccount.AddAccountForLocalization(InterestReceivedInAdvanceName(), '568');
        ContosoGLAccount.AddAccountForLocalization(FinancialGuaranteesStName(), '569');
        ContosoGLAccount.AddAccountForLocalization(CashFlowName(), '57');
        ContosoGLAccount.AddAccountForLocalization(CashEuroHeadingName(), '570');
        ContosoGLAccount.AddAccountForLocalization(CashEuroName(), '');
        ContosoGLAccount.AddAccountForLocalization(CashForeignCurrencyName(), '571');
        ContosoGLAccount.AddAccountForLocalization(BanksAccountAtSightEuroName(), '572');
        ContosoGLAccount.AddAccountForLocalization(BanksEuroName(), '5720001');
        ContosoGLAccount.AddAccountForLocalization(BanksAccAtSightFCurrName(), '573');
        ContosoGLAccount.AddAccountForLocalization(BanksForeignCurrencyName(), '5730001');
        ContosoGLAccount.AddAccountForLocalization(BanksSavingAccEuroName(), '574');
        ContosoGLAccount.AddAccountForLocalization(SavingAccountName(), '5740001');
        ContosoGLAccount.AddAccountForLocalization(BanksSavingAccForCurrName(), '575');
        ContosoGLAccount.AddAccountForLocalization(HighLiqStInvestmName(), '576');
        ContosoGLAccount.AddAccountForLocalization(NonCurrentAssetsForSaleName(), '58');
        ContosoGLAccount.AddAccountForLocalization(InvestmWithVincCompName(), '581');
        ContosoGLAccount.AddAccountForLocalization(FinancialInvestmentsName(), '582');
        ContosoGLAccount.AddAccountForLocalization(InventoryTradeDebtorsName(), '583');
        ContosoGLAccount.AddAccountForLocalization(OtherAssetsName(), '584');
        ContosoGLAccount.AddAccountForLocalization(ProvisionsName(), '585');
        ContosoGLAccount.AddAccountForLocalization(SpecialCharactDebtsName(), '586');
        ContosoGLAccount.AddAccountForLocalization(DebtsWithVincCompName(), '587');
        ContosoGLAccount.AddAccountForLocalization(TradeCreditorsAndOthPayName(), '588');
        ContosoGLAccount.AddAccountForLocalization(DetValueFinancialProductsName(), '59');
        ContosoGLAccount.AddAccountForLocalization(DetValueStPartVincName(), '593');
        ContosoGLAccount.AddAccountForLocalization(DetValueStPartGName(), '5933');
        ContosoGLAccount.AddAccountForLocalization(DetValueStPartAName(), '5934');
        ContosoGLAccount.AddAccountForLocalization(DetValueStSecVincCName(), '594');
        ContosoGLAccount.AddAccountForLocalization(DetValueStSecGName(), '5943');
        ContosoGLAccount.AddAccountForLocalization(DetValueStSecAName(), '5944');
        ContosoGLAccount.AddAccountForLocalization(DetValueStSecOVinName(), '5945');
        ContosoGLAccount.AddAccountForLocalization(DetValueStCreditsToVincName(), '595');
        ContosoGLAccount.AddAccountForLocalization(DetValueStCreditsToGName(), '5953');
        ContosoGLAccount.AddAccountForLocalization(DetValueStCreditsToAsName(), '5954');
        ContosoGLAccount.AddAccountForLocalization(DetValueStCreditsToOtVName(), '5955');
        ContosoGLAccount.AddAccountForLocalization(DetValueStSecuritiesName(), '597');
        ContosoGLAccount.AddAccountForLocalization(DetValueStCreditsName(), '598');
        ContosoGLAccount.AddAccountForLocalization(DetValNoncurrAForSaleName(), '599');
        ContosoGLAccount.AddAccountForLocalization(DetValFixNoncAForSaleName(), '5990');
        ContosoGLAccount.AddAccountForLocalization(DetValRelatedInvesForSaleName(), '5991');
        ContosoGLAccount.AddAccountForLocalization(DetValFinInvestForSaleName(), '5992');
        ContosoGLAccount.AddAccountForLocalization(DetValStocksDebtsAndOthName(), '5993');
        ContosoGLAccount.AddAccountForLocalization(DetValOtherAForSaleName(), '5994');
        ContosoGLAccount.AddAccountForLocalization(CostAndExpenseAccountsName(), '6');
        ContosoGLAccount.AddAccountForLocalization(PurchasesName(), '60');
        ContosoGLAccount.AddAccountForLocalization(PurchasesOfGoodsForResaleName(), '600');
        ContosoGLAccount.AddAccountForLocalization(NationalPurchasesName(), '6000001');
        ContosoGLAccount.AddAccountForLocalization(EuPurchasesName(), '6000002');
        ContosoGLAccount.AddAccountForLocalization(IntNonEuPurchName(), '6000003');
        ContosoGLAccount.AddAccountForLocalization(PurchForRawMaterialsName(), '601');
        ContosoGLAccount.AddAccountForLocalization(PurchForNatRawMatName(), '6010001');
        ContosoGLAccount.AddAccountForLocalization(PurchForEuRawMatName(), '6010002');
        ContosoGLAccount.AddAccountForLocalization(PurchIntNonEuRawMatName(), '6010003');
        ContosoGLAccount.AddAccountForLocalization(PurchasesForConsumablesName(), '602');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowedOnPurchName(), '606');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurchFinGoodsName(), '6060');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurFinGoodNName(), '6060001');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurFinGoodEuName(), '6060002');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurFinGoodIName(), '6060003');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurchRawMatName(), '6061');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurcRawMatNName(), '6061001');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurcRawMatEuName(), '6061002');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurcRawMatIName(), '6061003');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurchOthersName(), '6062');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurcOthersNName(), '6062001');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurcOthersEuName(), '6062002');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnPurcOthersIName(), '6062003');
        ContosoGLAccount.AddAccountForLocalization(WorkDoneByOtherCompName(), '607');
        ContosoGLAccount.AddAccountForLocalization(PurchaseReturnsName(), '608');
        ContosoGLAccount.AddAccountForLocalization(GoodsPurchasedReturnsName(), '6080');
        ContosoGLAccount.AddAccountForLocalization(NationalReturnsName(), '6080001');
        ContosoGLAccount.AddAccountForLocalization(EuReturnsName(), '6080002');
        ContosoGLAccount.AddAccountForLocalization(InternationalNonEuRetName(), '6080003');
        ContosoGLAccount.AddAccountForLocalization(MiscellaneousReturnsName(), '6080004');
        ContosoGLAccount.AddAccountForLocalization(RawMatPurchasedReturnsName(), '6081');
        ContosoGLAccount.AddAccountForLocalization(ConsumPurchasedReturnsName(), '6082');
        ContosoGLAccount.AddAccountForLocalization(PurchasesReturnAllowName(), '609');
        ContosoGLAccount.AddAccountForLocalization(GoodsPurchReturnAllowName(), '6090');
        ContosoGLAccount.AddAccountForLocalization(ReturnAndAllowOnGoodsName(), '6090001');
        ContosoGLAccount.AddAccountForLocalization(RawMatPurchRetAllowName(), '6091');
        ContosoGLAccount.AddAccountForLocalization(ReturnAllowOnRawMatName(), '6091001');
        ContosoGLAccount.AddAccountForLocalization(ConsumPurchRetAllowName(), '6092');
        ContosoGLAccount.AddAccountForLocalization(ChangesInStockHeadingName(), '61');
        ContosoGLAccount.AddAccountForLocalization(ChangesInStockName(), '610');
        ContosoGLAccount.AddAccountForLocalization(ChangesInStockPostingName(), '6100001');
        ContosoGLAccount.AddAccountForLocalization(ChangesInRawMaterialsHeadingName(), '611');
        ContosoGLAccount.AddAccountForLocalization(ChangesInRawMaterialsName(), '6110001');
        ContosoGLAccount.AddAccountForLocalization(ChgInSuppOtherConsumName(), '612');
        ContosoGLAccount.AddAccountForLocalization(ExternalChargesForServicesName(), '62');
        ContosoGLAccount.AddAccountForLocalization(ResearchAndDevelopmentName(), '620');
        ContosoGLAccount.AddAccountForLocalization(ProjectsName(), '6200001');
        ContosoGLAccount.AddAccountForLocalization(LeaseAndRoyaltiesName(), '621');
        ContosoGLAccount.AddAccountForLocalization(LeaseChargesPostingName(), '6210001');
        ContosoGLAccount.AddAccountForLocalization(MaintenancesAndRepairsName(), '622');
        ContosoGLAccount.AddAccountForLocalization(RepairsName(), '6220001');
        ContosoGLAccount.AddAccountForLocalization(ProfessionalServicesName(), '623');
        ContosoGLAccount.AddAccountForLocalization(InternalResourcesName(), '6230001');
        ContosoGLAccount.AddAccountForLocalization(ConsultingName(), '6230002');
        ContosoGLAccount.AddAccountForLocalization(ProfessionalAdvisoryServicesName(), '6230003');
        ContosoGLAccount.AddAccountForLocalization(ProjectCostsRetailName(), '6230004');
        ContosoGLAccount.AddAccountForLocalization(ProjectCostsAdjustmentName(), '6230005');
        ContosoGLAccount.AddAccountForLocalization(ProjectCostsRecognizedName(), '6230006');
        ContosoGLAccount.AddAccountForLocalization(ProjectsCostsRawMaterialName(), '6230007');
        ContosoGLAccount.AddAccountForLocalization(ProjectsCostsResourcesName(), '6230008');
        ContosoGLAccount.AddAccountForLocalization(TransportationHeadingName(), '624');
        ContosoGLAccount.AddAccountForLocalization(TransportationName(), '6240001');
        ContosoGLAccount.AddAccountForLocalization(FuelName(), '6240002');
        ContosoGLAccount.AddAccountForLocalization(InsurancePremiumsHeadingName(), '625');
        ContosoGLAccount.AddAccountForLocalization(InsurancePremiumsName(), '6250001');
        ContosoGLAccount.AddAccountForLocalization(BankingServicesHeadingName(), '626');
        ContosoGLAccount.AddAccountForLocalization(BankingServicesName(), '6260001');
        ContosoGLAccount.AddAccountForLocalization(AdvertisingPublicRelationsName(), '627');
        ContosoGLAccount.AddAccountForLocalization(SuppliesName(), '628');
        ContosoGLAccount.AddAccountForLocalization(ElectricityName(), '6280001');
        ContosoGLAccount.AddAccountForLocalization(WaterName(), '6280002');
        ContosoGLAccount.AddAccountForLocalization(OtherSuppliesName(), '6280010');
        ContosoGLAccount.AddAccountForLocalization(OtherServicesHeadingName(), '629');
        ContosoGLAccount.AddAccountForLocalization(OtherServicesName(), '6290001');
        ContosoGLAccount.AddAccountForLocalization(OtherBusinessExpensesName(), '6290003');
        ContosoGLAccount.AddAccountForLocalization(TaxName(), '63');
        ContosoGLAccount.AddAccountForLocalization(ProfitTaxHeadingName(), '630');
        ContosoGLAccount.AddAccountForLocalization(RunningTaxName(), '6300');
        ContosoGLAccount.AddAccountForLocalization(ProfitTaxName(), '6300001');
        ContosoGLAccount.AddAccountForLocalization(DeferredTaxName(), '6301');
        ContosoGLAccount.AddAccountForLocalization(OtherTaxesHeadingName(), '631');
        ContosoGLAccount.AddAccountForLocalization(OtherTaxesName(), '6310001');
        ContosoGLAccount.AddAccountForLocalization(NegativeAdjustmOnProfitsName(), '633');
        ContosoGLAccount.AddAccountForLocalization(NegativeAdjustmIndivTaxName(), '634');
        ContosoGLAccount.AddAccountForLocalization(NegativeAdjustmRunningActName(), '6341');
        ContosoGLAccount.AddAccountForLocalization(NegativeAdjustmInvestTaxName(), '6342');
        ContosoGLAccount.AddAccountForLocalization(TaxRefundsName(), '636');
        ContosoGLAccount.AddAccountForLocalization(PositiveAdjustmOnProfitsName(), '638');
        ContosoGLAccount.AddAccountForLocalization(PositiveAdjustmIndivTaxName(), '639');
        ContosoGLAccount.AddAccountForLocalization(PositiveAdjustmRunningActName(), '6391');
        ContosoGLAccount.AddAccountForLocalization(PositiveAdjustmInvestTaxName(), '6392');
        ContosoGLAccount.AddAccountForLocalization(WagesAndSalariesHeadingName(), '640');
        ContosoGLAccount.AddAccountForLocalization(WagesAndSalariesName(), '6400001');
        ContosoGLAccount.AddAccountForLocalization(PrizesName(), '6400002');
        ContosoGLAccount.AddAccountForLocalization(PensionFundsName(), '6400003');
        ContosoGLAccount.AddAccountForLocalization(CompensationsName(), '641');
        ContosoGLAccount.AddAccountForLocalization(SocialSecPaidByCompanyHeadingName(), '642');
        ContosoGLAccount.AddAccountForLocalization(SocialSecPaidByCompanyName(), '6420001');
        ContosoGLAccount.AddAccountForLocalization(LtFeeInFixedContribSistName(), '643');
        ContosoGLAccount.AddAccountForLocalization(LtFeeInFixedProvisionSisName(), '644');
        ContosoGLAccount.AddAccountForLocalization(AnnualContributionsName(), '6440');
        ContosoGLAccount.AddAccountForLocalization(OtherCostsName(), '6442');
        ContosoGLAccount.AddAccountForLocalization(FeesByEquityProductsName(), '645');
        ContosoGLAccount.AddAccountForLocalization(PersonnelRetEqProdName(), '6450');
        ContosoGLAccount.AddAccountForLocalization(PersonnelRetCashEqProdName(), '6457');
        ContosoGLAccount.AddAccountForLocalization(OtherSocialExpensesName(), '649');
        ContosoGLAccount.AddAccountForLocalization(BadDebtLossesName(), '650');
        ContosoGLAccount.AddAccountForLocalization(PartnershipsAndOthersName(), '651');
        ContosoGLAccount.AddAccountForLocalization(TransferredProfitAdminName(), '6510');
        ContosoGLAccount.AddAccountForLocalization(TransferredLossParticipantName(), '6511');
        ContosoGLAccount.AddAccountForLocalization(OtherOperatingLossesName(), '659');
        ContosoGLAccount.AddAccountForLocalization(FinancialExpensesName(), '66');
        ContosoGLAccount.AddAccountForLocalization(FinExpProvUpdatesName(), '660');
        ContosoGLAccount.AddAccountForLocalization(InterestDebentLoansName(), '661');
        ContosoGLAccount.AddAccountForLocalization(LtInterestDebentLoansGName(), '6610');
        ContosoGLAccount.AddAccountForLocalization(LtInterestDebentLoansAName(), '6611');
        ContosoGLAccount.AddAccountForLocalization(LtInterestDebentLoansOvName(), '6612');
        ContosoGLAccount.AddAccountForLocalization(LtInterestDebentLoansOtName(), '6613');
        ContosoGLAccount.AddAccountForLocalization(StInterestDebentLoansGName(), '6615');
        ContosoGLAccount.AddAccountForLocalization(StInterestDebentLoansAName(), '6616');
        ContosoGLAccount.AddAccountForLocalization(StInterestDebentLoansOvName(), '6617');
        ContosoGLAccount.AddAccountForLocalization(StInterestDebentLoansOtName(), '6618');
        ContosoGLAccount.AddAccountForLocalization(DebtInterestName(), '662');
        ContosoGLAccount.AddAccountForLocalization(DebtInterestGroupName(), '6620');
        ContosoGLAccount.AddAccountForLocalization(DebtInterestAssocName(), '6621');
        ContosoGLAccount.AddAccountForLocalization(DebtInterestOtVincName(), '6622');
        ContosoGLAccount.AddAccountForLocalization(DebtInterestFinInsName(), '6623');
        ContosoGLAccount.AddAccountForLocalization(DebtInterestOtherName(), '6624');
        ContosoGLAccount.AddAccountForLocalization(LossesFinInstValueFVName(), '663');
        ContosoGLAccount.AddAccountForLocalization(PortfolioLossesName(), '6630');
        ContosoGLAccount.AddAccountForLocalization(LossesAssignByCompName(), '6631');
        ContosoGLAccount.AddAccountForLocalization(LossesAvailForSaleName(), '6632');
        ContosoGLAccount.AddAccountForLocalization(CoverageInstLossesName(), '6633');
        ContosoGLAccount.AddAccountForLocalization(DividendLiabilityName(), '664');
        ContosoGLAccount.AddAccountForLocalization(DividendLiabilityGName(), '6640');
        ContosoGLAccount.AddAccountForLocalization(DividendLiabilityAName(), '6641');
        ContosoGLAccount.AddAccountForLocalization(DividendLiabilityOVinName(), '6642');
        ContosoGLAccount.AddAccountForLocalization(DividendLiabilityOthName(), '6643');
        ContosoGLAccount.AddAccountForLocalization(InterestOnBillsDiscName(), '665');
        ContosoGLAccount.AddAccountForLocalization(IntOnBillsDiscFinInsGName(), '6650');
        ContosoGLAccount.AddAccountForLocalization(IntOnBillsDiscFinInsAName(), '6651');
        ContosoGLAccount.AddAccountForLocalization(IntOnBillsDiscFinInsVName(), '6652');
        ContosoGLAccount.AddAccountForLocalization(InterestOnBillsDiscOthName(), '6653');
        ContosoGLAccount.AddAccountForLocalization(InterestOnBillsDiscountedName(), '6653001');
        ContosoGLAccount.AddAccountForLocalization(FactOpInterBanksGName(), '6654');
        ContosoGLAccount.AddAccountForLocalization(FactOpInterBanksAName(), '6655');
        ContosoGLAccount.AddAccountForLocalization(FactOpInterBanksVName(), '6656');
        ContosoGLAccount.AddAccountForLocalization(FactOpInterOtherBanksHeadingName(), '6657');
        ContosoGLAccount.AddAccountForLocalization(FactOpInterOtherBanksName(), '6657001');
        ContosoGLAccount.AddAccountForLocalization(SecuritiesLossName(), '666');
        ContosoGLAccount.AddAccountForLocalization(LtSecuritiesLossGName(), '6660');
        ContosoGLAccount.AddAccountForLocalization(LtSecuritiesLossAName(), '6661');
        ContosoGLAccount.AddAccountForLocalization(LtSecuritiesLossOVinName(), '6662');
        ContosoGLAccount.AddAccountForLocalization(LtSecuritiesLossOthName(), '6663');
        ContosoGLAccount.AddAccountForLocalization(StSecuritiesLossGName(), '6665');
        ContosoGLAccount.AddAccountForLocalization(StSecuritiesLossAName(), '6666');
        ContosoGLAccount.AddAccountForLocalization(StSecuritiesLossOVinName(), '6667');
        ContosoGLAccount.AddAccountForLocalization(StSecuritiesLossOthName(), '6668');
        ContosoGLAccount.AddAccountForLocalization(LoanLossName(), '667');
        ContosoGLAccount.AddAccountForLocalization(LtLoanLossGName(), '6670');
        ContosoGLAccount.AddAccountForLocalization(LtLoanLossAName(), '6671');
        ContosoGLAccount.AddAccountForLocalization(LtLoanLossOVinName(), '6672');
        ContosoGLAccount.AddAccountForLocalization(LtLoanLossOthName(), '6673');
        ContosoGLAccount.AddAccountForLocalization(StLoanLossGName(), '6675');
        ContosoGLAccount.AddAccountForLocalization(StLoanLossAName(), '6676');
        ContosoGLAccount.AddAccountForLocalization(StLoanLossOVinName(), '6677');
        ContosoGLAccount.AddAccountForLocalization(StLoanLossOthName(), '6678');
        ContosoGLAccount.AddAccountForLocalization(RealizedLossesOnExchangeHeadingName(), '668');
        ContosoGLAccount.AddAccountForLocalization(RealLossExchInternEurHeadingName(), '6680');
        ContosoGLAccount.AddAccountForLocalization(RealLossExchInternEurName(), '6680001');
        ContosoGLAccount.AddAccountForLocalization(OtherRealLossesOnExchName(), '6681');
        ContosoGLAccount.AddAccountForLocalization(RealizedLossesOnExchangeName(), '6681001');
        ContosoGLAccount.AddAccountForLocalization(OtherFinancialExpensesHeadingExpensesName(), '669');
        ContosoGLAccount.AddAccountForLocalization(ExpenOnRoundOffEurHeadingName(), '6690');
        ContosoGLAccount.AddAccountForLocalization(ExpenOnRoundOffEurName(), '6690001');
        ContosoGLAccount.AddAccountForLocalization(NegativeBalanceOnSettlName(), '6690002');
        ContosoGLAccount.AddAccountForLocalization(OtherFinancialExpensesHeadingName(), '6691');
        ContosoGLAccount.AddAccountForLocalization(OtherFinancialExpensesName(), '6691001');
        ContosoGLAccount.AddAccountForLocalization(OtherFinExpBillRejectName(), '6691002');
        ContosoGLAccount.AddAccountForLocalization(ExcepExtrItemsExpName(), '67');
        ContosoGLAccount.AddAccountForLocalization(LossOnIntangATransfName(), '670');
        ContosoGLAccount.AddAccountForLocalization(LossOnTangAssetsTransfHeadingName(), '671');
        ContosoGLAccount.AddAccountForLocalization(LossOnTangAssetsTransfName(), '6710001');
        ContosoGLAccount.AddAccountForLocalization(LossOnPropertiesInvestmName(), '672');
        ContosoGLAccount.AddAccountForLocalization(LossOnLtEqInvestVinCName(), '673');
        ContosoGLAccount.AddAccountForLocalization(LossOnLtEqInvestGName(), '6733');
        ContosoGLAccount.AddAccountForLocalization(LossOnLtEqInvestAName(), '6734');
        ContosoGLAccount.AddAccountForLocalization(LossOnLtEqInvestOVinName(), '6735');
        ContosoGLAccount.AddAccountForLocalization(LossOnDebentLoansName(), '675');
        ContosoGLAccount.AddAccountForLocalization(DeprecAmortizOfFaName(), '68');
        ContosoGLAccount.AddAccountForLocalization(DeprOfIntangAssetsName(), '680');
        ContosoGLAccount.AddAccountForLocalization(DeprOfTangAssetsHeadingName(), '681');
        ContosoGLAccount.AddAccountForLocalization(DeprOfTangAssetsName(), '6810001');
        ContosoGLAccount.AddAccountForLocalization(DeprOnPropertiesInvestmName(), '682');
        ContosoGLAccount.AddAccountForLocalization(DetLossesAndOthersName(), '69');
        ContosoGLAccount.AddAccountForLocalization(DetLossOnIntangibleAName(), '690');
        ContosoGLAccount.AddAccountForLocalization(DetLossOnTangibleAName(), '691');
        ContosoGLAccount.AddAccountForLocalization(DetLossOnPropertiesInvestName(), '692');
        ContosoGLAccount.AddAccountForLocalization(DetLossOnInventoryName(), '693');
        ContosoGLAccount.AddAccountForLocalization(DetLossOnFinishAndWipName(), '6930');
        ContosoGLAccount.AddAccountForLocalization(DetLossOnGoodsName(), '6931');
        ContosoGLAccount.AddAccountForLocalization(DetLossOnRawMatName(), '6932');
        ContosoGLAccount.AddAccountForLocalization(DetLossOnSupOtConsName(), '6933');
        ContosoGLAccount.AddAccountForLocalization(DetLossOnTradeCreditsName(), '694');
        ContosoGLAccount.AddAccountForLocalization(ProvForTradeTransactHeadingName(), '695');
        ContosoGLAccount.AddAccountForLocalization(OnerousContractsName(), '6954');
        ContosoGLAccount.AddAccountForLocalization(OtherTradeTransactName(), '6959');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtSecuritiesName(), '696');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtCapitalInstGName(), '6960');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtCapitalInstAName(), '6961');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtCapitalInsOvName(), '6962');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtCapitalInsOName(), '6963');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtSecGName(), '6965');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtSecAName(), '6966');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtSecOVinName(), '6967');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtSecOthName(), '6968');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtCreditsName(), '697');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtCreditsGName(), '6970');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtCreditsAName(), '6971');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtCreditsOVName(), '6972');
        ContosoGLAccount.AddAccountForLocalization(LossesDetLtCreditsOthName(), '6973');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStSecuritiesName(), '698');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStCapitalInstGName(), '6980');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStCapitalInstAName(), '6981');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStCapitalInsOvName(), '6982');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStCapitalInstOName(), '6983');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStSecuritiesGName(), '6985');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStSecuritiesAName(), '6986');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStSecuritiesOvName(), '6987');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStSecuritiesOName(), '6988');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStCreditsName(), '699');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStCreditsGName(), '6990');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStCreditsAName(), '6991');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStCreditsOVName(), '6992');
        ContosoGLAccount.AddAccountForLocalization(LossesDetStCreditsOthName(), '6993');
        ContosoGLAccount.AddAccountForLocalization(SalesAndIncomeName(), '7');
        ContosoGLAccount.AddAccountForLocalization(GoodsSalesServicesName(), '70');
        ContosoGLAccount.AddAccountForLocalization(GoodsSalesHeadingName(), '700');
        ContosoGLAccount.AddAccountForLocalization(GoodsSalesName(), '7000');
        ContosoGLAccount.AddAccountForLocalization(NationalGoodsSalesName(), '7000001');
        ContosoGLAccount.AddAccountForLocalization(GoodsSalesEuName(), '7000002');
        ContosoGLAccount.AddAccountForLocalization(IntNonEuGoodsSalesName(), '7000003');
        ContosoGLAccount.AddAccountForLocalization(RawMaterialsSalesName(), '7001');
        ContosoGLAccount.AddAccountForLocalization(NationalRawMatSalesName(), '7001001');
        ContosoGLAccount.AddAccountForLocalization(EuRawMaterialsSalesName(), '7001002');
        ContosoGLAccount.AddAccountForLocalization(IntRawMatSalesName(), '7001003');
        ContosoGLAccount.AddAccountForLocalization(FinishedGoodsSalesName(), '701');
        ContosoGLAccount.AddAccountForLocalization(SemiManufPartsSalesName(), '702');
        ContosoGLAccount.AddAccountForLocalization(ByProductsScrapSalesName(), '703');
        ContosoGLAccount.AddAccountForLocalization(RetEmpPackSalesName(), '704');
        ContosoGLAccount.AddAccountForLocalization(ProvisionOfServicesHeadingName(), '705');
        ContosoGLAccount.AddAccountForLocalization(ProvisionOfServicesName(), '7050001');
        ContosoGLAccount.AddAccountForLocalization(InternalResourcesPostingName(), '7050002');
        ContosoGLAccount.AddAccountForLocalization(ProjectsSalesName(), '7050003');
        ContosoGLAccount.AddAccountForLocalization(OtherServicesPostingName(), '7050004');
        ContosoGLAccount.AddAccountForLocalization(ProjectsSalesAdjustmentName(), '7050005');
        ContosoGLAccount.AddAccountForLocalization(ProjectsSalesRecognizedName(), '7050006');
        ContosoGLAccount.AddAccountForLocalization(NationalServicesName(), '7050011');
        ContosoGLAccount.AddAccountForLocalization(EuServicesName(), '7050012');
        ContosoGLAccount.AddAccountForLocalization(IntServicesNonEuName(), '7050013');
        ContosoGLAccount.AddAccountForLocalization(TotalSaleOfServContractsName(), '7051');
        ContosoGLAccount.AddAccountForLocalization(ServiceContractSaleName(), '7051001');
        ContosoGLAccount.AddAccountForLocalization(SalesOfServiceContractsName(), '7051002');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowedOnSalesName(), '706');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowedOnSalesGoodsName(), '7060');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSalesGoodsNName(), '7060001');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSalesGoodsEuName(), '7060002');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSalesGoodsIName(), '7060003');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSalesFinGoodsName(), '7061');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSalFinGoodsNName(), '7061001');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSFinGoodsEuName(), '7061002');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSFinGoodsIName(), '7061003');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSalesSemiManufName(), '7062');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSSemiManufNName(), '7062001');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSSemiManufEuName(), '7062002');
        ContosoGLAccount.AddAccountForLocalization(DiscAllowOnSSemiManufIName(), '7062003');
        ContosoGLAccount.AddAccountForLocalization(DiscAllOnSalProdScrapRetName(), '7063');
        ContosoGLAccount.AddAccountForLocalization(DiscAllOnSProdScrRetNName(), '7063001');
        ContosoGLAccount.AddAccountForLocalization(DiscAllOnSProdScrRetEuName(), '7063002');
        ContosoGLAccount.AddAccountForLocalization(DiscAllOnSProdScrRetIName(), '7063003');
        ContosoGLAccount.AddAccountForLocalization(SalesReturnsName(), '708');
        ContosoGLAccount.AddAccountForLocalization(GoodsReturnsName(), '7080');
        ContosoGLAccount.AddAccountForLocalization(NationalReturnsPostingName(), '7080001');
        ContosoGLAccount.AddAccountForLocalization(EuReturnsPostingName(), '7080002');
        ContosoGLAccount.AddAccountForLocalization(IntNonEuReturnsName(), '7080003');
        ContosoGLAccount.AddAccountForLocalization(FinishedGoodsReturnsName(), '7081');
        ContosoGLAccount.AddAccountForLocalization(SemiManufPartsReturnsName(), '7082');
        ContosoGLAccount.AddAccountForLocalization(ByProductsScrapReturnsName(), '7083');
        ContosoGLAccount.AddAccountForLocalization(RetEmpPackReturnsName(), '7084');
        ContosoGLAccount.AddAccountForLocalization(SalesReturnAllowName(), '709');
        ContosoGLAccount.AddAccountForLocalization(GoodsSalesReturnAllowHeadingName(), '7090');
        ContosoGLAccount.AddAccountForLocalization(GoodsSalesReturnAllowName(), '7090001');
        ContosoGLAccount.AddAccountForLocalization(FinishGoodsSalesRetAllowName(), '7091');
        ContosoGLAccount.AddAccountForLocalization(SemiManPSalesRetAllowName(), '7092');
        ContosoGLAccount.AddAccountForLocalization(ByProdScrapSalesRetAllowName(), '7093');
        ContosoGLAccount.AddAccountForLocalization(RetEmpPackSalesRetAllowName(), '7094');
        ContosoGLAccount.AddAccountForLocalization(ChangesInStockIncomeName(), '71');
        ContosoGLAccount.AddAccountForLocalization(ChgsProdPrgManufGoodsName(), '710');
        ContosoGLAccount.AddAccountForLocalization(ChgsInSemiManufPartsName(), '711');
        ContosoGLAccount.AddAccountForLocalization(ChangesInFinishedGoodsName(), '712');
        ContosoGLAccount.AddAccountForLocalization(ChgsInByProdOrScrapName(), '713');
        ContosoGLAccount.AddAccountForLocalization(WorksDoneForTheCompName(), '73');
        ContosoGLAccount.AddAccountForLocalization(WorkDoneOnIntangAName(), '730');
        ContosoGLAccount.AddAccountForLocalization(WorkDoneOnTangibleAHeadingName(), '731');
        ContosoGLAccount.AddAccountForLocalization(WorkDoneOnTangibleAName(), '7310001');
        ContosoGLAccount.AddAccountForLocalization(WorkDoneOnRealEstateInvesName(), '732');
        ContosoGLAccount.AddAccountForLocalization(WorkDoneIntgAInProgrName(), '733');
        ContosoGLAccount.AddAccountForLocalization(SubvGrantsAndAdjName(), '74');
        ContosoGLAccount.AddAccountForLocalization(SubvGrantsAndLegaciesName(), '740');
        ContosoGLAccount.AddAccountForLocalization(SubvGrantsAndLegResultName(), '746');
        ContosoGLAccount.AddAccountForLocalization(OtherSubvGrantsAndLegResName(), '747');
        ContosoGLAccount.AddAccountForLocalization(OtherOperatingIncomeName(), '75');
        ContosoGLAccount.AddAccountForLocalization(JointVenturesResultsName(), '751');
        ContosoGLAccount.AddAccountForLocalization(TransferredLossAdminName(), '7510');
        ContosoGLAccount.AddAccountForLocalization(TransferredProfitParticipName(), '7511');
        ContosoGLAccount.AddAccountForLocalization(LeaseChargesHeadingName(), '752');
        ContosoGLAccount.AddAccountForLocalization(RoyFConcessLicencTrdmrksName(), '753');
        ContosoGLAccount.AddAccountForLocalization(CommissionsHeadingName(), '754');
        ContosoGLAccount.AddAccountForLocalization(CommissionsName(), '7540001');
        ContosoGLAccount.AddAccountForLocalization(ServicesDoneToEmployeesName(), '755');
        ContosoGLAccount.AddAccountForLocalization(MiscellaneousServicesHeadingName(), '759');
        ContosoGLAccount.AddAccountForLocalization(MiscellaneousServicesName(), '7590001');
        ContosoGLAccount.AddAccountForLocalization(FinancialIncomeName(), '76');
        ContosoGLAccount.AddAccountForLocalization(IncFromEquityInvestmName(), '760');
        ContosoGLAccount.AddAccountForLocalization(IncFromEquityInvestmGName(), '7600');
        ContosoGLAccount.AddAccountForLocalization(IncFromEquityInvestmAName(), '7601');
        ContosoGLAccount.AddAccountForLocalization(IncFromEquityInvestmOVName(), '7602');
        ContosoGLAccount.AddAccountForLocalization(IncFromEquityInvestmOtName(), '7603');
        ContosoGLAccount.AddAccountForLocalization(IncDebtSecuritiesName(), '761');
        ContosoGLAccount.AddAccountForLocalization(IncDebtSecuritiesGName(), '7610');
        ContosoGLAccount.AddAccountForLocalization(IncDebtSecuritiesAName(), '7611');
        ContosoGLAccount.AddAccountForLocalization(IncDebtSecuritiesOVinName(), '7612');
        ContosoGLAccount.AddAccountForLocalization(IncDebtSecuritiesOthName(), '7613');
        ContosoGLAccount.AddAccountForLocalization(IncFromLoansName(), '762');
        ContosoGLAccount.AddAccountForLocalization(IncFromLtLoansName(), '7620');
        ContosoGLAccount.AddAccountForLocalization(IncFromLtLoansGName(), '76200');
        ContosoGLAccount.AddAccountForLocalization(IncFromLtLoansAName(), '76201');
        ContosoGLAccount.AddAccountForLocalization(IncFromLtLoansOtVinName(), '76202');
        ContosoGLAccount.AddAccountForLocalization(IncLtLoansOthName(), '76203');
        ContosoGLAccount.AddAccountForLocalization(IncomeFromStLoansName(), '7621');
        ContosoGLAccount.AddAccountForLocalization(IncFromStLoansGName(), '76210');
        ContosoGLAccount.AddAccountForLocalization(IncFromStLoansAName(), '76211');
        ContosoGLAccount.AddAccountForLocalization(IncFromStLoansOtVinName(), '76212');
        ContosoGLAccount.AddAccountForLocalization(IncFromStLoansOthName(), '76213');
        ContosoGLAccount.AddAccountForLocalization(ProfitFinInstValueFVName(), '763');
        ContosoGLAccount.AddAccountForLocalization(ProfitPortfolioName(), '7630');
        ContosoGLAccount.AddAccountForLocalization(ProfitAssignByCompName(), '7631');
        ContosoGLAccount.AddAccountForLocalization(ProfitAvailForSaleName(), '7632');
        ContosoGLAccount.AddAccountForLocalization(ProfitCoverageInstrName(), '7633');
        ContosoGLAccount.AddAccountForLocalization(ProfitMarketableSecuritiesName(), '766');
        ContosoGLAccount.AddAccountForLocalization(ProfitMarkSecLtGName(), '7660');
        ContosoGLAccount.AddAccountForLocalization(ProfitMarkSecLtAName(), '7661');
        ContosoGLAccount.AddAccountForLocalization(ProfitMarkSecLtOVinName(), '7662');
        ContosoGLAccount.AddAccountForLocalization(ProfitMarkSecLtOName(), '7663');
        ContosoGLAccount.AddAccountForLocalization(ProfitMarkSecStGName(), '7665');
        ContosoGLAccount.AddAccountForLocalization(ProfitMarkSecStAName(), '7666');
        ContosoGLAccount.AddAccountForLocalization(ProfitMarkSecStOVinName(), '7667');
        ContosoGLAccount.AddAccountForLocalization(ProfitMarkSecStOName(), '7668');
        ContosoGLAccount.AddAccountForLocalization(LtIncFaAndReimbRName(), '767');
        ContosoGLAccount.AddAccountForLocalization(ExchangeGainHeadingName(), '768');
        ContosoGLAccount.AddAccountForLocalization(ExchangeGainInternEurHeadingName(), '7680');
        ContosoGLAccount.AddAccountForLocalization(ExchangeGainInternEurName(), '7680001');
        ContosoGLAccount.AddAccountForLocalization(OtherExchangeGainsName(), '7681');
        ContosoGLAccount.AddAccountForLocalization(ExchangeGainPostingName(), '7681001');
        ContosoGLAccount.AddAccountForLocalization(OtherFinancialIncomeHeadingIncomeName(), '769');
        ContosoGLAccount.AddAccountForLocalization(IncomeOnRoundOffEurosHeadingName(), '7690');
        ContosoGLAccount.AddAccountForLocalization(IncomeOnRoundOffEurosName(), '7690001');
        ContosoGLAccount.AddAccountForLocalization(PositiveBalanceOnSettlName(), '7690002');
        ContosoGLAccount.AddAccountForLocalization(OtherFinancialIncomeHeadingName(), '7691');
        ContosoGLAccount.AddAccountForLocalization(OtherFinancialIncomeName(), '7691001');
        ContosoGLAccount.AddAccountForLocalization(ExcExtraordItemsIncName(), '77');
        ContosoGLAccount.AddAccountForLocalization(IntangibleAssetsProfitName(), '770');
        ContosoGLAccount.AddAccountForLocalization(TangibleAssetsProfitHeadingName(), '771');
        ContosoGLAccount.AddAccountForLocalization(TangibleAssetsProfitName(), '7710001');
        ContosoGLAccount.AddAccountForLocalization(PropertiesInvestmProfitName(), '772');
        ContosoGLAccount.AddAccountForLocalization(PrfOnLtEqInvestVinCName(), '773');
        ContosoGLAccount.AddAccountForLocalization(PrfOnLtEqInvestGName(), '7733');
        ContosoGLAccount.AddAccountForLocalization(PrfOnLtEqInvestAName(), '7734');
        ContosoGLAccount.AddAccountForLocalization(PrfOnLtEqInvestOtVinName(), '7735');
        ContosoGLAccount.AddAccountForLocalization(NegDifferencesMergingBussName(), '774');
        ContosoGLAccount.AddAccountForLocalization(ProfitOnDebentLoansName(), '775');
        ContosoGLAccount.AddAccountForLocalization(ProvisionsAppliedName(), '79');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvForIntangAName(), '790');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvForTangAName(), '791');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvForPropInvestName(), '792');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvForInventoryName(), '793');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvFinishWipName(), '7930');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvForGoodsName(), '7931');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvForRawMatName(), '7932');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvForOtherMatName(), '7933');
        ContosoGLAccount.AddAccountForLocalization(RevDetTradeCreditsName(), '794');
        ContosoGLAccount.AddAccountForLocalization(ProvisionExcessName(), '795');
        ContosoGLAccount.AddAccountForLocalization(ProvisionForPensionsIncomeName(), '7950');
        ContosoGLAccount.AddAccountForLocalization(TaxationReserveIncomeName(), '7951');
        ContosoGLAccount.AddAccountForLocalization(ProvisionForOtherResponName(), '7952');
        ContosoGLAccount.AddAccountForLocalization(ProvForTradeTransactIncomeName(), '7954');
        ContosoGLAccount.AddAccountForLocalization(OnerousContractsHeadingName(), '79544');
        ContosoGLAccount.AddAccountForLocalization(OtherTradeTransactHeadingName(), '79549');
        ContosoGLAccount.AddAccountForLocalization(ProvForEnvironmentalActIncomeName(), '7955');
        ContosoGLAccount.AddAccountForLocalization(ProvForRestructuringHeadingName(), '7956');
        ContosoGLAccount.AddAccountForLocalization(ProvPaymTranCapitalInstName(), '7957');
        ContosoGLAccount.AddAccountForLocalization(SurplProviForLtSecName(), '796');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtCapitalInsGName(), '7960');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtCapitalInsAName(), '7961');
        ContosoGLAccount.AddAccountForLocalization(SurplResrLtCapitalInsOvName(), '7962');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtCapitalInsOName(), '7963');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtSecGName(), '7965');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtSecAName(), '7966');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtSecOVinName(), '7967');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtSecOthName(), '7968');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtCreditsName(), '797');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtCreditsGName(), '7970');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtCreditsAName(), '7971');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtCreditsOvName(), '7972');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvLtCreditsOtName(), '7973');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStSecuritiesName(), '798');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStCapitalInsGName(), '7980');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStCapitalInsAName(), '7981');
        ContosoGLAccount.AddAccountForLocalization(SurplResrStCapitalInsOvName(), '7982');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStCapitalInsOName(), '7983');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStSecGName(), '7985');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStSecAName(), '7986');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStSecOVinName(), '7987');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStSecOthName(), '7988');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStCreditsName(), '799');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStCreditsGName(), '7990');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStCreditsAName(), '7991');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStCreditsOvName(), '7992');
        ContosoGLAccount.AddAccountForLocalization(SurplResrvStCreditsOtName(), '7993');
        ContosoGLAccount.AddAccountForLocalization(ExpensesChargedToCapitalName(), '8');
        ContosoGLAccount.AddAccountForLocalization(FinExpAssetsAndLiabValName(), '80');
        ContosoGLAccount.AddAccountForLocalization(LossesFinAForSaleName(), '800');
        ContosoGLAccount.AddAccountForLocalization(GainsTransFinAForSaleName(), '802');
        ContosoGLAccount.AddAccountForLocalization(ExpensesInCoverageOperName(), '81');
        ContosoGLAccount.AddAccountForLocalization(LossesCashFlowCoverageName(), '810');
        ContosoGLAccount.AddAccountForLocalization(LossesInvestCoverageAbroadName(), '811');
        ContosoGLAccount.AddAccountForLocalization(CashFlowCoverageGainsTransName(), '812');
        ContosoGLAccount.AddAccountForLocalization(InvestCovAbroadGainsTransfName(), '813');
        ContosoGLAccount.AddAccountForLocalization(ExpensesConversionDifferencName(), '82');
        ContosoGLAccount.AddAccountForLocalization(NegativeConvDifferencesName(), '820');
        ContosoGLAccount.AddAccountForLocalization(PositiveConvDiffTransferName(), '821');
        ContosoGLAccount.AddAccountForLocalization(ProfitTaxHeadingCapitalName(), '83');
        ContosoGLAccount.AddAccountForLocalization(ProfitTaxCapitalName(), '830');
        ContosoGLAccount.AddAccountForLocalization(RunningTaxHeadingName(), '8300');
        ContosoGLAccount.AddAccountForLocalization(DeferredTaxHeadingName(), '8301');
        ContosoGLAccount.AddAccountForLocalization(ProfitDepositNegativeAdjName(), '833');
        ContosoGLAccount.AddAccountForLocalization(FiscalIncomePermDifferName(), '834');
        ContosoGLAccount.AddAccountForLocalization(FiscalIncomeDeductionsName(), '835');
        ContosoGLAccount.AddAccountForLocalization(PermDifferTransfName(), '836');
        ContosoGLAccount.AddAccountForLocalization(DeducFiscalBenefTransfName(), '837');
        ContosoGLAccount.AddAccountForLocalization(ProfitDepositPositiveAdjName(), '838');
        ContosoGLAccount.AddAccountForLocalization(SubvGrantsAndLegTransfName(), '84');
        ContosoGLAccount.AddAccountForLocalization(OfficialSubvTransfName(), '840');
        ContosoGLAccount.AddAccountForLocalization(GrantsAndLegTransfName(), '841');
        ContosoGLAccount.AddAccountForLocalization(OtherSubvGrantsLegTransName(), '842');
        ContosoGLAccount.AddAccountForLocalization(LtLossAndAdjFeeExpensesName(), '85');
        ContosoGLAccount.AddAccountForLocalization(ActuarialLossesName(), '850');
        ContosoGLAccount.AddAccountForLocalization(NegAdjLtFeeFixedProvName(), '851');
        ContosoGLAccount.AddAccountForLocalization(NonCurrAssetsOnSaleExpName(), '86');
        ContosoGLAccount.AddAccountForLocalization(NonCurrAAndForSaleLosName(), '860');
        ContosoGLAccount.AddAccountForLocalization(NonCurrAAndSaleGTransName(), '862');
        ContosoGLAccount.AddAccountForLocalization(PartGOrACExpPosValAdjName(), '89');
        ContosoGLAccount.AddAccountForLocalization(LiabPartDetGName(), '891');
        ContosoGLAccount.AddAccountForLocalization(LiabPartDetAName(), '892');
        ContosoGLAccount.AddAccountForLocalization(IncomeChargedToCapitalName(), '9');
        ContosoGLAccount.AddAccountForLocalization(FinIncAssetsAndLiabValName(), '90');
        ContosoGLAccount.AddAccountForLocalization(GainsFinAForSaleName(), '900');
        ContosoGLAccount.AddAccountForLocalization(LossesTransfFinAForSaleName(), '902');
        ContosoGLAccount.AddAccountForLocalization(IncomeInCoverageOperName(), '91');
        ContosoGLAccount.AddAccountForLocalization(IncomeCashFlowCoverageName(), '910');
        ContosoGLAccount.AddAccountForLocalization(IncomeInvestCoverageAbroadName(), '911');
        ContosoGLAccount.AddAccountForLocalization(CashFlowCoverageLossTransfName(), '912');
        ContosoGLAccount.AddAccountForLocalization(InvestCovAbroadLossTransfName(), '913');
        ContosoGLAccount.AddAccountForLocalization(IncomeConversionDifferencesName(), '92');
        ContosoGLAccount.AddAccountForLocalization(PositiveConvDifferencesName(), '920');
        ContosoGLAccount.AddAccountForLocalization(NegativeConvDiffTransferName(), '921');
        ContosoGLAccount.AddAccountForLocalization(SubvGrantsAndLegIncomeName(), '94');
        ContosoGLAccount.AddAccountForLocalization(OfficialSubvIncomeName(), '940');
        ContosoGLAccount.AddAccountForLocalization(GrantsAndLegIncomeName(), '941');
        ContosoGLAccount.AddAccountForLocalization(OtherSubvGrantsAndLegIncName(), '942');
        ContosoGLAccount.AddAccountForLocalization(LtProfitAndAdjFeeIncomeName(), '95');
        ContosoGLAccount.AddAccountForLocalization(ActuarialGainsName(), '950');
        ContosoGLAccount.AddAccountForLocalization(PosAdjLtFeeFixedProvName(), '951');
        ContosoGLAccount.AddAccountForLocalization(NonCurrAssetsOnSaleIncName(), '96');
        ContosoGLAccount.AddAccountForLocalization(NonCurrAAndForSaleProfitName(), '960');
        ContosoGLAccount.AddAccountForLocalization(NonCurrAAndSaleLossTransName(), '962');
        ContosoGLAccount.AddAccountForLocalization(PartGOrACoIncPosValAdjName(), '99');
        ContosoGLAccount.AddAccountForLocalization(PrevNegAdjRecGName(), '991');
        ContosoGLAccount.AddAccountForLocalization(PrevNegAdjRecAName(), '992');
        ContosoGLAccount.AddAccountForLocalization(NegAdjDetValTransGName(), '993');
        ContosoGLAccount.AddAccountForLocalization(NegAdjDetValTransAName(), '994');
        ContosoGLAccount.AddAccountForLocalization(RawMaterialsHeadingName(), '31');
        ContosoGLAccount.AddAccountForLocalization(RawMaterialsHeadingAssetsName(), '310');
        ContosoGLAccount.AddAccountForLocalization(RawMaterialsAssetsPostingName(), '3100001');
        CreateGLAccountForLocalization();
    end;

    local procedure CreateGLAccountForLocalization()
    var
        CreateGLAccount: Codeunit "Create G/L Account";
        CreatePostingGroups: Codeunit "Create Posting Groups";
        CreateVATPostingGroups: Codeunit "Create VAT Posting Groups";
        CreateESVATPostingGroups: Codeunit "Create ES VAT Posting Groups";
    begin
        ContosoGLAccount.SetOverwriteData(true);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.Advertising(), CreateGLAccount.AdvertisingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Expense, Enum::"G/L Account Type"::Posting, CreateVATPostingGroups.Domestic(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateESVATPostingGroups.Vat21(), true, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.PhoneandFax(), CreateGLAccount.PhoneandFaxName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Expense, Enum::"G/L Account Type"::Posting, CreateVATPostingGroups.Domestic(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateESVATPostingGroups.Vat21(), true, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.OfficeSupplies(), CreateGLAccount.OfficeSuppliesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Expense, Enum::"G/L Account Type"::Posting, CreateVATPostingGroups.Domestic(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateESVATPostingGroups.Vat21(), true, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.ExtraordinaryExpenses(), CreateGLAccount.ExtraordinaryExpensesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Expense, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.Miscellaneous(), CreateGLAccount.MiscellaneousName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Expense, Enum::"G/L Account Type"::Posting, CreateVATPostingGroups.Domestic(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateESVATPostingGroups.Vat21(), true, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.ExtraordinaryIncome(), CreateGLAccount.ExtraordinaryIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Income, Enum::"G/L Account Type"::Posting, CreateVATPostingGroups.Domestic(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateESVATPostingGroups.Vat21(), true, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.RetainedEarnings(), CreateGLAccount.RetainedEarningsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.FixedAssets(), CreateGLAccount.FixedAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 1, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.DepreciationofFixedAssets(), CreateGLAccount.DepreciationofFixedAssetsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.Inventory(), CreateGLAccount.InventoryName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 1, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.OtherLiabilities(), CreateGLAccount.OtherLiabilitiesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.PersonnelExpenses(), CreateGLAccount.PersonnelExpensesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Expense, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.OtherOperatingExpenses(), CreateGLAccount.OtherOperatingExpensesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Expense, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.FinishedGoods(), CreateGLAccount.FinishedGoodsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreateGLAccount.FixedAssets(), CreateGLAccount.FixedAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 1, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BasicFinancing(), BasicFinancingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 1, '1..19999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CapitalHeading(), CapitalHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '10..1099999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShareCapitalHeading(), ShareCapitalHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '100..100999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShareCapitalPosting(), ShareCapitalPostingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(SocialFund(), SocialFundName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '101..101999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Capital(), CapitalName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '102..102999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartnersInvest(), PartnersInvestName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '103..103999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartnersInvestSCap(), PartnersInvestSCapName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1030..10309999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartnersInvestPCap(), PartnersInvestPCapName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1034..10349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartnersPendNonmonetaryInv(), PartnersPendNonmonetaryInvName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '104..104999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartPendNonmonInvSCap(), PartPendNonmonInvSCapName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1040..10409999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartPendNonmonInvPCap(), PartPendNonmonInvPCapName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1044..10449999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SharesSpecialSituations(), SharesSpecialSituationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '108..108999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SharesCapitalReductions(), SharesCapitalReductionsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '109..109999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Reserves(), ReservesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '11..1199999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SharePremium(), SharePremiumName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '110..110999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherCapitalInstrHeading(), OtherCapitalInstrHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '111..111999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CapitalMixedFinInstr(), CapitalMixedFinInstrName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1110..11109999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherCapitalInstr(), OtherCapitalInstrName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1111..11119999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LegalReserveHeading(), LegalReserveHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '112..112999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LegalReserve(), LegalReserveName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(VoluntaryReserves(), VoluntaryReservesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '113..113999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(VoluntaryReserve(), VoluntaryReserveName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(SpecialReserves(), SpecialReservesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '114..114999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(MajorPartnerSharesReserves(), MajorPartnerSharesReservesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1140..11409999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StatutoryReserves(), StatutoryReservesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1141..11419999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprCapitalReserve(), DeprCapitalReserveName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1142..11429999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GoodwillReserves(), GoodwillReservesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1143..11439999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OwnSharesAsGuaranteeReser(), OwnSharesAsGuaranteeReserName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1144..11449999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GainsLossReservesAndAdjHeading(), GainsLossReservesAndAdjHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '115..115999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GainsLossReservesAndAdj(), GainsLossReservesAndAdjName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(PartnersOrOwnerInvestments(), PartnersOrOwnerInvestmentsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '118..118999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DifCapitalExchEuro(), DifCapitalExchEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '119..119999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(UnappliedResults(), UnappliedResultsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '12..1299999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(AccumulatedLosses(), AccumulatedLossesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '121..121999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitOrLossHeading(), ProfitOrLossHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '129..129999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitOrLoss(), ProfitOrLossName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(SubvGrantsAndCurrExch(), SubvGrantsAndCurrExchName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '13..1399999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OfficialSubvHeading(), OfficialSubvHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '130..130999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OfficialSubv(), OfficialSubvName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(GrantsAndLegaciesHeading(), GrantsAndLegaciesHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '131..131999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GrantsAndLegacies(), GrantsAndLegaciesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherSubvGrantsAndLegHeading(), OtherSubvGrantsAndLegHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '132..132999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherSubvGrantsAndLeg(), OtherSubvGrantsAndLegName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ValueAdjFinAForSaleHeading(), ValueAdjFinAForSaleHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '133..133999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ValueAdjFinAForSale(), ValueAdjFinAForSaleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1330..13309999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ValueAdjFinAForSalePosting(), ValueAdjFinAForSalePostingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(CoverageOperations(), CoverageOperationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '134..134999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CashFlowCoverageHeading(), CashFlowCoverageHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1340..13409999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CashFlowCoverage(), CashFlowCoverageName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(NetInvestCovAbroadHeading(), NetInvestCovAbroadHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1341..13419999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NetInvestCovAbroad(), NetInvestCovAbroadName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ConversionDifferencesHeading(), ConversionDifferencesHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '135..135999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ConversionDifferences(), ConversionDifferencesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ValueAdjNoncurrentASaleHeading(), ValueAdjNoncurrentASaleHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '136..136999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ValueAdjNoncurrentASale(), ValueAdjNoncurrentASaleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(FiscalIncRetPrevYears(), FiscalIncRetPrevYearsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '137..137999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FiscalIncDifRetPrevYearsHeading(), FiscalIncDifRetPrevYearsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1370..13709999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FiscalIncDifRetPrevYears(), FiscalIncDifRetPrevYearsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(FiscalIncDeductDiscounts(), FiscalIncDeductDiscountsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1371..13719999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Provision(), ProvisionName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '14..1499999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionForPensionsEquity(), ProvisionForPensionsEquityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '140..140999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TaxationReserveEquity(), TaxationReserveEquityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '141..141999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionForResponsibilities(), ProvisionForResponsibilitiesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '142..142999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionForMayorRepairs(), ProvisionForMayorRepairsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '143..143999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForEnvironmentalActEquity(), ProvForEnvironmentalActEquityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '145..145999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionForRestructuring(), ProvisionForRestructuringName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '146..146999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvPaymTransCapitalInst(), ProvPaymTransCapitalInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '147..147999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SpecialLtDebts(), SpecialLtDebtsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '15..1599999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtSharesLiability(), LtSharesLiabilityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '150..150999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InvestLiability(), InvestLiabilityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '153..153999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InvestLiabilityG(), InvestLiabilityGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1533..15339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InvestLiabilityA(), InvestLiabilityAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1534..15349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InvestLiabilityOth(), InvestLiabilityOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1535..15359999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherInvestLiability(), OtherInvestLiabilityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1536..15369999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PendNonmonetaryInvLiab(), PendNonmonetaryInvLiabName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '154..154999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PendNonmonetaryInvLiabG(), PendNonmonetaryInvLiabGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1543..15439999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PendNonmonetaryInvLiabA(), PendNonmonetaryInvLiabAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1544..15449999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PendNonmonInvLiabOth(), PendNonmonInvLiabOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1545..15459999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherPendNonmonInv(), OtherPendNonmonInvName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1546..15469999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(VincCompaniesLtDebts(), VincCompaniesLtDebtsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '16..1699999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtsLtWithVincFinInst(), DebtsLtWithVincFinInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '160..160999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtsLtToFinInstG(), DebtsLtToFinInstGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1603..16039999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtsLtToFinInstA(), DebtsLtToFinInstAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1604..16049999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtsLtToOthVincCredInst(), DebtsLtToOthVincCredInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1605..16059999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtFixedAssetVendorsVinc(), LtFixedAssetVendorsVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '161..161999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtFixedAssetVendorsG(), LtFixedAssetVendorsGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1613..16139999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtFixedAssetVendorsA(), LtFixedAssetVendorsAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1614..16149999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtFixedAssetVendorsOth(), LtFixedAssetVendorsOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1615..16159999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinLtLeaseCreditorsVinc(), FinLtLeaseCreditorsVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '162..162999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinLtLeaseCreditorsG(), FinLtLeaseCreditorsGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1623..16239999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinLtLeaseCreditorsA(), FinLtLeaseCreditorsAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1624..16249999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinLtLeaseCreditorsOth(), FinLtLeaseCreditorsOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1625..16259999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherLtDebtsToVincComp(), OtherLtDebtsToVincCompName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '163..163999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherLtDebtsG(), OtherLtDebtsGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1633..16339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherLtDebtsA(), OtherLtDebtsAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1634..16349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherLtDebtsOth(), OtherLtDebtsOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1635..16359999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LoansAndSimilarBorrowings(), LoansAndSimilarBorrowingsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '17..1799999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LTLoansFromFinInst(), LTLoansFromFinInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '170..170999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LongTermDebts(), LongTermDebtsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(LongTermDebtsHeading(), LongTermDebtsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '171..171999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ConvertibleInGrants(), ConvertibleInGrantsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '172..172999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtFixedAssetVendors(), LtFixedAssetVendorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '173..173999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinLtLeaseCreditors(), FinLtLeaseCreditorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '174..174999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredBillExchPay(), TradeCredBillExchPayName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '175..175999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDerivFinLiab(), LtDerivFinLiabName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '176..176999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDerivFinLiabPortfolio(), LtDerivFinLiabPortfolioName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1765..17659999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDerivFinLiabCoverInst(), LtDerivFinLiabCoverInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '1768..17689999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ObligAndDebentLoans(), ObligAndDebentLoansName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '177..177999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ObligAndConvDebentLoans(), ObligAndConvDebentLoansName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '178..178999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtsOthMarketableSecur(), DebtsOthMarketableSecurName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '179..179999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtGuaranteesDepRec(), LtGuaranteesDepRecName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '18..1899999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtGuaranteesReceived(), LtGuaranteesReceivedName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '180..180999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtSalesAndServicesAdvances(), LtSalesAndServicesAdvancesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '181..181999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDepositsReceived(), LtDepositsReceivedName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '185..185999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtFinancialGuarantees(), LtFinancialGuaranteesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '189..189999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TransitionalSituations(), TransitionalSituationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '19..1999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IssuedSharesOrPartStock(), IssuedSharesOrPartStockName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '190..190999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SharesSubscriptors(), SharesSubscriptorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '192..192999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(EqCapitalCInCreation(), EqCapitalCInCreationName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '194..194999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IssuedSharesOrPartFinLiab(), IssuedSharesOrPartFinLiabName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '195..195999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinLiabSharesSubs(), FinLiabSharesSubsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '197..197999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PendFinLiabSharesOrSt(), PendFinLiabSharesOrStName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Equity, Enum::"G/L Account Type"::Heading, '', '', 0, '199..199999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IntangibleAssets(), IntangibleAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '20..2099999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ResearchCostsHeading(), ResearchCostsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '200..200999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ResearchCosts(), ResearchCostsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DevCostsHeading(), DevCostsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '201..201999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DevCosts(), DevCostsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(FranchisedAssets(), FranchisedAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '202..202999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IndustrialProperty(), IndustrialPropertyName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '203..203999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Goodwill(), GoodwillName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '204..204999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RightToLease(), RightToLeaseName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '205..205999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(EdpApplications(), EdpApplicationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '206..206999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IntangibleAssetsAdvances(), IntangibleAssetsAdvancesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '209..209999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TangibleAssets(), TangibleAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '21..2199999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FreeholdLand(), FreeholdLandName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '210..210999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Land(), LandName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(Buildings(), BuildingsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '211..211999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SpecificInstallations(), SpecificInstallationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '212..212999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IndustrialMachineryHeading(), IndustrialMachineryHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '213..213999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IndustrialMachinery(), IndustrialMachineryName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(IndustrialTooling(), IndustrialToolingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '214..214999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PlantMachineryEquipment(), PlantMachineryEquipmentName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '215..215999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FurnitureHeading(), FurnitureHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '216..216999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Furniture(), FurnitureName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(InfoProcessEquipment(), InfoProcessEquipmentName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '217..217999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DataProcessingEquipment(), DataProcessingEquipmentName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(TransportEquipment(), TransportEquipmentName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '218..218999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Vehicle(), VehicleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherTangibleFixedAssetsHeading(), OtherTangibleFixedAssetsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '219..219999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherTangibleFixedAssets(), OtherTangibleFixedAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(PropertiesInvestm(), PropertiesInvestmName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '22..2299999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FreeholdLandInv(), FreeholdLandInvName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '220..220999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LandInv(), LandInvName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(BuildingsInv(), BuildingsInvName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '221..221999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FixedAssetsInProgress(), FixedAssetsInProgressName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '23..2399999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ImprPrepCostsFreehLand(), ImprPrepCostsFreehLandName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '230..230999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ConstructionWorkInProgress(), ConstructionWorkInProgressName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '231..231999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PlantMachEquipmUndInst(), PlantMachEquipmUndInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '232..232999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(MachineryUnderInstallation(), MachineryUnderInstallationName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '233..233999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InfoProcessEquipmUndInst(), InfoProcessEquipmUndInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '237..237999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TangibleAssetsAdvances(), TangibleAssetsAdvancesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '239..239999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(VincCompFinInvestm(), VincCompFinInvestmName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '24..2499999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtInvestmInVincCom(), LtInvestmInVincComName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '240..240999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtInvestmG(), LtInvestmGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2403..24039999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtInvestmA(), LtInvestmAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2404..24049999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtInvestmOth(), LtInvestmOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2405..24059999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDebtValueVinc(), LtDebtValueVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '241..241999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDebtValueG(), LtDebtValueGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2413..24139999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDebtValueA(), LtDebtValueAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2414..24149999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDebtValueOth(), LtDebtValueOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2415..24159999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtCreditsToVincComp(), LtCreditsToVincCompName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '242..242999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtCreditsToG(), LtCreditsToGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2423..24239999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtCreditsToA(), LtCreditsToAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2424..24249999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtCreditsToOth(), LtCreditsToOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2425..24259999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(AmountsUncalledLt(), AmountsUncalledLtName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '249..249999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(AmountsUncalledG(), AmountsUncalledGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2493..24939999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(AmountsUncalledA(), AmountsUncalledAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2494..24949999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(AmountsUncalledOth(), AmountsUncalledOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2495..24959999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherFinancialInvestmLt(), OtherFinancialInvestmLtName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '25..2599999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtInvestmInCapitalInst(), LtInvestmInCapitalInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '250..250999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDebtValuesHeading(), LtDebtValuesHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '251..251999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDebtValues(), LtDebtValuesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(LongTermLoans(), LongTermLoansName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '252..252999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FaTransfLoans(), FaTransfLoansName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '253..253999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StaffLtCredits(), StaffLtCreditsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '254..254999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDerivFinCapital(), LtDerivFinCapitalName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '255..255999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDerivFinCapPortfolio(), LtDerivFinCapPortfolioName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2550..25509999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtDerivFinCapCoverInst(), LtDerivFinCapCoverInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2553..25539999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtPersInsContReimbRights(), LtPersInsContReimbRightsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '257..257999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LongTermTaxations(), LongTermTaxationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '258..258999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PendingInvestOnCapitalInst(), PendingInvestOnCapitalInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '259..259999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GuarantDepSecurities(), GuarantDepSecuritiesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '26..2699999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GuarantSecuritiesLT(), GuarantSecuritiesLTName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '260..260999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GuaranteedSecurities(), GuaranteedSecuritiesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(GuaranteedDepositsLT(), GuaranteedDepositsLTName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '265..265999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprOfIntangibleFa(), DeprOfIntangibleFaName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '280..280999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepResearchCosts(), DepResearchCostsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2800..28009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepDevelopmCosts(), DepDevelopmCostsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2801..28019999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepFranchisedAssets(), DepFranchisedAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2802..28029999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepIndustrialProperty(), DepIndustrialPropertyName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2803..28039999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepRightToLease(), DepRightToLeaseName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2805..28059999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepEdpApplications(), DepEdpApplicationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2806..28069999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprOfTangibleFa(), DeprOfTangibleFaName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '281..281999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepBuildings(), DepBuildingsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2811..28119999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepTechnicalInstallations(), DepTechnicalInstallationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2812..28129999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepIndustrialMachineryHeading(), DepIndustrialMachineryHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2813..28139999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepIndustrialMachinery(), DepIndustrialMachineryName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DepIndustrialTooling(), DepIndustrialToolingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2814..28149999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepPlantMachineryEquip(), DepPlantMachineryEquipName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2815..28159999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepFurnitureAssets(), DepFurnitureAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2816..28169999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepFurniture(), DepFurnitureName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DepInfoProcessEquipment(), DepInfoProcessEquipmentName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2817..28179999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepTransportEquipmentHeading(), DepTransportEquipmentHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2818..28189999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepTransportEquipment(), DepTransportEquipmentName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DepOtherTangibleFaHeading(), DepOtherTangibleFaHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2819..28199999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepOtherTangibleFa(), DepOtherTangibleFaName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DepPropertiesInvestmHeading(), DepPropertiesInvestmHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '282..282999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepPropertiesInvestm(), DepPropertiesInvestmName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DeteriorForFa(), DeteriorForFaName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '29..2999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeteriorOfIntangFa(), DeteriorOfIntangFaName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '290..290999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetResearchCosts(), DetResearchCostsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2900..29009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetDevelopmCosts(), DetDevelopmCostsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2901..29019999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetFranchisedAssets(), DetFranchisedAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2902..29029999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetIndustrialProperty(), DetIndustrialPropertyName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2903..29039999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetRightToLease(), DetRightToLeaseName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2905..29059999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetEdpApplications(), DetEdpApplicationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2906..29069999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeteriorOfTangFa(), DeteriorOfTangFaName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '291..291999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetFreeholdLand(), DetFreeholdLandName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2910..29109999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetBuilding(), DetBuildingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2911..29119999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetTechnicalInstallations(), DetTechnicalInstallationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2912..29129999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetIndustrialMachinery(), DetIndustrialMachineryName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2913..29139999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetIndustrialTooling(), DetIndustrialToolingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2914..29149999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetPlantMachineryEquip(), DetPlantMachineryEquipName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2915..29159999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DepFurnitureHeading(), DepFurnitureHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2916..29169999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetInfoProcessEquipment(), DetInfoProcessEquipmentName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2917..29179999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetTransportEquipment(), DetTransportEquipmentName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2918..29189999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetOtherTangFixedAssets(), DetOtherTangFixedAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2919..29199999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetPropertiesInvestm(), DetPropertiesInvestmName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '292..292999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetFreeholdLandHeading(), DetFreeholdLandHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2920..29209999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetBuildingHeading(), DetBuildingHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2921..29219999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtSecValueInVincC(), DetLtSecValueInVincCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '293..293999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtSecValueInGr(), DetLtSecValueInGrName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2933..29339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtSecValueInAsoc(), DetLtSecValueInAsocName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2934..29349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtDebtSecuritiesVinC(), DetLtDebtSecuritiesVinCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '294..294999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtDebtSecuritiesG(), DetLtDebtSecuritiesGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2943..29439999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtDebtSecuritiesA(), DetLtDebtSecuritiesAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2944..29449999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtDebtSecurOVin(), DetLtDebtSecurOVinName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2945..29459999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtCreditsValToVincC(), DetLtCreditsValToVincCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '295..295999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtCreditsToGr(), DetLtCreditsToGrName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2953..29539999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtCreditsToAsoc(), DetLtCreditsToAsocName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2954..29549999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtCreditsToOthVin(), DetLtCreditsToOthVinName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '2955..29559999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtDebtSecuritiesValue(), DetLtDebtSecuritiesValueName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '297..297999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLtCreditsValue(), DetLtCreditsValueName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '298..298999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeGoods(), TradeGoodsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '30..3099999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsHeading(), GoodsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '300..300999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Goods(), GoodsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(AssemblyBom(), AssemblyBomName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsTradeCred(), GoodsTradeCredName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(BillOfMaterTradeCred(), BillOfMaterTradeCredName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(RawMaterialsProv(), RawMaterialsProvName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(SuppliesOtherConsum(), SuppliesOtherConsumName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '32..3299999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ItemsAssembToIncorp(), ItemsAssembToIncorpName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '320..320999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Fuels(), FuelsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '321..321999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ReplacementParts(), ReplacementPartsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '322..322999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherMaterials(), OtherMaterialsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '325..325999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Packaging(), PackagingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '326..326999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Containers(), ContainersName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '327..327999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProdInProgrManufGoodsHeading(), ProdInProgrManufGoodsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '33..3399999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProdInProgrManufGoods(), ProdInProgrManufGoodsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '330..330999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SalesSpecialist(), SalesSpecialistName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(WipProjectSales(), WipProjectSalesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(WipInvoicedProjectSales(), WipInvoicedProjectSalesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(CostsSpecialist(), CostsSpecialistName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(WipProjectCosts(), WipProjectCostsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(WipAccruedProjectCosts(), WipAccruedProjectCostsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(JobPostingGroup(), JobPostingGroupName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(WorkInProgressHeading(), WorkInProgressHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '34..3499999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(WorkInProgress(), WorkInProgressName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '340..340999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ByProductsOrScrap(), ByProductsOrScrapName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '36..3699999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ByProducts(), ByProductsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '360..360999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(WasteProducts(), WasteProductsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '365..365999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RejectsOfManufacturing(), RejectsOfManufacturingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '368..368999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeteriorInventoryValue(), DeteriorInventoryValueName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '39..3999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetGoodsValue(), DetGoodsValueName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '390..390999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetRawMat(), DetRawMatName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '391..391999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetSuppliesOtherConsum(), DetSuppliesOtherConsumName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '392..392999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetProdProgrManufGoods(), DetProdProgrManufGoodsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '393..393999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetForWorkInProgress(), DetForWorkInProgressName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '394..394999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetForFinishedGoods(), DetForFinishedGoodsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '395..395999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetForByProdOrScrap(), DetForByProdOrScrapName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '396..396999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreditorsAndDebtors(), CreditorsAndDebtorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 1, '4..49999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCreditorsHeading(), TradeCreditorsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '40..4099999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCreditors(), TradeCreditorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '400..400999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(STTradeCredEuro(), STTradeCredEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4000..40009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NationalTradeCreditors(), NationalTradeCreditorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(InternatTradeCreditors(), InternatTradeCreditorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(InvUnderPaymentOrder(), InvUnderPaymentOrderName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ForCurrTradeCreditors(), ForCurrTradeCreditorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4004..40049999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(EuTradeCreditors(), EuTradeCreditorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredInvNotRec(), TradeCredInvNotRecName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4009..40099999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredBillOfExchPay(), TradeCredBillOfExchPayName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '401..401999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCrBillExPay(), TradeCrBillExPayName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4010..40109999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BillExPayNational(), BillExPayNationalName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(BillExInPaymtOrder(), BillExInPaymtOrderName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCreditorsG(), TradeCreditorsGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '403..403999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCreditorsGEuroHeading(), TradeCreditorsGEuroHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4030..40309999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCreditorsGEuro(), TradeCreditorsGEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForBillExchPayG(), ProvForBillExchPayGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4031..40319999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCreditorsGForCurr(), TradeCreditorsGForCurrName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4034..40349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCrReturnEmptiesG(), TradeCrReturnEmptiesGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4036..40369999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredInvNotRecG(), TradeCredInvNotRecGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4039..40399999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredAsoc(), TradeCredAsocName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '404..404999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredOthVinC(), TradeCredOthVinCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '405..405999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCrReturnEmpties(), TradeCrReturnEmptiesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '406..406999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredAdvancesHeading(), TradeCredAdvancesHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '407..407999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredAdvances(), TradeCredAdvancesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4070..40709999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredAdvancesNational(), TradeCredAdvancesNationalName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredAdvancesEu(), TradeCredAdvancesEuName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCredAdvancesExport(), TradeCredAdvancesExportName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherCreditorsHeading(), OtherCreditorsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '41..4199999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreditorsProvOfServices(), CreditorsProvOfServicesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '410..410999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(STCreditorsEuro(), STCreditorsEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4100..41009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherCreditors(), OtherCreditorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(CreditorsProvServForCurr(), CreditorsProvServForCurrName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4104..41049999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreditorsInvNotRec(), CreditorsInvNotRecName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4109..41099999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreditorsBillExPayHeading(), CreditorsBillExPayHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '411..411999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreditorsBillExPay(), CreditorsBillExPayName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4110..41109999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreditorsComOperationsHeading(), CreditorsComOperationsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '419..419999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreditorsComOperations(), CreditorsComOperationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4190..41909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeAccReceivHeading(), TradeAccReceivHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '43..4399999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeAccReceiv(), TradeAccReceivName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '430..430999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeAccReceivEuro(), TradeAccReceivEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4300..43009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NationalCustomers(), NationalCustomersName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(InternationalCustomers(), InternationalCustomersName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(InvoicesToBePaid(), InvoicesToBePaidName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscountedInvoicesAccount(), DiscountedInvoicesAccountName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(RejectedInvoicesAccount(), RejectedInvoicesAccountName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(TradeAccReceivForCurr(), TradeAccReceivForCurrName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4304..43049999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeAccRecInvNotRec(), TradeAccRecInvNotRecName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4309..43099999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeAccRecBillsColl(), TradeAccRecBillsCollName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '431..431999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PendingReceivablesBillsHeading(), PendingReceivablesBillsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4310..43109999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PendingReceivablesBills(), PendingReceivablesBillsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscountedBillsHeading(), DiscountedBillsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4311..43119999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscountedBills(), DiscountedBillsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(BillsOnCollectionManagHeading(), BillsOnCollectionManagHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4312..43129999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BillsOnCollectionManag(), BillsOnCollectionManagName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(UnpaidBillsOfExchangeHeading(), UnpaidBillsOfExchangeHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4315..43159999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(UnpaidBillsOfExchange(), UnpaidBillsOfExchangeName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(TradeAccFactoringOp(), TradeAccFactoringOpName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '432..432999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeAccRecAccG(), TradeAccRecAccGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '433..433999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GroupTrAccRecEuroHeading(), GroupTrAccRecEuroHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4330..43309999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GroupTrAccRecEuro(), GroupTrAccRecEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(BillsOfExchRecG(), BillsOfExchRecGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4331..43319999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TrAccFactoringOpG(), TrAccFactoringOpGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4332..43329999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ForCurrTrAccRecG(), ForCurrTrAccRecGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4334..43349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TrAccRecRetEmptG(), TrAccRecRetEmptGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4336..43369999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GroupTrAccRecRetEmpt(), GroupTrAccRecRetEmptName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4337..43379999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TrAccRecInvNotRecG(), TrAccRecInvNotRecGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4339..43399999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeAcsRecAccA(), TradeAcsRecAccAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '434..434999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TrAccRecOtherVincComp(), TrAccRecOtherVincCompName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '435..435999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BadDoubtfulDebts(), BadDoubtfulDebtsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '436..436999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TrAccRecRetEmpt(), TrAccRecRetEmptName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '437..437999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeDebtorsCreditBalances(), TradeDebtorsCreditBalancesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '438..438999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StTrDebtAdvancesNational(), StTrDebtAdvancesNationalName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(StTrDebtAdvancesEu(), StTrDebtAdvancesEuName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(StTrDebtAdvancesExport(), StTrDebtAdvancesExportName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherDebtors(), OtherDebtorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '44..4499999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtorsHeading(), DebtorsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '440..440999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtorsEuro(), DebtorsEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4400..44009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Debtors(), DebtorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DebtorsForeignCurr(), DebtorsForeignCurrName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4404..44049999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtorsInvNotRec(), DebtorsInvNotRecName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4409..44099999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtorsBillsOfCollection(), DebtorsBillsOfCollectionName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '441..441999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtorsReceivablesPendBills(), DebtorsReceivablesPendBillsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4410..44109999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtorsDiscountedBills(), DebtorsDiscountedBillsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4411..44119999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtBillsOnCollManag(), DebtBillsOnCollManagName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4412..44129999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtorsUnpaidBills(), DebtorsUnpaidBillsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4415..44159999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BadDoubtfulDebt(), BadDoubtfulDebtName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '446..446999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtorsJointVentures(), DebtorsJointVenturesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '449..449999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Employees(), EmployeesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '46..4699999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RemunerationAdvancesHeading(), RemunerationAdvancesHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '460..460999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RemunerationAdvances(), RemunerationAdvancesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(PendingRemunerations(), PendingRemunerationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '465..465999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PendingFixContribSistRem(), PendingFixContribSistRemName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '466..466999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GeneralGovernment(), GeneralGovernmentName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '47..4799999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovernmentReceivable(), GovernmentReceivableName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '470..470999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovernmentVatReceivHeading(), GovernmentVatReceivHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4700..47009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovernmentVatReceiv(), GovernmentVatReceivName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(GovernmentSubvReceiv(), GovernmentSubvReceivName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4708..47089999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovernmentTaxReturnReceiv(), GovernmentTaxReturnReceivName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4709..47099999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SocialSecurity(), SocialSecurityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '471..471999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SocialSecurityReceivable(), SocialSecurityReceivableName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ValueAddedTaxDeduct(), ValueAddedTaxDeductName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '472..472999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovVatDeductible(), GovVatDeductibleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(GovDeducPaymOnAccHeading(), GovDeducPaymOnAccHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '473..473999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovDeducPaymOnAcc(), GovDeducPaymOnAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DeferredTaxAssets(), DeferredTaxAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '474..474999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeducTemporaryDifferences(), DeducTemporaryDifferencesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4740..47409999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeferredDeductDiscounts(), DeferredDeductDiscountsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4742..47429999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CreditForLossesToComp(), CreditForLossesToCompName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4745..47459999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovernmentCreditor(), GovernmentCreditorName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '475..475999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovernmentCreditorVatHeading(), GovernmentCreditorVatHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4750..47509999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovernmentCreditorVat(), GovernmentCreditorVatName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(GovernmentCreditorIrpfHeading(), GovernmentCreditorIrpfHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4751..47519999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovernmentCreditorIrpf(), GovernmentCreditorIrpfName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::" ", CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(GovCredCorpIncTaxHeading(), GovCredCorpIncTaxHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4752..47529999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovCredCorpIncTax(), GovCredCorpIncTaxName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(GovCreditorSubvHeading(), GovCreditorSubvHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4758..47589999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GovCreditorSubv(), GovCreditorSubvName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(SocialSecurityCreditorHeading(), SocialSecurityCreditorHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '476..476999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SocialSecurityCreditor(), SocialSecurityCreditorName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ValueAddTaxCollByComp(), ValueAddTaxCollByCompName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '477..477999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(VatCollByTheComp(), VatCollByTheCompName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(VatEuReversion(), VatEuReversionName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DeferredProfitTax(), DeferredProfitTaxName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '479..479999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ChargSprOverSevPeriods(), ChargSprOverSevPeriodsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '48..4899999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Prepayments(), PrepaymentsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '480..480999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(UnearnedIncome(), UnearnedIncomeName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '485..485999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetCreditValAndStVend(), DetCreditValAndStVendName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '49..4999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetCreditValTradeOper(), DetCreditValTradeOperName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '490..490999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetCreditValTradeOVin(), DetCreditValTradeOVinName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '493..493999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetCreditValTradeOG(), DetCreditValTradeOGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4933..49339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetCreditValTradeOA(), DetCreditValTradeOAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4934..49349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetCreditValTradeOOv(), DetCreditValTradeOOvName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4935..49359999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForTradeTransactLiabilities(), ProvForTradeTransactLiabilitiesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '499..499999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForBurdensomeContracts(), ProvForBurdensomeContractsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4994..49949999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForOtherTradeTransact(), ProvForOtherTradeTransactName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '4999..49999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinancialAccounts(), FinancialAccountsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 1, '5..59999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermInvestments(), ShortTermInvestmentsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '50..5099999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermDebentLoans(), ShortTermDebentLoansName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '500..500999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TreasureBills(), TreasureBillsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ConvertibleDebentLoans(), ConvertibleDebentLoansName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '501..501999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StSharesLiability(), StSharesLiabilityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '502..502999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtsAsMarketableSec(), DebtsAsMarketableSecName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '505..505999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BorrowingsInterests(), BorrowingsInterestsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '506..506999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividendsLiability(), DividendsLiabilityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '507..507999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprMarketableSec(), DeprMarketableSecName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '509..509999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprOblAndDebLoans(), DeprOblAndDebLoansName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5090..50909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprConverOblAndDebL(), DeprConverOblAndDebLName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5091..50919999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprOtherMarketableSec(), DeprOtherMarketableSecName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5095..50959999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermDebtsWithVinc(), ShortTermDebtsWithVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '51..5199999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StDebtsVincFinInst(), StDebtsVincFinInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '510..510999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LoansFromFinInstitG(), LoansFromFinInstitGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5103..51039999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LoansFromFinInstitA(), LoansFromFinInstitAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5104..51049999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LoansFromFinInstitOth(), LoansFromFinInstitOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5105..51059999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FixedAssetCredVincC(), FixedAssetCredVincCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '511..511999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FixedAssetCredG(), FixedAssetCredGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5113..51139999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FixedAssetCreditorsA(), FixedAssetCreditorsAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5114..51149999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FixedAssetsCredOth(), FixedAssetsCredOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5115..51159999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFinLeaseCredVincC(), StFinLeaseCredVincCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '512..512999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFinLeaseCredG(), StFinLeaseCredGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5123..51239999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFinLeaseCredA(), StFinLeaseCredAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5124..51249999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFinLeaseCredOth(), StFinLeaseCredOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5125..51259999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherStDebtsVincC(), OtherStDebtsVincCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '513..513999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermDebtsG(), ShortTermDebtsGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5133..51339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermDebtsA(), ShortTermDebtsAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5134..51349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermDebtsOth(), ShortTermDebtsOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5135..51359999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StDebtInterestsVincC(), StDebtInterestsVincCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '514..514999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtInterestsG(), DebtInterestsGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5143..51439999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtInterestsA(), DebtInterestsAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5144..51449999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtInterestsOth(), DebtInterestsOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5145..51459999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoansDebt(), StLoansDebtName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '52..5299999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoansFromFinInstitutHeading(), StLoansFromFinInstitutHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '520..520999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoansFromFinInstitut(), StLoansFromFinInstitutName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5200..52009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermLoansPosting(), ShortTermLoansPostingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(StDebtsForCredits(), StDebtsForCreditsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5201..52019999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtOnDiscountedBillsHeading(), DebtOnDiscountedBillsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5208..52089999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtOnDiscountedBills(), DebtOnDiscountedBillsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscInvoiceDebtAcc(), DiscInvoiceDebtAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(FactoringOpDebtAcc(), FactoringOpDebtAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5209..52099999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermLoans(), ShortTermLoansName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '521..521999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtInSubvAndLeg(), DebtInSubvAndLegName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '522..522999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFixedAssetCreditors(), StFixedAssetCreditorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '523..523999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFinLeaseCreditors(), StFinLeaseCreditorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '524..524999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StBillOfExchPay(), StBillOfExchPayName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '525..525999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ActiveDividendToPay(), ActiveDividendToPayName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '526..526999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermDebtIntCredInst(), ShortTermDebtIntCredInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '527..527999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermDebtInterest(), ShortTermDebtInterestName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '528..528999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermProvisions(), ShortTermProvisionsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '529..529999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionForPensionsHeading(), ProvisionForPensionsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5290..52909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TaxationReserveHeading(), TaxationReserveHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5291..52919999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionForResponsibilitiesHeading(), ProvisionForResponsibilitiesHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5292..52929999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionForFaDismantle(), ProvisionForFaDismantleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5293..52939999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForEnvironmentalActHeading(), ProvForEnvironmentalActHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5295..52959999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForRestructuring(), ProvForRestructuringName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5296..52969999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForPaymLiabInst(), ProvForPaymLiabInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5297..52979999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GroupAssocFinInvestm(), GroupAssocFinInvestmName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '53..5399999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StTradeInvestmVinc(), StTradeInvestmVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '530..530999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StTradeInvestmG(), StTradeInvestmGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5303..53039999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StTradeInvestmA(), StTradeInvestmAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5304..53049999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StTradeInvestmOth(), StTradeInvestmOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5305..53059999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFixedIncomeSecVinc(), StFixedIncomeSecVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '531..531999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFixedIncomeSecG(), StFixedIncomeSecGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5313..53139999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFixedIncomeSecA(), StFixedIncomeSecAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5314..53149999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFixedIncomeSecOth(), StFixedIncomeSecOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5315..53159999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoansToVincComp(), StLoansToVincCompName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '532..532999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoansToGroupC(), StLoansToGroupCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5323..53239999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoansToAComp(), StLoansToACompName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5324..53249999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoansToOtherVincC(), StLoansToOtherVincCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5325..53259999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinInvestmInterestVinc(), FinInvestmInterestVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '533..533999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinInvestmInterestG(), FinInvestmInterestGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5333..53339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinInvestmInterestsA(), FinInvestmInterestsAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5334..53349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinInvestmInterestsOth(), FinInvestmInterestsOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5335..53359999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StInterestCreditsToVinc(), StInterestCreditsToVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '534..534999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StInterestCreditsG(), StInterestCreditsGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5343..53439999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StInterestCreditsA(), StInterestCreditsAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5344..53449999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StInterestCreditsOth(), StInterestCreditsOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5345..53459999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividReceivFinInvInVinc(), DividReceivFinInvInVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '535..535999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividReceivFinInvG(), DividReceivFinInvGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5353..53539999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividReceivFinInvA(), DividReceivFinInvAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5354..53549999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividReceivFinInvOth(), DividReceivFinInvOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5355..53559999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StDemandExpendEqVinc(), StDemandExpendEqVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '539..539999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StDemandExpendEqG(), StDemandExpendEqGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5393..53939999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StDemandExpendEqA(), StDemandExpendEqAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5394..53949999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StDemandExpendEqOth(), StDemandExpendEqOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5395..53959999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InterimFinancialInvestm(), InterimFinancialInvestmName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '54..5499999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InvestmentsInCapitalInst(), InvestmentsInCapitalInstName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '540..540999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFixedIncomeSecurity(), StFixedIncomeSecurityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '541..541999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFixedIncomeInvestm(), StFixedIncomeInvestmName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermLoansHeading(), ShortTermLoansHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '542..542999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFaTransferenceLoans(), StFaTransferenceLoansName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '543..543999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StaffStCredits(), StaffStCreditsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '544..544999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividendsReceivable(), DividendsReceivableName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '545..545999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SecuritiesStInterests(), SecuritiesStInterestsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '546..546999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StCreditsInterests(), StCreditsInterestsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '547..547999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermTaxations(), ShortTermTaxationsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '548..548999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StAmtsUncalledOnShares(), StAmtsUncalledOnSharesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '549..549999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherNonBankAccounts(), OtherNonBankAccountsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '55..5599999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProprietorsAccount(), ProprietorsAccountName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '550..550999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartnAdministrCheckingAcc(), PartnAdministrCheckingAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '551..551999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OthersCheckingAcc(), OthersCheckingAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '552..552999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GroupVincCheckingAcc(), GroupVincCheckingAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5523..55239999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(AsocVincCheckingAcc(), AsocVincCheckingAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5524..55249999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OthersVincCheckingAcc(), OthersVincCheckingAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5525..55259999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(MergeAndSplitCheckAcc(), MergeAndSplitCheckAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '553..553999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartnersDissolvedSociety(), PartnersDissolvedSocietyName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5530..55309999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartnersMergeAcc(), PartnersMergeAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5531..55319999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartnersSplitSociety(), PartnersSplitSocietyName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5532..55329999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartnersSplitAcc(), PartnersSplitAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5533..55339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TemporaryJoinsChecAcc(), TemporaryJoinsChecAccName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '554..554999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(UnappliedItems(), UnappliedItemsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '555..555999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DemandExpendOnEquity(), DemandExpendOnEquityName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '556..556999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DemandExpendEqGroup(), DemandExpendEqGroupName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5563..55639999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DemandExpendEqAsoc(), DemandExpendEqAsocName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5564..55649999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DemandExpendEqOtVin(), DemandExpendEqOtVinName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5565..55659999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DemandExpendEqOthers(), DemandExpendEqOthersName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5566..55669999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InterimActiveDividends(), InterimActiveDividendsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '557..557999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SharehPaymentCallable(), SharehPaymentCallableName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '558..558999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SharehPayCallSharesOrG(), SharehPayCallSharesOrGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5580..55809999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SharehPayCallFinLiab(), SharehPayCallFinLiabName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5585..55859999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DerivativeInstrumentSt(), DerivativeInstrumentStName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '559..559999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StFinDerivAssetsPortfolio(), StFinDerivAssetsPortfolioName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5590..55909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(AssetsDerivInstStCovIns(), AssetsDerivInstStCovInsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5593..55939999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LiabDerivInstStPortfolio(), LiabDerivInstStPortfolioName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5595..55959999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LiabDerivInstStCovIns(), LiabDerivInstStCovInsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5598..55989999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SecDepositsReceivGuarant(), SecDepositsReceivGuarantName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '56..5699999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermGuaranteesReceiv(), ShortTermGuaranteesReceivName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '560..560999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermDepositsReceiv(), ShortTermDepositsReceivName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '561..561999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermGuaranteedSec(), ShortTermGuaranteedSecName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '565..565999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ShortTermGuarantDeposits(), ShortTermGuarantDepositsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '566..566999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InterestPaidInAdvance(), InterestPaidInAdvanceName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '567..567999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InterestReceivedInAdvance(), InterestReceivedInAdvanceName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '568..568999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinancialGuaranteesSt(), FinancialGuaranteesStName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '569..569999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CashFlow(), CashFlowName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '57..5799999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CashEuroHeading(), CashEuroHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '570..570999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CashEuro(), CashEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, true, false);
        ContosoGLAccount.InsertGLAccount(CashForeignCurrency(), CashForeignCurrencyName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '571..571999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BanksAccountAtSightEuro(), BanksAccountAtSightEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '572..572999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BanksEuro(), BanksEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, true, false);
        ContosoGLAccount.InsertGLAccount(BanksAccAtSightFCurr(), BanksAccAtSightFCurrName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '573..573999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BanksForeignCurrency(), BanksForeignCurrencyName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, true, false);
        ContosoGLAccount.InsertGLAccount(BanksSavingAccEuro(), BanksSavingAccEuroName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '574..574999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SavingAccount(), SavingAccountName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, true, false);
        ContosoGLAccount.InsertGLAccount(BanksSavingAccForCurr(), BanksSavingAccForCurrName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '575..575999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(HighLiqStInvestm(), HighLiqStInvestmName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '576..576999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NonCurrentAssetsForSale(), NonCurrentAssetsForSaleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '58..5899999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InvestmWithVincComp(), InvestmWithVincCompName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '581..581999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinancialInvestments(), FinancialInvestmentsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '582..582999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InventoryTradeDebtors(), InventoryTradeDebtorsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '583..583999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherAssets(), OtherAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '584..584999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Provisions(), ProvisionsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '585..585999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SpecialCharactDebts(), SpecialCharactDebtsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '586..586999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtsWithVincComp(), DebtsWithVincCompName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '587..587999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TradeCreditorsAndOthPay(), TradeCreditorsAndOthPayName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '588..588999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueFinancialProducts(), DetValueFinancialProductsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '59..5999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStPartVinc(), DetValueStPartVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '593..593999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStPartG(), DetValueStPartGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5933..59339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStPartA(), DetValueStPartAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5934..59349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStSecVincC(), DetValueStSecVincCName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '594..594999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStSecG(), DetValueStSecGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5943..59439999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStSecA(), DetValueStSecAName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5944..59449999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStSecOVin(), DetValueStSecOVinName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5945..59459999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStCreditsToVinc(), DetValueStCreditsToVincName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '595..595999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStCreditsToG(), DetValueStCreditsToGName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5953..59539999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStCreditsToAs(), DetValueStCreditsToAsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5954..59549999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStCreditsToOtV(), DetValueStCreditsToOtVName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5955..59559999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStSecurities(), DetValueStSecuritiesName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '597..597999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValueStCredits(), DetValueStCreditsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '598..598999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValNoncurrAForSale(), DetValNoncurrAForSaleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '599..599999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValFixNoncAForSale(), DetValFixNoncAForSaleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5990..59909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValRelatedInvesForSale(), DetValRelatedInvesForSaleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5991..59919999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValFinInvestForSale(), DetValFinInvestForSaleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5992..59929999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValStocksDebtsAndOth(), DetValStocksDebtsAndOthName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5993..59939999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetValOtherAForSale(), DetValOtherAForSaleName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '5994..59949999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CostAndExpenseAccounts(), CostAndExpenseAccountsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 1, '6..69999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Purchases(), PurchasesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '60..6099999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PurchasesOfGoodsForResale(), PurchasesOfGoodsForResaleName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '600..600999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NationalPurchases(), NationalPurchasesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(EuPurchases(), EuPurchasesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(IntNonEuPurch(), IntNonEuPurchName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(PurchForRawMaterials(), PurchForRawMaterialsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '601..601999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PurchForNatRawMat(), PurchForNatRawMatName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RawMatPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(PurchForEuRawMat(), PurchForEuRawMatName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.RawMatPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(PurchIntNonEuRawMat(), PurchIntNonEuRawMatName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.RawMatPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(PurchasesForConsumables(), PurchasesForConsumablesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '602..602999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowedOnPurch(), DiscAllowedOnPurchName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '606..606999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurchFinGoods(), DiscAllowOnPurchFinGoodsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6060..60609999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurFinGoodN(), DiscAllowOnPurFinGoodNName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurFinGoodEu(), DiscAllowOnPurFinGoodEuName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurFinGoodI(), DiscAllowOnPurFinGoodIName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurchRawMat(), DiscAllowOnPurchRawMatName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6061..60619999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurcRawMatN(), DiscAllowOnPurcRawMatNName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RawMatPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurcRawMatEu(), DiscAllowOnPurcRawMatEuName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.RawMatPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurcRawMatI(), DiscAllowOnPurcRawMatIName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.RawMatPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurchOthers(), DiscAllowOnPurchOthersName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6062..60629999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurcOthersN(), DiscAllowOnPurcOthersNName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurcOthersEu(), DiscAllowOnPurcOthersEuName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnPurcOthersI(), DiscAllowOnPurcOthersIName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(WorkDoneByOtherComp(), WorkDoneByOtherCompName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '607..607999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PurchaseReturns(), PurchaseReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '608..608999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsPurchasedReturns(), GoodsPurchasedReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6080..60809999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NationalReturns(), NationalReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(EuReturns(), EuReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(InternationalNonEuRet(), InternationalNonEuRetName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(MiscellaneousReturns(), MiscellaneousReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(RawMatPurchasedReturns(), RawMatPurchasedReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6081..60819999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ConsumPurchasedReturns(), ConsumPurchasedReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6082..60829999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PurchasesReturnAllow(), PurchasesReturnAllowName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '609..609999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsPurchReturnAllow(), GoodsPurchReturnAllowName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6090..60909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ReturnAndAllowOnGoods(), ReturnAndAllowOnGoodsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(RawMatPurchRetAllow(), RawMatPurchRetAllowName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6091..60919999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ReturnAllowOnRawMat(), ReturnAllowOnRawMatName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RawMatPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(ConsumPurchRetAllow(), ConsumPurchRetAllowName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6092..60929999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ChangesInStockHeading(), ChangesInStockHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '61..6199999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ChangesInStock(), ChangesInStockName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '610..610999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ChangesInStockPosting(), ChangesInStockPostingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ChangesInRawMaterialsHeading(), ChangesInRawMaterialsHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '611..611999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ChangesInRawMaterials(), ChangesInRawMaterialsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ChgInSuppOtherConsum(), ChgInSuppOtherConsumName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '612..612999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExternalChargesForServices(), ExternalChargesForServicesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '62..6299999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ResearchAndDevelopment(), ResearchAndDevelopmentName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '620..620999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Projects(), ProjectsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(LeaseAndRoyalties(), LeaseAndRoyaltiesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '621..621999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LeaseChargesPosting(), LeaseChargesPostingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(MaintenancesAndRepairs(), MaintenancesAndRepairsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '622..622999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Repairs(), RepairsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProfessionalServices(), ProfessionalServicesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '623..623999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InternalResources(), InternalResourcesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(Consulting(), ConsultingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProfessionalAdvisoryServices(), ProfessionalAdvisoryServicesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProjectCostsRetail(), ProjectCostsRetailName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProjectCostsAdjustment(), ProjectCostsAdjustmentName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProjectCostsRecognized(), ProjectCostsRecognizedName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProjectsCostsRawMaterial(), ProjectsCostsRawMaterialName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProjectsCostsResources(), ProjectsCostsResourcesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(TransportationHeading(), TransportationHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '624..624999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Transportation(), TransportationName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(Fuel(), FuelName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(InsurancePremiumsHeading(), InsurancePremiumsHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '625..625999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InsurancePremiums(), InsurancePremiumsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, '', 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(BankingServicesHeading(), BankingServicesHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '626..626999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BankingServices(), BankingServicesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(AdvertisingPublicRelations(), AdvertisingPublicRelationsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '627..627999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Supplies(), SuppliesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '628..628999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Electricity(), ElectricityName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(Water(), WaterName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherSupplies(), OtherSuppliesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherServicesHeading(), OtherServicesHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '629..629999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherServices(), OtherServicesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherBusinessExpenses(), OtherBusinessExpensesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(Tax(), TaxName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '63..6399999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitTaxHeading(), ProfitTaxHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '630..630999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RunningTax(), RunningTaxName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6300..63009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitTax(), ProfitTaxName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DeferredTax(), DeferredTaxName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6301..63019999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherTaxesHeading(), OtherTaxesHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '631..631999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherTaxes(), OtherTaxesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(NegativeAdjustmOnProfits(), NegativeAdjustmOnProfitsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '633..633999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NegativeAdjustmIndivTax(), NegativeAdjustmIndivTaxName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '634..634999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NegativeAdjustmRunningAct(), NegativeAdjustmRunningActName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6341..63419999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NegativeAdjustmInvestTax(), NegativeAdjustmInvestTaxName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6342..63429999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TaxRefunds(), TaxRefundsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '636..636999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PositiveAdjustmOnProfits(), PositiveAdjustmOnProfitsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '638..638999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PositiveAdjustmIndivTax(), PositiveAdjustmIndivTaxName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '639..639999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PositiveAdjustmRunningAct(), PositiveAdjustmRunningActName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6391..63919999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PositiveAdjustmInvestTax(), PositiveAdjustmInvestTaxName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6392..63929999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(WagesAndSalariesHeading(), WagesAndSalariesHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '640..640999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(WagesAndSalaries(), WagesAndSalariesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(Prizes(), PrizesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(PensionFunds(), PensionFundsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(Compensations(), CompensationsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '641..641999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SocialSecPaidByCompanyHeading(), SocialSecPaidByCompanyHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '642..642999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SocialSecPaidByCompany(), SocialSecPaidByCompanyName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(LtFeeInFixedContribSist(), LtFeeInFixedContribSistName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '643..643999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtFeeInFixedProvisionSis(), LtFeeInFixedProvisionSisName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '644..644999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(AnnualContributions(), AnnualContributionsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6440..64409999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherCosts(), OtherCostsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6442..64429999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FeesByEquityProducts(), FeesByEquityProductsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '645..645999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PersonnelRetEqProd(), PersonnelRetEqProdName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6450..64509999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PersonnelRetCashEqProd(), PersonnelRetCashEqProdName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6457..64579999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherSocialExpenses(), OtherSocialExpensesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '649..649999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(BadDebtLosses(), BadDebtLossesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '650..650999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartnershipsAndOthers(), PartnershipsAndOthersName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '651..651999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TransferredProfitAdmin(), TransferredProfitAdminName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6510..65109999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TransferredLossParticipant(), TransferredLossParticipantName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6511..65119999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherOperatingLosses(), OtherOperatingLossesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '659..659999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinancialExpenses(), FinancialExpensesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '66..6699999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinExpProvUpdates(), FinExpProvUpdatesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '660..660999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InterestDebentLoans(), InterestDebentLoansName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '661..661999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtInterestDebentLoansG(), LtInterestDebentLoansGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6610..66109999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtInterestDebentLoansA(), LtInterestDebentLoansAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6611..66119999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtInterestDebentLoansOv(), LtInterestDebentLoansOvName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6612..66129999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtInterestDebentLoansOt(), LtInterestDebentLoansOtName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6613..66139999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StInterestDebentLoansG(), StInterestDebentLoansGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6615..66159999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StInterestDebentLoansA(), StInterestDebentLoansAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6616..66169999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StInterestDebentLoansOv(), StInterestDebentLoansOvName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6617..66179999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StInterestDebentLoansOt(), StInterestDebentLoansOtName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6618..66189999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtInterest(), DebtInterestName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '662..662999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtInterestGroup(), DebtInterestGroupName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6620..66209999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtInterestAssoc(), DebtInterestAssocName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6621..66219999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtInterestOtVinc(), DebtInterestOtVincName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6622..66229999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtInterestFinIns(), DebtInterestFinInsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6623..66239999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DebtInterestOther(), DebtInterestOtherName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6624..66249999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesFinInstValueFV(), LossesFinInstValueFVName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '663..663999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PortfolioLosses(), PortfolioLossesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6630..66309999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesAssignByComp(), LossesAssignByCompName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6631..66319999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesAvailForSale(), LossesAvailForSaleName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6632..66329999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CoverageInstLosses(), CoverageInstLossesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6633..66339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividendLiability(), DividendLiabilityName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '664..664999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividendLiabilityG(), DividendLiabilityGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6640..66409999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividendLiabilityA(), DividendLiabilityAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6641..66419999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividendLiabilityOVin(), DividendLiabilityOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6642..66429999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DividendLiabilityOth(), DividendLiabilityOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6643..66439999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InterestOnBillsDisc(), InterestOnBillsDiscName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '665..665999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IntOnBillsDiscFinInsG(), IntOnBillsDiscFinInsGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6650..66509999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IntOnBillsDiscFinInsA(), IntOnBillsDiscFinInsAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6651..66519999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IntOnBillsDiscFinInsV(), IntOnBillsDiscFinInsVName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6652..66529999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InterestOnBillsDiscOth(), InterestOnBillsDiscOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6653..66539999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InterestOnBillsDiscounted(), InterestOnBillsDiscountedName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(FactOpInterBanksG(), FactOpInterBanksGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6654..66549999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FactOpInterBanksA(), FactOpInterBanksAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6655..66559999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FactOpInterBanksV(), FactOpInterBanksVName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6656..66569999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FactOpInterOtherBanksHeading(), FactOpInterOtherBanksHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6657..66579999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FactOpInterOtherBanks(), FactOpInterOtherBanksName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(SecuritiesLoss(), SecuritiesLossName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '666..666999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtSecuritiesLossG(), LtSecuritiesLossGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6660..66609999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtSecuritiesLossA(), LtSecuritiesLossAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6661..66619999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtSecuritiesLossOVin(), LtSecuritiesLossOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6662..66629999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtSecuritiesLossOth(), LtSecuritiesLossOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6663..66639999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StSecuritiesLossG(), StSecuritiesLossGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6665..66659999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StSecuritiesLossA(), StSecuritiesLossAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6666..66669999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StSecuritiesLossOVin(), StSecuritiesLossOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6667..66679999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StSecuritiesLossOth(), StSecuritiesLossOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6668..66689999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LoanLoss(), LoanLossName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '667..667999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtLoanLossG(), LtLoanLossGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6670..66709999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtLoanLossA(), LtLoanLossAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6671..66719999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtLoanLossOVin(), LtLoanLossOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6672..66729999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtLoanLossOth(), LtLoanLossOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6673..66739999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoanLossG(), StLoanLossGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6675..66759999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoanLossA(), StLoanLossAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6676..66769999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoanLossOVin(), StLoanLossOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6677..66779999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(StLoanLossOth(), StLoanLossOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6678..66789999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RealizedLossesOnExchangeHeading(), RealizedLossesOnExchangeHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '668..668999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RealLossExchInternEurHeading(), RealLossExchInternEurHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6680..66809999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RealLossExchInternEur(), RealLossExchInternEurName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherRealLossesOnExch(), OtherRealLossesOnExchName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6681..66819999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RealizedLossesOnExchange(), RealizedLossesOnExchangeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherFinancialExpensesHeadingExpenses(), OtherFinancialExpensesHeadingExpensesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '669..669999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExpenOnRoundOffEurHeading(), ExpenOnRoundOffEurHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6690..66909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExpenOnRoundOffEur(), ExpenOnRoundOffEurName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(NegativeBalanceOnSettl(), NegativeBalanceOnSettlName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherFinancialExpensesHeading(), OtherFinancialExpensesHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6691..66919999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherFinancialExpenses(), OtherFinancialExpensesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherFinExpBillReject(), OtherFinExpBillRejectName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ExcepExtrItemsExp(), ExcepExtrItemsExpName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '67..6799999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossOnIntangATransf(), LossOnIntangATransfName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '670..670999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossOnTangAssetsTransfHeading(), LossOnTangAssetsTransfHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '671..671999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossOnTangAssetsTransf(), LossOnTangAssetsTransfName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(LossOnPropertiesInvestm(), LossOnPropertiesInvestmName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '672..672999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossOnLtEqInvestVinC(), LossOnLtEqInvestVinCName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '673..673999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossOnLtEqInvestG(), LossOnLtEqInvestGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6733..67339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossOnLtEqInvestA(), LossOnLtEqInvestAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6734..67349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossOnLtEqInvestOVin(), LossOnLtEqInvestOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6735..67359999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossOnDebentLoans(), LossOnDebentLoansName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '675..675999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprecAmortizOfFa(), DeprecAmortizOfFaName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '68..6899999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprOfIntangAssets(), DeprOfIntangAssetsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '680..680999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprOfTangAssetsHeading(), DeprOfTangAssetsHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '681..681999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeprOfTangAssets(), DeprOfTangAssetsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(DeprOnPropertiesInvestm(), DeprOnPropertiesInvestmName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '682..682999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLossesAndOthers(), DetLossesAndOthersName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '69..6999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLossOnIntangibleA(), DetLossOnIntangibleAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '690..690999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLossOnTangibleA(), DetLossOnTangibleAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '691..691999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLossOnPropertiesInvest(), DetLossOnPropertiesInvestName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '692..692999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLossOnInventory(), DetLossOnInventoryName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '693..693999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLossOnFinishAndWip(), DetLossOnFinishAndWipName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6930..69309999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLossOnGoods(), DetLossOnGoodsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6931..69319999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLossOnRawMat(), DetLossOnRawMatName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6932..69329999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLossOnSupOtCons(), DetLossOnSupOtConsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6933..69339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DetLossOnTradeCredits(), DetLossOnTradeCreditsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '694..694999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForTradeTransactHeading(), ProvForTradeTransactHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '695..695999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OnerousContracts(), OnerousContractsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6954..69549999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherTradeTransact(), OtherTradeTransactName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6959..69599999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtSecurities(), LossesDetLtSecuritiesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '696..696999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtCapitalInstG(), LossesDetLtCapitalInstGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6960..69609999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtCapitalInstA(), LossesDetLtCapitalInstAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6961..69619999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtCapitalInsOv(), LossesDetLtCapitalInsOvName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6962..69629999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtCapitalInsO(), LossesDetLtCapitalInsOName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6963..69639999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtSecG(), LossesDetLtSecGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6965..69659999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtSecA(), LossesDetLtSecAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6966..69669999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtSecOVin(), LossesDetLtSecOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6967..69679999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtSecOth(), LossesDetLtSecOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6968..69689999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtCredits(), LossesDetLtCreditsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '697..697999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtCreditsG(), LossesDetLtCreditsGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6970..69709999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtCreditsA(), LossesDetLtCreditsAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6971..69719999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtCreditsOV(), LossesDetLtCreditsOVName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6972..69729999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetLtCreditsOth(), LossesDetLtCreditsOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6973..69739999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStSecurities(), LossesDetStSecuritiesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '698..698999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStCapitalInstG(), LossesDetStCapitalInstGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6980..69809999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStCapitalInstA(), LossesDetStCapitalInstAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6981..69819999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStCapitalInsOv(), LossesDetStCapitalInsOvName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6982..69829999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStCapitalInstO(), LossesDetStCapitalInstOName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6983..69839999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStSecuritiesG(), LossesDetStSecuritiesGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6985..69859999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStSecuritiesA(), LossesDetStSecuritiesAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6986..69869999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStSecuritiesOv(), LossesDetStSecuritiesOvName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6987..69879999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStSecuritiesO(), LossesDetStSecuritiesOName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6988..69889999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStCredits(), LossesDetStCreditsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '699..699999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStCreditsG(), LossesDetStCreditsGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6990..69909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStCreditsA(), LossesDetStCreditsAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6991..69919999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStCreditsOV(), LossesDetStCreditsOVName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6992..69929999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesDetStCreditsOth(), LossesDetStCreditsOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '6993..69939999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SalesAndIncome(), SalesAndIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 1, '7..79999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsSalesServices(), GoodsSalesServicesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '70..7099999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsSalesHeading(), GoodsSalesHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '700..700999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsSales(), GoodsSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7000..70009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NationalGoodsSales(), NationalGoodsSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsSalesEu(), GoodsSalesEuName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(IntNonEuGoodsSales(), IntNonEuGoodsSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(RawMaterialsSales(), RawMaterialsSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7001..70019999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NationalRawMatSales(), NationalRawMatSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RawMatPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(EuRawMaterialsSales(), EuRawMaterialsSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.RawMatPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(IntRawMatSales(), IntRawMatSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.RawMatPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(FinishedGoodsSales(), FinishedGoodsSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '701..701999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SemiManufPartsSales(), SemiManufPartsSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '702..702999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ByProductsScrapSales(), ByProductsScrapSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '703..703999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RetEmpPackSales(), RetEmpPackSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '704..704999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionOfServicesHeading(), ProvisionOfServicesHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '705..705999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionOfServices(), ProvisionOfServicesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.ServicesPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT7', true, false, false);
        ContosoGLAccount.InsertGLAccount(InternalResourcesPosting(), InternalResourcesPostingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.ServicesPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT7', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProjectsSales(), ProjectsSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherServicesPosting(), OtherServicesPostingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.ServicesPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT7', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProjectsSalesAdjustment(), ProjectsSalesAdjustmentName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(ProjectsSalesRecognized(), ProjectsSalesRecognizedName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.ServicesPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT7', true, false, false);
        ContosoGLAccount.InsertGLAccount(NationalServices(), NationalServicesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.ServicesPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT7', true, false, false);
        ContosoGLAccount.InsertGLAccount(EuServices(), EuServicesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.ServicesPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), 'VAT7', true, false, false);
        ContosoGLAccount.InsertGLAccount(IntServicesNonEu(), IntServicesNonEuName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.ServicesPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), 'VAT7', true, false, false);
        ContosoGLAccount.InsertGLAccount(TotalSaleOfServContracts(), TotalSaleOfServContractsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7051..70519999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ServiceContractSale(), ServiceContractSaleName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.ServicesPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT7', true, false, false);
        ContosoGLAccount.InsertGLAccount(SalesOfServiceContracts(), SalesOfServiceContractsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.ServicesPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT7', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowedOnSales(), DiscAllowedOnSalesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '706..706999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowedOnSalesGoods(), DiscAllowedOnSalesGoodsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7060..70609999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSalesGoodsN(), DiscAllowOnSalesGoodsNName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSalesGoodsEu(), DiscAllowOnSalesGoodsEuName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSalesGoodsI(), DiscAllowOnSalesGoodsIName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSalesFinGoods(), DiscAllowOnSalesFinGoodsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7061..70619999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSalFinGoodsN(), DiscAllowOnSalFinGoodsNName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSFinGoodsEu(), DiscAllowOnSFinGoodsEuName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSFinGoodsI(), DiscAllowOnSFinGoodsIName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.RetailPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSalesSemiManuf(), DiscAllowOnSalesSemiManufName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7062..70629999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSSemiManufN(), DiscAllowOnSSemiManufNName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSSemiManufEu(), DiscAllowOnSSemiManufEuName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllowOnSSemiManufI(), DiscAllowOnSSemiManufIName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllOnSalProdScrapRet(), DiscAllOnSalProdScrapRetName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7063..70639999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllOnSProdScrRetN(), DiscAllOnSProdScrRetNName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllOnSProdScrRetEu(), DiscAllOnSProdScrRetEuName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(DiscAllOnSProdScrRetI(), DiscAllOnSProdScrRetIName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(SalesReturns(), SalesReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '708..708999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsReturns(), GoodsReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7080..70809999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NationalReturnsPosting(), NationalReturnsPostingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(EuReturnsPosting(), EuReturnsPostingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.EUPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(IntNonEuReturns(), IntNonEuReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.ExportPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(FinishedGoodsReturns(), FinishedGoodsReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7081..70819999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SemiManufPartsReturns(), SemiManufPartsReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7082..70829999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ByProductsScrapReturns(), ByProductsScrapReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7083..70839999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RetEmpPackReturns(), RetEmpPackReturnsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7084..70849999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SalesReturnAllow(), SalesReturnAllowName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '709..709999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsSalesReturnAllowHeading(), GoodsSalesReturnAllowHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7090..70909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GoodsSalesReturnAllow(), GoodsSalesReturnAllowName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(FinishGoodsSalesRetAllow(), FinishGoodsSalesRetAllowName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7091..70919999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SemiManPSalesRetAllow(), SemiManPSalesRetAllowName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7092..70929999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ByProdScrapSalesRetAllow(), ByProdScrapSalesRetAllowName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7093..70939999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RetEmpPackSalesRetAllow(), RetEmpPackSalesRetAllowName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7094..70949999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ChangesInStockIncome(), ChangesInStockIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '71..7199999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ChgsProdPrgManufGoods(), ChgsProdPrgManufGoodsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '710..710999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ChgsInSemiManufParts(), ChgsInSemiManufPartsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '711..711999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ChangesInFinishedGoods(), ChangesInFinishedGoodsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '712..712999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ChgsInByProdOrScrap(), ChgsInByProdOrScrapName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '713..713999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(WorksDoneForTheComp(), WorksDoneForTheCompName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '73..7399999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(WorkDoneOnIntangA(), WorkDoneOnIntangAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '730..730999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(WorkDoneOnTangibleAHeading(), WorkDoneOnTangibleAHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '731..731999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(WorkDoneOnTangibleA(), WorkDoneOnTangibleAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(WorkDoneOnRealEstateInves(), WorkDoneOnRealEstateInvesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '732..732999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(WorkDoneIntgAInProgr(), WorkDoneIntgAInProgrName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '733..733999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SubvGrantsAndAdj(), SubvGrantsAndAdjName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '74..7499999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SubvGrantsAndLegacies(), SubvGrantsAndLegaciesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '740..740999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SubvGrantsAndLegResult(), SubvGrantsAndLegResultName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '746..746999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherSubvGrantsAndLegRes(), OtherSubvGrantsAndLegResName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '747..747999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherOperatingIncome(), OtherOperatingIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '75..7599999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(JointVenturesResults(), JointVenturesResultsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '751..751999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TransferredLossAdmin(), TransferredLossAdminName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7510..75109999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TransferredProfitParticip(), TransferredProfitParticipName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7511..75119999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LeaseChargesHeading(), LeaseChargesHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '752..752999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RoyFConcessLicencTrdmrks(), RoyFConcessLicencTrdmrksName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '753..753999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CommissionsHeading(), CommissionsHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '754..754999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(Commissions(), CommissionsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(ServicesDoneToEmployees(), ServicesDoneToEmployeesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '755..755999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(MiscellaneousServicesHeading(), MiscellaneousServicesHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '759..759999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(MiscellaneousServices(), MiscellaneousServicesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(FinancialIncome(), FinancialIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '76..7699999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromEquityInvestm(), IncFromEquityInvestmName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '760..760999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromEquityInvestmG(), IncFromEquityInvestmGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7600..76009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromEquityInvestmA(), IncFromEquityInvestmAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7601..76019999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromEquityInvestmOV(), IncFromEquityInvestmOVName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7602..76029999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromEquityInvestmOt(), IncFromEquityInvestmOtName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7603..76039999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncDebtSecurities(), IncDebtSecuritiesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '761..761999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncDebtSecuritiesG(), IncDebtSecuritiesGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7610..76109999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncDebtSecuritiesA(), IncDebtSecuritiesAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7611..76119999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncDebtSecuritiesOVin(), IncDebtSecuritiesOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7612..76129999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncDebtSecuritiesOth(), IncDebtSecuritiesOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7613..76139999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromLoans(), IncFromLoansName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '762..762999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromLtLoans(), IncFromLtLoansName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7620..76209999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromLtLoansG(), IncFromLtLoansGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '76200..7620099999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromLtLoansA(), IncFromLtLoansAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '76201..7620199999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromLtLoansOtVin(), IncFromLtLoansOtVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '76202..7620299999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncLtLoansOth(), IncLtLoansOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '76203..7620399999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncomeFromStLoans(), IncomeFromStLoansName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7621..76219999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromStLoansG(), IncFromStLoansGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '76210..7621099999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromStLoansA(), IncFromStLoansAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '76211..7621199999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromStLoansOtVin(), IncFromStLoansOtVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '76212..7621299999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncFromStLoansOth(), IncFromStLoansOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '76213..7621399999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitFinInstValueFV(), ProfitFinInstValueFVName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '763..763999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitPortfolio(), ProfitPortfolioName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7630..76309999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitAssignByComp(), ProfitAssignByCompName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7631..76319999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitAvailForSale(), ProfitAvailForSaleName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7632..76329999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitCoverageInstr(), ProfitCoverageInstrName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7633..76339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitMarketableSecurities(), ProfitMarketableSecuritiesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '766..766999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitMarkSecLtG(), ProfitMarkSecLtGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7660..76609999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitMarkSecLtA(), ProfitMarkSecLtAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7661..76619999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitMarkSecLtOVin(), ProfitMarkSecLtOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7662..76629999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitMarkSecLtO(), ProfitMarkSecLtOName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7663..76639999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitMarkSecStG(), ProfitMarkSecStGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7665..76659999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitMarkSecStA(), ProfitMarkSecStAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7666..76669999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitMarkSecStOVin(), ProfitMarkSecStOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7667..76679999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitMarkSecStO(), ProfitMarkSecStOName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7668..76689999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtIncFaAndReimbR(), LtIncFaAndReimbRName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '767..767999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExchangeGainHeading(), ExchangeGainHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '768..768999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExchangeGainInternEurHeading(), ExchangeGainInternEurHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7680..76809999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExchangeGainInternEur(), ExchangeGainInternEurName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherExchangeGains(), OtherExchangeGainsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7681..76819999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExchangeGainPosting(), ExchangeGainPostingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherFinancialIncomeHeadingIncome(), OtherFinancialIncomeHeadingIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '769..769999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncomeOnRoundOffEurosHeading(), IncomeOnRoundOffEurosHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7690..76909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncomeOnRoundOffEuros(), IncomeOnRoundOffEurosName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(PositiveBalanceOnSettl(), PositiveBalanceOnSettlName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(OtherFinancialIncomeHeading(), OtherFinancialIncomeHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7691..76919999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherFinancialIncome(), OtherFinancialIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(ExcExtraordItemsInc(), ExcExtraordItemsIncName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '77..7799999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IntangibleAssetsProfit(), IntangibleAssetsProfitName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '770..770999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TangibleAssetsProfitHeading(), TangibleAssetsProfitHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '771..771999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TangibleAssetsProfit(), TangibleAssetsProfitName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Posting, CreatePostingGroups.DomesticPostingGroup(), CreatePostingGroups.MiscPostingGroup(), 0, '', Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), 'VAT21', true, false, false);
        ContosoGLAccount.InsertGLAccount(PropertiesInvestmProfit(), PropertiesInvestmProfitName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '772..772999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PrfOnLtEqInvestVinC(), PrfOnLtEqInvestVinCName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '773..773999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PrfOnLtEqInvestG(), PrfOnLtEqInvestGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7733..77339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PrfOnLtEqInvestA(), PrfOnLtEqInvestAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7734..77349999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PrfOnLtEqInvestOtVin(), PrfOnLtEqInvestOtVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7735..77359999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NegDifferencesMergingBuss(), NegDifferencesMergingBussName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '774..774999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitOnDebentLoans(), ProfitOnDebentLoansName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '775..775999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionsApplied(), ProvisionsAppliedName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '79..7999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvForIntangA(), SurplResrvForIntangAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '790..790999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvForTangA(), SurplResrvForTangAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '791..791999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvForPropInvest(), SurplResrvForPropInvestName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '792..792999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvForInventory(), SurplResrvForInventoryName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '793..793999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvFinishWip(), SurplResrvFinishWipName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7930..79309999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvForGoods(), SurplResrvForGoodsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7931..79319999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvForRawMat(), SurplResrvForRawMatName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7932..79329999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvForOtherMat(), SurplResrvForOtherMatName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7933..79339999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RevDetTradeCredits(), RevDetTradeCreditsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '794..794999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionExcess(), ProvisionExcessName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '795..795999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionForPensionsIncome(), ProvisionForPensionsIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7950..79509999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(TaxationReserveIncome(), TaxationReserveIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7951..79519999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvisionForOtherRespon(), ProvisionForOtherResponName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7952..79529999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForTradeTransactIncome(), ProvForTradeTransactIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7954..79549999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OnerousContractsHeading(), OnerousContractsHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '79544..7954499999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherTradeTransactHeading(), OtherTradeTransactHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '79549..7954999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForEnvironmentalActIncome(), ProvForEnvironmentalActIncomeName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7955..79559999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvForRestructuringHeading(), ProvForRestructuringHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7956..79569999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProvPaymTranCapitalInst(), ProvPaymTranCapitalInstName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7957..79579999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplProviForLtSec(), SurplProviForLtSecName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '796..796999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtCapitalInsG(), SurplResrvLtCapitalInsGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7960..79609999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtCapitalInsA(), SurplResrvLtCapitalInsAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7961..79619999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrLtCapitalInsOv(), SurplResrLtCapitalInsOvName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7962..79629999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtCapitalInsO(), SurplResrvLtCapitalInsOName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7963..79639999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtSecG(), SurplResrvLtSecGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7965..79659999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtSecA(), SurplResrvLtSecAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7966..79669999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtSecOVin(), SurplResrvLtSecOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7967..79679999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtSecOth(), SurplResrvLtSecOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7968..79689999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtCredits(), SurplResrvLtCreditsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '797..797999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtCreditsG(), SurplResrvLtCreditsGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7970..79709999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtCreditsA(), SurplResrvLtCreditsAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7971..79719999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtCreditsOv(), SurplResrvLtCreditsOvName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7972..79729999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvLtCreditsOt(), SurplResrvLtCreditsOtName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7973..79739999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStSecurities(), SurplResrvStSecuritiesName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '798..798999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStCapitalInsG(), SurplResrvStCapitalInsGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7980..79809999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStCapitalInsA(), SurplResrvStCapitalInsAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7981..79819999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrStCapitalInsOv(), SurplResrStCapitalInsOvName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7982..79829999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStCapitalInsO(), SurplResrvStCapitalInsOName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7983..79839999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStSecG(), SurplResrvStSecGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7985..79859999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStSecA(), SurplResrvStSecAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7986..79869999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStSecOVin(), SurplResrvStSecOVinName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7987..79879999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStSecOth(), SurplResrvStSecOthName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7988..79889999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStCredits(), SurplResrvStCreditsName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '799..799999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStCreditsG(), SurplResrvStCreditsGName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7990..79909999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStCreditsA(), SurplResrvStCreditsAName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7991..79919999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStCreditsOv(), SurplResrvStCreditsOvName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7992..79929999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SurplResrvStCreditsOt(), SurplResrvStCreditsOtName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '7993..79939999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExpensesChargedToCapital(), ExpensesChargedToCapitalName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '8..89999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinExpAssetsAndLiabVal(), FinExpAssetsAndLiabValName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '80..8099999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesFinAForSale(), LossesFinAForSaleName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '800..800999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GainsTransFinAForSale(), GainsTransFinAForSaleName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '802..802999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExpensesInCoverageOper(), ExpensesInCoverageOperName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '81..8199999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesCashFlowCoverage(), LossesCashFlowCoverageName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '810..810999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesInvestCoverageAbroad(), LossesInvestCoverageAbroadName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '811..811999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CashFlowCoverageGainsTrans(), CashFlowCoverageGainsTransName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '812..812999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InvestCovAbroadGainsTransf(), InvestCovAbroadGainsTransfName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '813..813999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExpensesConversionDifferenc(), ExpensesConversionDifferencName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '82..8299999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NegativeConvDifferences(), NegativeConvDifferencesName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '820..820999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PositiveConvDiffTransfer(), PositiveConvDiffTransferName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '821..821999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitTaxHeadingCapital(), ProfitTaxHeadingCapitalName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '83..8399999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitTaxCapital(), ProfitTaxCapitalName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '830..830999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RunningTaxHeading(), RunningTaxHeadingName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '8300..83009999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeferredTaxHeading(), DeferredTaxHeadingName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '8301..83019999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitDepositNegativeAdj(), ProfitDepositNegativeAdjName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '833..833999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FiscalIncomePermDiffer(), FiscalIncomePermDifferName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '834..834999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FiscalIncomeDeductions(), FiscalIncomeDeductionsName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '835..835999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PermDifferTransf(), PermDifferTransfName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '836..836999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(DeducFiscalBenefTransf(), DeducFiscalBenefTransfName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '837..837999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ProfitDepositPositiveAdj(), ProfitDepositPositiveAdjName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '838..838999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SubvGrantsAndLegTransf(), SubvGrantsAndLegTransfName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '84..8499999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OfficialSubvTransf(), OfficialSubvTransfName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '840..840999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GrantsAndLegTransf(), GrantsAndLegTransfName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '841..841999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherSubvGrantsLegTrans(), OtherSubvGrantsLegTransName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '842..842999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtLossAndAdjFeeExpenses(), LtLossAndAdjFeeExpensesName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '85..8599999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ActuarialLosses(), ActuarialLossesName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '850..850999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NegAdjLtFeeFixedProv(), NegAdjLtFeeFixedProvName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '851..851999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NonCurrAssetsOnSaleExp(), NonCurrAssetsOnSaleExpName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '86..8699999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NonCurrAAndForSaleLos(), NonCurrAAndForSaleLosName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '860..860999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NonCurrAAndSaleGTrans(), NonCurrAAndSaleGTransName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '862..862999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartGOrACExpPosValAdj(), PartGOrACExpPosValAdjName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '89..8999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LiabPartDetG(), LiabPartDetGName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '891..891999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LiabPartDetA(), LiabPartDetAName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '892..892999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncomeChargedToCapital(), IncomeChargedToCapitalName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '9..99999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinIncAssetsAndLiabVal(), FinIncAssetsAndLiabValName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '90..9099999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GainsFinAForSale(), GainsFinAForSaleName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '900..900999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LossesTransfFinAForSale(), LossesTransfFinAForSaleName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '902..902999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncomeInCoverageOper(), IncomeInCoverageOperName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '91..9199999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncomeCashFlowCoverage(), IncomeCashFlowCoverageName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '910..910999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncomeInvestCoverageAbroad(), IncomeInvestCoverageAbroadName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '911..911999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(CashFlowCoverageLossTransf(), CashFlowCoverageLossTransfName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '912..912999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(InvestCovAbroadLossTransf(), InvestCovAbroadLossTransfName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '913..913999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(IncomeConversionDifferences(), IncomeConversionDifferencesName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '92..9299999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PositiveConvDifferences(), PositiveConvDifferencesName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '920..920999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NegativeConvDiffTransfer(), NegativeConvDiffTransferName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '921..921999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(SubvGrantsAndLegIncome(), SubvGrantsAndLegIncomeName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '94..9499999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OfficialSubvIncome(), OfficialSubvIncomeName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '940..940999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(GrantsAndLegIncome(), GrantsAndLegIncomeName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '941..941999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OtherSubvGrantsAndLegInc(), OtherSubvGrantsAndLegIncName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '942..942999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(LtProfitAndAdjFeeIncome(), LtProfitAndAdjFeeIncomeName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '95..9599999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ActuarialGains(), ActuarialGainsName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '950..950999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PosAdjLtFeeFixedProv(), PosAdjLtFeeFixedProvName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '951..951999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NonCurrAssetsOnSaleInc(), NonCurrAssetsOnSaleIncName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '96..9699999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NonCurrAAndForSaleProfit(), NonCurrAAndForSaleProfitName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '960..960999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NonCurrAAndSaleLossTrans(), NonCurrAAndSaleLossTransName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '962..962999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PartGOrACoIncPosValAdj(), PartGOrACoIncPosValAdjName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '99..9999999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PrevNegAdjRecG(), PrevNegAdjRecGName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '991..991999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(PrevNegAdjRecA(), PrevNegAdjRecAName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '992..992999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NegAdjDetValTransG(), NegAdjDetValTransGName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '993..993999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(NegAdjDetValTransA(), NegAdjDetValTransAName(), Enum::"G/L Account Income/Balance"::" ", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '994..994999999999999', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RawMaterialsAssetsPosting(), RawMaterialsAssetsPostingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Posting, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', true, false, false);
        ContosoGLAccount.InsertGLAccount(RawMaterialsHeading(), RawMaterialsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(RawMaterialsHeadingAssets(), RawMaterialsHeadingAssetsName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(OfficeSuppliesHeading(), OfficeSuppliesHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FinishedGoodsHeading(), FinishedGoodsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::" ", Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(FixedAssetsHeading(), FixedAssetsHeadingName(), Enum::"G/L Account Income/Balance"::"Balance Sheet", Enum::"G/L Account Category"::Assets, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExtraordinaryExpensesHeading(), ExtraordinaryExpensesHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Expense, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExtraordinaryExpensesHeadingExpense(), ExtraordinaryExpensesHeadingExpenseName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Expense, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.InsertGLAccount(ExtraordinaryIncomeHeading(), ExtraordinaryIncomeHeadingName(), Enum::"G/L Account Income/Balance"::"Income Statement", Enum::"G/L Account Category"::Income, Enum::"G/L Account Type"::Heading, '', '', 0, '', Enum::"General Posting Type"::" ", '', '', false, false, false);
        ContosoGLAccount.SetOverwriteData(false);
        UpdateIncomeStatmentBalanceAccount();
        UpdateAPIAccountTypeToGLAccount();
    end;

    local procedure UpdateIncomeStatmentBalanceAccount()
    var
        CreateGLAccount: Codeunit "Create G/L Account";
    begin
        UpdateIncomeStmtBalAcc(CreateGLAccount.Advertising(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(CreateGLAccount.PhoneAndFax(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(CreateGLAccount.OfficeSupplies(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(CreateGLAccount.ExtraordinaryExpenses(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(CreateGLAccount.Miscellaneous(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(CreateGLAccount.ExtraordinaryIncome(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(NationalPurchases(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(EuPurchases(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(IntNonEuPurch(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(PurchForNatRawMat(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(PurchForEuRawMat(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(PurchIntNonEuRawMat(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnPurFinGoodN(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnPurFinGoodEu(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnPurFinGoodI(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnPurcRawMatN(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnPurcRawMatEu(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnPurcRawMatI(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnPurcOthersN(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnPurcOthersEu(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnPurcOthersI(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(NationalReturns(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(EuReturns(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(InternationalNonEuRet(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(MiscellaneousReturns(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ReturnAndAllowOnGoods(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ReturnAllowOnRawMat(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ChangesInStockPosting(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ChangesInRawMaterials(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(Projects(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(LeaseChargesPosting(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(Repairs(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(InternalResources(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(Consulting(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProfessionalAdvisoryServices(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProjectCostsRetail(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProjectCostsAdjustment(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProjectCostsRecognized(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProjectsCostsRawMaterial(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProjectsCostsResources(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(Transportation(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(Fuel(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(InsurancePremiums(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(BankingServices(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(Electricity(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(Water(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(OtherSupplies(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(OtherServices(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(OtherBusinessExpenses(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProfitTax(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(OtherTaxes(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(WagesAndSalaries(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(Prizes(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(PensionFunds(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(SocialSecPaidByCompany(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(InterestOnBillsDiscounted(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(FactOpInterOtherBanks(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(RealLossExchInternEur(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(RealizedLossesOnExchange(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ExpenOnRoundOffEur(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(NegativeBalanceOnSettl(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(OtherFinancialExpenses(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(OtherFinExpBillReject(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(LossOnTangAssetsTransf(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DeprOfTangAssets(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(NationalGoodsSales(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(GoodsSalesEu(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(IntNonEuGoodsSales(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(NationalRawMatSales(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(EuRawMaterialsSales(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(IntRawMatSales(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProvisionOfServices(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(InternalResourcesPosting(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProjectsSales(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(OtherServicesPosting(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProjectsSalesAdjustment(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ProjectsSalesRecognized(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(NationalServices(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(EuServices(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(IntServicesNonEu(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ServiceContractSale(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(SalesOfServiceContracts(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnSalesGoodsN(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnSalesGoodsEu(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnSalesGoodsI(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnSalFinGoodsN(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnSFinGoodsEu(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnSFinGoodsI(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnSSemiManufN(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnSSemiManufEu(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllowOnSSemiManufI(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllOnSProdScrRetN(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllOnSProdScrRetEu(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(DiscAllOnSProdScrRetI(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(NationalReturnsPosting(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(EuReturnsPosting(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(IntNonEuReturns(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(GoodsSalesReturnAllow(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(WorkDoneOnTangibleA(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(Commissions(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(MiscellaneousServices(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ExchangeGainInternEur(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(ExchangeGainPosting(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(IncomeOnRoundOffEuros(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(PositiveBalanceOnSettl(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(OtherFinancialIncome(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(TangibleAssetsProfit(), ProfitOrLoss());
        UpdateIncomeStmtBalAcc(LossesFinAForSale(), ValueAdjFinAForSalePosting());
        UpdateIncomeStmtBalAcc(GainsTransFinAForSale(), ValueAdjFinAForSalePosting());
        UpdateIncomeStmtBalAcc(LossesCashFlowCoverage(), CashFlowCoverage());
        UpdateIncomeStmtBalAcc(LossesInvestCoverageAbroad(), NetInvestCovAbroad());
        UpdateIncomeStmtBalAcc(CashFlowCoverageGainsTrans(), CashFlowCoverage());
        UpdateIncomeStmtBalAcc(InvestCovAbroadGainsTransf(), NetInvestCovAbroad());
        UpdateIncomeStmtBalAcc(NegativeConvDifferences(), ConversionDifferences());
        UpdateIncomeStmtBalAcc(PositiveConvDiffTransfer(), ConversionDifferences());
        UpdateIncomeStmtBalAcc(FiscalIncomePermDiffer(), FiscalIncDifRetPrevYears());
        UpdateIncomeStmtBalAcc(FiscalIncomeDeductions(), FiscalIncDifRetPrevYears());
        UpdateIncomeStmtBalAcc(PermDifferTransf(), FiscalIncDifRetPrevYears());
        UpdateIncomeStmtBalAcc(DeducFiscalBenefTransf(), FiscalIncDifRetPrevYears());
        UpdateIncomeStmtBalAcc(OfficialSubvTransf(), OfficialSubv());
        UpdateIncomeStmtBalAcc(GrantsAndLegTransf(), GrantsAndLegaciesHeading());
        UpdateIncomeStmtBalAcc(OtherSubvGrantsLegTrans(), OtherSubvGrantsAndLegHeading());
        UpdateIncomeStmtBalAcc(ActuarialLosses(), GainsLossReservesAndAdjHeading());
        UpdateIncomeStmtBalAcc(NegAdjLtFeeFixedProv(), GainsLossReservesAndAdjHeading());
        UpdateIncomeStmtBalAcc(NonCurrAAndForSaleLos(), ValueAdjNoncurrentASale());
        UpdateIncomeStmtBalAcc(NonCurrAAndSaleGTrans(), ValueAdjNoncurrentASale());
        UpdateIncomeStmtBalAcc(LiabPartDetG(), ValueAdjFinAForSalePosting());
        UpdateIncomeStmtBalAcc(LiabPartDetA(), ValueAdjFinAForSalePosting());
        UpdateIncomeStmtBalAcc(GainsFinAForSale(), ValueAdjFinAForSalePosting());
        UpdateIncomeStmtBalAcc(LossesTransfFinAForSale(), ValueAdjFinAForSalePosting());
        UpdateIncomeStmtBalAcc(IncomeCashFlowCoverage(), CashFlowCoverage());
        UpdateIncomeStmtBalAcc(IncomeInvestCoverageAbroad(), NetInvestCovAbroad());
        UpdateIncomeStmtBalAcc(CashFlowCoverageLossTransf(), CashFlowCoverage());
        UpdateIncomeStmtBalAcc(InvestCovAbroadLossTransf(), NetInvestCovAbroad());
        UpdateIncomeStmtBalAcc(PositiveConvDifferences(), ConversionDifferences());
        UpdateIncomeStmtBalAcc(NegativeConvDiffTransfer(), ConversionDifferences());
        UpdateIncomeStmtBalAcc(OfficialSubvIncome(), OfficialSubv());
        UpdateIncomeStmtBalAcc(GrantsAndLegIncome(), GrantsAndLegaciesHeading());
        UpdateIncomeStmtBalAcc(OtherSubvGrantsAndLegInc(), OtherSubvGrantsAndLegHeading());
        UpdateIncomeStmtBalAcc(ActuarialGains(), GainsLossReservesAndAdjHeading());
        UpdateIncomeStmtBalAcc(PosAdjLtFeeFixedProv(), GainsLossReservesAndAdjHeading());
        UpdateIncomeStmtBalAcc(NonCurrAAndForSaleProfit(), ValueAdjNoncurrentASale());
        UpdateIncomeStmtBalAcc(NonCurrAAndSaleLossTrans(), ValueAdjNoncurrentASale());
        UpdateIncomeStmtBalAcc(PrevNegAdjRecG(), ValueAdjFinAForSalePosting());
        UpdateIncomeStmtBalAcc(PrevNegAdjRecA(), ValueAdjFinAForSalePosting());
        UpdateIncomeStmtBalAcc(NegAdjDetValTransG(), ValueAdjNoncurrentASale());
        UpdateIncomeStmtBalAcc(NegAdjDetValTransA(), ValueAdjNoncurrentASale());
        UpdateIncomeStmtBalAcc(ExtraordinaryExpensesHeadingExpense(), '');
    end;

    local procedure UpdateAPIAccountTypeToGLAccount()
    var
        CreateGLAccount: Codeunit "Create G/L Account";
    begin
        UpdateApiAccountType(CreateGLAccount.Advertising(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(CreateGLAccount.PhoneandFax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(CreateGLAccount.OfficeSupplies(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(CreateGLAccount.ExtraordinaryExpenses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreateGLAccount.Miscellaneous(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(CreateGLAccount.ExtraordinaryIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(CreateGLAccount.RetainedEarnings(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreateGLAccount.FixedAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreateGLAccount.DepreciationofFixedAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreateGLAccount.Inventory(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreateGLAccount.OtherLiabilities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreateGLAccount.PersonnelExpenses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreateGLAccount.OtherOperatingExpenses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreateGLAccount.FinishedGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreateGLAccount.FixedAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BasicFinancing(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CapitalHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShareCapitalHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShareCapitalPosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SocialFund(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Capital(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnersInvest(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnersInvestSCap(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnersInvestPCap(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnersPendNonmonetaryInv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartPendNonmonInvSCap(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartPendNonmonInvPCap(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SharesSpecialSituations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SharesCapitalReductions(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Reserves(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SharePremium(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherCapitalInstrHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CapitalMixedFinInstr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherCapitalInstr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LegalReserveHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LegalReserve(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(VoluntaryReserves(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(VoluntaryReserve(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SpecialReserves(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(MajorPartnerSharesReserves(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StatutoryReserves(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprCapitalReserve(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodwillReserves(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OwnSharesAsGuaranteeReser(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GainsLossReservesAndAdjHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GainsLossReservesAndAdj(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnersOrOwnerInvestments(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DifCapitalExchEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(UnappliedResults(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(AccumulatedLosses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitOrLossHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitOrLoss(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SubvGrantsAndCurrExch(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OfficialSubvHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OfficialSubv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GrantsAndLegaciesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GrantsAndLegacies(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherSubvGrantsAndLegHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherSubvGrantsAndLeg(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ValueAdjFinAForSaleHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ValueAdjFinAForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ValueAdjFinAForSalePosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CoverageOperations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CashFlowCoverageHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CashFlowCoverage(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NetInvestCovAbroadHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NetInvestCovAbroad(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ConversionDifferencesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ConversionDifferences(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ValueAdjNoncurrentASaleHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ValueAdjNoncurrentASale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FiscalIncRetPrevYears(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FiscalIncDifRetPrevYearsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FiscalIncDifRetPrevYears(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FiscalIncDeductDiscounts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Provision(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionForPensionsEquity(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TaxationReserveEquity(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionForResponsibilities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionForMayorRepairs(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForEnvironmentalActEquity(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionForRestructuring(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvPaymTransCapitalInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SpecialLtDebts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtSharesLiability(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InvestLiability(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InvestLiabilityG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InvestLiabilityA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InvestLiabilityOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherInvestLiability(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PendNonmonetaryInvLiab(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PendNonmonetaryInvLiabG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PendNonmonetaryInvLiabA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PendNonmonInvLiabOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherPendNonmonInv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(VincCompaniesLtDebts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtsLtWithVincFinInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtsLtToFinInstG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtsLtToFinInstA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtsLtToOthVincCredInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtFixedAssetVendorsVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtFixedAssetVendorsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtFixedAssetVendorsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtFixedAssetVendorsOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinLtLeaseCreditorsVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinLtLeaseCreditorsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinLtLeaseCreditorsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinLtLeaseCreditorsOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherLtDebtsToVincComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherLtDebtsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherLtDebtsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherLtDebtsOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LoansAndSimilarBorrowings(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LTLoansFromFinInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LongTermDebts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LongTermDebtsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ConvertibleInGrants(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtFixedAssetVendors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinLtLeaseCreditors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCredBillExchPay(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDerivFinLiab(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDerivFinLiabPortfolio(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDerivFinLiabCoverInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ObligAndDebentLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ObligAndConvDebentLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtsOthMarketableSecur(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtGuaranteesDepRec(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtGuaranteesReceived(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtSalesAndServicesAdvances(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDepositsReceived(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtFinancialGuarantees(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TransitionalSituations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IssuedSharesOrPartStock(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SharesSubscriptors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(EqCapitalCInCreation(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IssuedSharesOrPartFinLiab(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinLiabSharesSubs(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PendFinLiabSharesOrSt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IntangibleAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ResearchCostsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ResearchCosts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DevCostsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DevCosts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FranchisedAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IndustrialProperty(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Goodwill(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RightToLease(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(EdpApplications(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IntangibleAssetsAdvances(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TangibleAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FreeholdLand(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Land(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(Buildings(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SpecificInstallations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IndustrialMachineryHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IndustrialMachinery(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(IndustrialTooling(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PlantMachineryEquipment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FurnitureHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Furniture(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(InfoProcessEquipment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DataProcessingEquipment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(TransportEquipment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Vehicle(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(OtherTangibleFixedAssetsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherTangibleFixedAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(PropertiesInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FreeholdLandInv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LandInv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(BuildingsInv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FixedAssetsInProgress(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ImprPrepCostsFreehLand(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ConstructionWorkInProgress(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PlantMachEquipmUndInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(MachineryUnderInstallation(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InfoProcessEquipmUndInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TangibleAssetsAdvances(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(VincCompFinInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtInvestmInVincCom(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtInvestmG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtInvestmA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtInvestmOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDebtValueVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDebtValueG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDebtValueA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDebtValueOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtCreditsToVincComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtCreditsToG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtCreditsToA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtCreditsToOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(AmountsUncalledLt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(AmountsUncalledG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(AmountsUncalledA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(AmountsUncalledOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherFinancialInvestmLt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtInvestmInCapitalInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDebtValuesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDebtValues(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LongTermLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FaTransfLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StaffLtCredits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDerivFinCapital(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDerivFinCapPortfolio(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtDerivFinCapCoverInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtPersInsContReimbRights(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LongTermTaxations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PendingInvestOnCapitalInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GuarantDepSecurities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GuarantSecuritiesLT(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GuaranteedSecurities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GuaranteedDepositsLT(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprOfIntangibleFa(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepResearchCosts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepDevelopmCosts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepFranchisedAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepIndustrialProperty(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepRightToLease(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepEdpApplications(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprOfTangibleFa(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepBuildings(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepTechnicalInstallations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepIndustrialMachineryHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepIndustrialMachinery(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepIndustrialTooling(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepPlantMachineryEquip(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepFurnitureAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepFurniture(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepInfoProcessEquipment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepTransportEquipmentHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepTransportEquipment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepOtherTangibleFaHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepOtherTangibleFa(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepPropertiesInvestmHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepPropertiesInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeteriorForFa(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeteriorOfIntangFa(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetResearchCosts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetDevelopmCosts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetFranchisedAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetIndustrialProperty(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetRightToLease(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetEdpApplications(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeteriorOfTangFa(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetFreeholdLand(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetBuilding(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetTechnicalInstallations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetIndustrialMachinery(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetIndustrialTooling(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetPlantMachineryEquip(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DepFurnitureHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetInfoProcessEquipment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetTransportEquipment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetOtherTangFixedAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetPropertiesInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetFreeholdLandHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetBuildingHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtSecValueInVincC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtSecValueInGr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtSecValueInAsoc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtDebtSecuritiesVinC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtDebtSecuritiesG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtDebtSecuritiesA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtDebtSecurOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtCreditsValToVincC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtCreditsToGr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtCreditsToAsoc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtCreditsToOthVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtDebtSecuritiesValue(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLtCreditsValue(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Goods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(AssemblyBom(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodsTradeCred(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BillOfMaterTradeCred(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RawMaterialsProv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SuppliesOtherConsum(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ItemsAssembToIncorp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Fuels(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ReplacementParts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherMaterials(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Packaging(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Containers(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProdInProgrManufGoodsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProdInProgrManufGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SalesSpecialist(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WipProjectSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WipInvoicedProjectSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CostsSpecialist(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WipProjectCosts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WipAccruedProjectCosts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(JobPostingGroup(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WorkInProgressHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WorkInProgress(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ByProductsOrScrap(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ByProducts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WasteProducts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RejectsOfManufacturing(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeteriorInventoryValue(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetGoodsValue(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetRawMat(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetSuppliesOtherConsum(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetProdProgrManufGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetForWorkInProgress(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetForFinishedGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetForByProdOrScrap(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreditorsAndDebtors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCreditorsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCreditors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(STTradeCredEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NationalTradeCreditors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InternatTradeCreditors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InvUnderPaymentOrder(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ForCurrTradeCreditors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(EuTradeCreditors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCredInvNotRec(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCredBillOfExchPay(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCrBillExPay(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BillExPayNational(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BillExInPaymtOrder(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCreditorsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCreditorsGEuroHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCreditorsGEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(ProvForBillExchPayG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCreditorsGForCurr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCrReturnEmptiesG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCredInvNotRecG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCredAsoc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCredOthVinC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCrReturnEmpties(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCredAdvancesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCredAdvances(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCredAdvancesNational(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(TradeCredAdvancesEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(TradeCredAdvancesExport(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(OtherCreditorsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreditorsProvOfServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(STCreditorsEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherCreditors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreditorsProvServForCurr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreditorsInvNotRec(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreditorsBillExPayHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreditorsBillExPay(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreditorsComOperationsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreditorsComOperations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeAccReceivHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeAccReceiv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeAccReceivEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NationalCustomers(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InternationalCustomers(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InvoicesToBePaid(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscountedInvoicesAccount(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RejectedInvoicesAccount(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeAccReceivForCurr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeAccRecInvNotRec(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeAccRecBillsColl(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PendingReceivablesBillsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PendingReceivablesBills(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscountedBillsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscountedBills(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BillsOnCollectionManagHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BillsOnCollectionManag(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(UnpaidBillsOfExchangeHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(UnpaidBillsOfExchange(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeAccFactoringOp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeAccRecAccG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GroupTrAccRecEuroHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GroupTrAccRecEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BillsOfExchRecG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TrAccFactoringOpG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ForCurrTrAccRecG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TrAccRecRetEmptG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GroupTrAccRecRetEmpt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TrAccRecInvNotRecG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeAcsRecAccA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TrAccRecOtherVincComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BadDoubtfulDebts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TrAccRecRetEmpt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeDebtorsCreditBalances(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StTrDebtAdvancesNational(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(StTrDebtAdvancesEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(StTrDebtAdvancesExport(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(OtherDebtors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtorsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtorsEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Debtors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtorsForeignCurr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtorsInvNotRec(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtorsBillsOfCollection(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtorsReceivablesPendBills(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtorsDiscountedBills(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtBillsOnCollManag(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtorsUnpaidBills(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BadDoubtfulDebt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtorsJointVentures(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Employees(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RemunerationAdvancesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RemunerationAdvances(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PendingRemunerations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PendingFixContribSistRem(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GeneralGovernment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovernmentReceivable(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovernmentVatReceivHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovernmentVatReceiv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovernmentSubvReceiv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovernmentTaxReturnReceiv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SocialSecurity(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SocialSecurityReceivable(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ValueAddedTaxDeduct(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovVatDeductible(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovDeducPaymOnAccHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovDeducPaymOnAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeferredTaxAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeducTemporaryDifferences(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeferredDeductDiscounts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CreditForLossesToComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovernmentCreditor(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovernmentCreditorVatHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovernmentCreditorVat(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovernmentCreditorIrpfHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovernmentCreditorIrpf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovCredCorpIncTaxHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovCredCorpIncTax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovCreditorSubvHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GovCreditorSubv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SocialSecurityCreditorHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SocialSecurityCreditor(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ValueAddTaxCollByComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(VatCollByTheComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(VatEuReversion(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeferredProfitTax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChargSprOverSevPeriods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Prepayments(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(UnearnedIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetCreditValAndStVend(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetCreditValTradeOper(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetCreditValTradeOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetCreditValTradeOG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetCreditValTradeOA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetCreditValTradeOOv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForTradeTransactLiabilities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForBurdensomeContracts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForOtherTradeTransact(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinancialAccounts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermInvestments(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermDebentLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TreasureBills(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ConvertibleDebentLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StSharesLiability(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtsAsMarketableSec(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BorrowingsInterests(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividendsLiability(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprMarketableSec(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprOblAndDebLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprConverOblAndDebL(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprOtherMarketableSec(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermDebtsWithVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StDebtsVincFinInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LoansFromFinInstitG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LoansFromFinInstitA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LoansFromFinInstitOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FixedAssetCredVincC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FixedAssetCredG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FixedAssetCreditorsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FixedAssetsCredOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFinLeaseCredVincC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFinLeaseCredG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFinLeaseCredA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFinLeaseCredOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherStDebtsVincC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermDebtsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermDebtsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermDebtsOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StDebtInterestsVincC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtInterestsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtInterestsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtInterestsOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoansDebt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoansFromFinInstitutHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoansFromFinInstitut(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermLoansPosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StDebtsForCredits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtOnDiscountedBillsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtOnDiscountedBills(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscInvoiceDebtAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FactoringOpDebtAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtInSubvAndLeg(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFixedAssetCreditors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFinLeaseCreditors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StBillOfExchPay(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ActiveDividendToPay(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermDebtIntCredInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermDebtInterest(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermProvisions(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionForPensionsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TaxationReserveHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionForResponsibilitiesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionForFaDismantle(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForEnvironmentalActHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForRestructuring(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForPaymLiabInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GroupAssocFinInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StTradeInvestmVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StTradeInvestmG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StTradeInvestmA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StTradeInvestmOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFixedIncomeSecVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFixedIncomeSecG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFixedIncomeSecA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFixedIncomeSecOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoansToVincComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoansToGroupC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoansToAComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoansToOtherVincC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinInvestmInterestVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinInvestmInterestG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinInvestmInterestsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinInvestmInterestsOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StInterestCreditsToVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StInterestCreditsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StInterestCreditsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StInterestCreditsOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividReceivFinInvInVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividReceivFinInvG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividReceivFinInvA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividReceivFinInvOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StDemandExpendEqVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StDemandExpendEqG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StDemandExpendEqA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StDemandExpendEqOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InterimFinancialInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InvestmentsInCapitalInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFixedIncomeSecurity(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFixedIncomeInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermLoansHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFaTransferenceLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StaffStCredits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividendsReceivable(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SecuritiesStInterests(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StCreditsInterests(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermTaxations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StAmtsUncalledOnShares(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherNonBankAccounts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProprietorsAccount(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnAdministrCheckingAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OthersCheckingAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GroupVincCheckingAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(AsocVincCheckingAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OthersVincCheckingAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(MergeAndSplitCheckAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnersDissolvedSociety(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnersMergeAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnersSplitSociety(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnersSplitAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TemporaryJoinsChecAcc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(UnappliedItems(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DemandExpendOnEquity(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DemandExpendEqGroup(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DemandExpendEqAsoc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DemandExpendEqOtVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DemandExpendEqOthers(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InterimActiveDividends(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SharehPaymentCallable(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SharehPayCallSharesOrG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SharehPayCallFinLiab(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DerivativeInstrumentSt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StFinDerivAssetsPortfolio(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(AssetsDerivInstStCovIns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LiabDerivInstStPortfolio(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LiabDerivInstStCovIns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SecDepositsReceivGuarant(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermGuaranteesReceiv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermDepositsReceiv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermGuaranteedSec(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ShortTermGuarantDeposits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InterestPaidInAdvance(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InterestReceivedInAdvance(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinancialGuaranteesSt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CashFlow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CashEuroHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CashEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CashForeignCurrency(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BanksAccountAtSightEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BanksEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BanksAccAtSightFCurr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BanksForeignCurrency(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BanksSavingAccEuro(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SavingAccount(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BanksSavingAccForCurr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(HighLiqStInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NonCurrentAssetsForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InvestmWithVincComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinancialInvestments(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InventoryTradeDebtors(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Provisions(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SpecialCharactDebts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtsWithVincComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TradeCreditorsAndOthPay(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueFinancialProducts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStPartVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStPartG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStPartA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStSecVincC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStSecG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStSecA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStSecOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStCreditsToVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStCreditsToG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStCreditsToAs(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStCreditsToOtV(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStSecurities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValueStCredits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValNoncurrAForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValFixNoncAForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValRelatedInvesForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValFinInvestForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValStocksDebtsAndOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetValOtherAForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CostAndExpenseAccounts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Purchases(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PurchasesOfGoodsForResale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NationalPurchases(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(EuPurchases(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(IntNonEuPurch(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(PurchForRawMaterials(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PurchForNatRawMat(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(PurchForEuRawMat(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(PurchIntNonEuRawMat(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(PurchasesForConsumables(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscAllowedOnPurch(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscAllowOnPurchFinGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscAllowOnPurFinGoodN(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(DiscAllowOnPurFinGoodEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(DiscAllowOnPurFinGoodI(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(DiscAllowOnPurchRawMat(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscAllowOnPurcRawMatN(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(DiscAllowOnPurcRawMatEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(DiscAllowOnPurcRawMatI(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(DiscAllowOnPurchOthers(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscAllowOnPurcOthersN(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(DiscAllowOnPurcOthersEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(DiscAllowOnPurcOthersI(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(WorkDoneByOtherComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PurchaseReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodsPurchasedReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NationalReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(EuReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(InternationalNonEuRet(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(MiscellaneousReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(RawMatPurchasedReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ConsumPurchasedReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PurchasesReturnAllow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodsPurchReturnAllow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ReturnAndAllowOnGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(RawMatPurchRetAllow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ReturnAllowOnRawMat(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(ConsumPurchRetAllow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChangesInStockHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChangesInStock(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChangesInStockPosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChangesInRawMaterialsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChangesInRawMaterials(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChgInSuppOtherConsum(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExternalChargesForServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ResearchAndDevelopment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Projects(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(LeaseAndRoyalties(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LeaseChargesPosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(MaintenancesAndRepairs(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Repairs(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(ProfessionalServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InternalResources(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(Consulting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(ProfessionalAdvisoryServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(ProjectCostsRetail(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProjectCostsAdjustment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProjectCostsRecognized(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProjectsCostsRawMaterial(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProjectsCostsResources(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TransportationHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Transportation(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(Fuel(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(InsurancePremiumsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InsurancePremiums(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(BankingServicesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BankingServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(AdvertisingPublicRelations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Supplies(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Electricity(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(Water(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(OtherSupplies(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(OtherServicesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(OtherBusinessExpenses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(Tax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitTaxHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RunningTax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitTax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeferredTax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherTaxesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherTaxes(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NegativeAdjustmOnProfits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NegativeAdjustmIndivTax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NegativeAdjustmRunningAct(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NegativeAdjustmInvestTax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TaxRefunds(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PositiveAdjustmOnProfits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PositiveAdjustmIndivTax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PositiveAdjustmRunningAct(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PositiveAdjustmInvestTax(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WagesAndSalariesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WagesAndSalaries(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Prizes(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PensionFunds(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Compensations(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SocialSecPaidByCompanyHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SocialSecPaidByCompany(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtFeeInFixedContribSist(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtFeeInFixedProvisionSis(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(AnnualContributions(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherCosts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FeesByEquityProducts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PersonnelRetEqProd(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PersonnelRetCashEqProd(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherSocialExpenses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(BadDebtLosses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartnershipsAndOthers(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TransferredProfitAdmin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TransferredLossParticipant(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherOperatingLosses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinancialExpenses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinExpProvUpdates(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InterestDebentLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtInterestDebentLoansG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtInterestDebentLoansA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtInterestDebentLoansOv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtInterestDebentLoansOt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StInterestDebentLoansG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StInterestDebentLoansA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StInterestDebentLoansOv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StInterestDebentLoansOt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtInterest(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtInterestGroup(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtInterestAssoc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtInterestOtVinc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtInterestFinIns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DebtInterestOther(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesFinInstValueFV(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PortfolioLosses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesAssignByComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesAvailForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CoverageInstLosses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividendLiability(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividendLiabilityG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividendLiabilityA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividendLiabilityOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DividendLiabilityOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InterestOnBillsDisc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IntOnBillsDiscFinInsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IntOnBillsDiscFinInsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IntOnBillsDiscFinInsV(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InterestOnBillsDiscOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InterestOnBillsDiscounted(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(FactOpInterBanksG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FactOpInterBanksA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FactOpInterBanksV(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FactOpInterOtherBanksHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FactOpInterOtherBanks(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(SecuritiesLoss(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtSecuritiesLossG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtSecuritiesLossA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtSecuritiesLossOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtSecuritiesLossOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StSecuritiesLossG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StSecuritiesLossA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StSecuritiesLossOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StSecuritiesLossOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LoanLoss(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtLoanLossG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtLoanLossA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtLoanLossOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtLoanLossOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoanLossG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoanLossA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoanLossOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(StLoanLossOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RealizedLossesOnExchangeHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RealLossExchInternEurHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RealLossExchInternEur(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherRealLossesOnExch(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RealizedLossesOnExchange(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherFinancialExpensesHeadingExpenses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExpenOnRoundOffEurHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExpenOnRoundOffEur(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(NegativeBalanceOnSettl(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(OtherFinancialExpensesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherFinancialExpenses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Purchase);
        UpdateApiAccountType(OtherFinExpBillReject(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExcepExtrItemsExp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossOnIntangATransf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossOnTangAssetsTransfHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossOnTangAssetsTransf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossOnPropertiesInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossOnLtEqInvestVinC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossOnLtEqInvestG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossOnLtEqInvestA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossOnLtEqInvestOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossOnDebentLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprecAmortizOfFa(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprOfIntangAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprOfTangAssetsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprOfTangAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeprOnPropertiesInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLossesAndOthers(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLossOnIntangibleA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLossOnTangibleA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLossOnPropertiesInvest(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLossOnInventory(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLossOnFinishAndWip(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLossOnGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLossOnRawMat(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLossOnSupOtCons(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DetLossOnTradeCredits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForTradeTransactHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OnerousContracts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherTradeTransact(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtSecurities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtCapitalInstG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtCapitalInstA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtCapitalInsOv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtCapitalInsO(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtSecG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtSecA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtSecOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtSecOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtCredits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtCreditsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtCreditsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtCreditsOV(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetLtCreditsOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStSecurities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStCapitalInstG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStCapitalInstA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStCapitalInsOv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStCapitalInstO(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStSecuritiesG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStSecuritiesA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStSecuritiesOv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStSecuritiesO(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStCredits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStCreditsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStCreditsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStCreditsOV(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesDetStCreditsOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SalesAndIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodsSalesServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodsSalesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodsSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NationalGoodsSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(GoodsSalesEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(IntNonEuGoodsSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(RawMaterialsSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NationalRawMatSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(EuRawMaterialsSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(IntRawMatSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(FinishedGoodsSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SemiManufPartsSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ByProductsScrapSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RetEmpPackSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionOfServicesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionOfServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(InternalResourcesPosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(ProjectsSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherServicesPosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(ProjectsSalesAdjustment(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProjectsSalesRecognized(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(NationalServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(EuServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(IntServicesNonEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(TotalSaleOfServContracts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ServiceContractSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(SalesOfServiceContracts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllowedOnSales(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscAllowedOnSalesGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscAllowOnSalesGoodsN(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllowOnSalesGoodsEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllowOnSalesGoodsI(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllowOnSalesFinGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscAllowOnSalFinGoodsN(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllowOnSFinGoodsEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllowOnSFinGoodsI(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllowOnSalesSemiManuf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscAllowOnSSemiManufN(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllowOnSSemiManufEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllowOnSSemiManufI(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllOnSalProdScrapRet(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DiscAllOnSProdScrRetN(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllOnSProdScrRetEu(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(DiscAllOnSProdScrRetI(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(SalesReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodsReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NationalReturnsPosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(EuReturnsPosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(IntNonEuReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(FinishedGoodsReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SemiManufPartsReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ByProductsScrapReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RetEmpPackReturns(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SalesReturnAllow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodsSalesReturnAllowHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GoodsSalesReturnAllow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(FinishGoodsSalesRetAllow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SemiManPSalesRetAllow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ByProdScrapSalesRetAllow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RetEmpPackSalesRetAllow(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChangesInStockIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChgsProdPrgManufGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChgsInSemiManufParts(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChangesInFinishedGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ChgsInByProdOrScrap(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WorksDoneForTheComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WorkDoneOnIntangA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WorkDoneOnTangibleAHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WorkDoneOnTangibleA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(WorkDoneOnRealEstateInves(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(WorkDoneIntgAInProgr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SubvGrantsAndAdj(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SubvGrantsAndLegacies(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SubvGrantsAndLegResult(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherSubvGrantsAndLegRes(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherOperatingIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(JointVenturesResults(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TransferredLossAdmin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TransferredProfitParticip(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LeaseChargesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RoyFConcessLicencTrdmrks(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CommissionsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(Commissions(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(ServicesDoneToEmployees(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(MiscellaneousServicesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(MiscellaneousServices(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(FinancialIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromEquityInvestm(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromEquityInvestmG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromEquityInvestmA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromEquityInvestmOV(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromEquityInvestmOt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncDebtSecurities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncDebtSecuritiesG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncDebtSecuritiesA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncDebtSecuritiesOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncDebtSecuritiesOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromLtLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromLtLoansG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromLtLoansA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromLtLoansOtVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncLtLoansOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncomeFromStLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromStLoansG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromStLoansA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromStLoansOtVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncFromStLoansOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitFinInstValueFV(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitPortfolio(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitAssignByComp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitAvailForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitCoverageInstr(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitMarketableSecurities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitMarkSecLtG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitMarkSecLtA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitMarkSecLtOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitMarkSecLtO(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitMarkSecStG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitMarkSecStA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitMarkSecStOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitMarkSecStO(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtIncFaAndReimbR(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExchangeGainHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExchangeGainInternEurHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExchangeGainInternEur(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherExchangeGains(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExchangeGainPosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherFinancialIncomeHeadingIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncomeOnRoundOffEurosHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncomeOnRoundOffEuros(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(PositiveBalanceOnSettl(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(OtherFinancialIncomeHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherFinancialIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(ExcExtraordItemsInc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IntangibleAssetsProfit(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TangibleAssetsProfitHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TangibleAssetsProfit(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::Sale);
        UpdateApiAccountType(PropertiesInvestmProfit(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PrfOnLtEqInvestVinC(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PrfOnLtEqInvestG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PrfOnLtEqInvestA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PrfOnLtEqInvestOtVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NegDifferencesMergingBuss(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitOnDebentLoans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionsApplied(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvForIntangA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvForTangA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvForPropInvest(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvForInventory(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvFinishWip(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvForGoods(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvForRawMat(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvForOtherMat(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RevDetTradeCredits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionExcess(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionForPensionsIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(TaxationReserveIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvisionForOtherRespon(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForTradeTransactIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OnerousContractsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherTradeTransactHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForEnvironmentalActIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvForRestructuringHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProvPaymTranCapitalInst(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplProviForLtSec(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtCapitalInsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtCapitalInsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrLtCapitalInsOv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtCapitalInsO(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtSecG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtSecA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtSecOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtSecOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtCredits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtCreditsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtCreditsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtCreditsOv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvLtCreditsOt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStSecurities(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStCapitalInsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStCapitalInsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrStCapitalInsOv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStCapitalInsO(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStSecG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStSecA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStSecOVin(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStSecOth(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStCredits(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStCreditsG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStCreditsA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStCreditsOv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SurplResrvStCreditsOt(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExpensesChargedToCapital(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinExpAssetsAndLiabVal(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesFinAForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GainsTransFinAForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExpensesInCoverageOper(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesCashFlowCoverage(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesInvestCoverageAbroad(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CashFlowCoverageGainsTrans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InvestCovAbroadGainsTransf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExpensesConversionDifferenc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NegativeConvDifferences(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PositiveConvDiffTransfer(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitTaxHeadingCapital(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitTaxCapital(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RunningTaxHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeferredTaxHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitDepositNegativeAdj(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FiscalIncomePermDiffer(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FiscalIncomeDeductions(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PermDifferTransf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(DeducFiscalBenefTransf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ProfitDepositPositiveAdj(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SubvGrantsAndLegTransf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OfficialSubvTransf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GrantsAndLegTransf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherSubvGrantsLegTrans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtLossAndAdjFeeExpenses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ActuarialLosses(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NegAdjLtFeeFixedProv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NonCurrAssetsOnSaleExp(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NonCurrAAndForSaleLos(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NonCurrAAndSaleGTrans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartGOrACExpPosValAdj(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LiabPartDetG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LiabPartDetA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncomeChargedToCapital(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinIncAssetsAndLiabVal(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GainsFinAForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LossesTransfFinAForSale(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncomeInCoverageOper(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncomeCashFlowCoverage(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncomeInvestCoverageAbroad(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(CashFlowCoverageLossTransf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(InvestCovAbroadLossTransf(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(IncomeConversionDifferences(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PositiveConvDifferences(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NegativeConvDiffTransfer(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(SubvGrantsAndLegIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OfficialSubvIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(GrantsAndLegIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OtherSubvGrantsAndLegInc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(LtProfitAndAdjFeeIncome(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ActuarialGains(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PosAdjLtFeeFixedProv(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NonCurrAssetsOnSaleInc(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NonCurrAAndForSaleProfit(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NonCurrAAndSaleLossTrans(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PartGOrACoIncPosValAdj(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PrevNegAdjRecG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(PrevNegAdjRecA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NegAdjDetValTransG(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(NegAdjDetValTransA(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RawMaterialsAssetsPosting(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RawMaterialsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(RawMaterialsHeadingAssets(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(OfficeSuppliesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FinishedGoodsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(FixedAssetsHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExtraordinaryExpensesHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExtraordinaryExpensesHeadingExpense(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        UpdateApiAccountType(ExtraordinaryIncomeHeading(), Enum::"G/L Account Type"::Posting, Enum::"General Posting Type"::" ");
        AddCategoriesToGLAccounts();
    end;

    procedure AddCategoriesToGLAccounts()
    var
        GLAccountCategory: Record "G/L Account Category";
    begin
        if GLAccountCategory.IsEmpty() then
            exit;

        GLAccountCategory.SetRange("Parent Entry No.", 0);
        if GLAccountCategory.FindSet() then
            repeat
                AssignCategoryToChartOfAccounts(GLAccountCategory);
            until GLAccountCategory.Next() = 0;

        GLAccountCategory.SetFilter("Parent Entry No.", '<>%1', 0);
        if GLAccountCategory.FindSet() then
            repeat
                AssignSubcategoryToChartOfAccounts(GLAccountCategory);
            until GLAccountCategory.Next() = 0;
    end;

    procedure AssignCategoryToChartOfAccounts(GLAccountCategory: Record "G/L Account Category")
    begin
        case GLAccountCategory."Account Category" of
            GLAccountCategory."Account Category"::Assets:
                begin
                    UpdateGLAccounts(GLAccountCategory, '2', '298');
                    UpdateGLAccounts(GLAccountCategory, '3', '3399');
                    UpdateGLAccounts(GLAccountCategory, '5', '5999');
                end;
            GLAccountCategory."Account Category"::Liabilities:
                UpdateGLAccounts(GLAccountCategory, '47', '4799');
            GLAccountCategory."Account Category"::Equity:
                UpdateGLAccounts(GLAccountCategory, '10', '199');
            GLAccountCategory."Account Category"::Income:
                UpdateGLAccounts(GLAccountCategory, '7', '7993');
            GLAccountCategory."Account Category"::"Cost of Goods Sold":
                UpdateGLAccounts(GLAccountCategory, '60', '6199');
            GLAccountCategory."Account Category"::Expense:
                UpdateGLAccounts(GLAccountCategory, '62', '6993');
        end;
    end;

    procedure AssignSubcategoryToChartOfAccounts(GLAccountCategory: Record "G/L Account Category")
    var
        GLAccountCategoryMgt: Codeunit "G/L Account Category Mgt.";
    begin
        case GLAccountCategory.Description of
            GLAccountCategoryMgt.GetCash():
                UpdateGLAccounts(GLAccountCategory, '57', '579');
            GLAccountCategoryMgt.GetAR():
                UpdateGLAccounts(GLAccountCategory, '43', '4499');
            GLAccountCategoryMgt.GetInventory():
                UpdateGLAccounts(GLAccountCategory, '3', '3399');
            GLAccountCategoryMgt.GetEquipment():
                UpdateGLAccounts(GLAccountCategory, '2', '298');
            GLAccountCategoryMgt.GetAccumDeprec():
                UpdateGLAccounts(GLAccountCategory, '28', '2899');
            GLAccountCategoryMgt.GetCurrentLiabilities():
                begin
                    UpdateGLAccounts(GLAccountCategory, '40', '4190');
                    UpdateGLAccounts(GLAccountCategory, '46', '4999');
                end;
            GLAccountCategoryMgt.GetIncomeService():
                UpdateGLAccounts(GLAccountCategory, '705', '70599');
            GLAccountCategoryMgt.GetIncomeProdSales():
                UpdateGLAccounts(GLAccountCategory, '70', '704');
            GLAccountCategoryMgt.GetIncomeSalesDiscounts():
                UpdateGLAccounts(GLAccountCategory, '706', '7069');
            GLAccountCategoryMgt.GetIncomeSalesReturns():
                UpdateGLAccounts(GLAccountCategory, '708', '7099');
            GLAccountCategoryMgt.GetIncomeInterest():
                UpdateGLAccounts(GLAccountCategory, '76', '7699');
            GLAccountCategoryMgt.GetAdvertisingExpense():
                UpdateGLAccounts(GLAccountCategory, '627', '6279');
            GLAccountCategoryMgt.GetInterestExpense():
                UpdateGLAccounts(GLAccountCategory, '66', '6993');
            GLAccountCategoryMgt.GetPayrollExpense():
                UpdateGLAccounts(GLAccountCategory, '64', '649');
            GLAccountCategoryMgt.GetUtilitiesExpense():
                UpdateGLAccounts(GLAccountCategory, '628', '62899');
            GLAccountCategoryMgt.GetTaxExpense():
                UpdateGLAccounts(GLAccountCategory, '630', '6399');
        end;
    end;

    local procedure UpdateGLAccounts(GLAccountCategory: Record "G/L Account Category"; FromGLAccountNo: Code[20]; ToGLAccountNo: Code[20])
    var
        GLAccount: Record "G/L Account";
    begin
        GLAccount.SetRange("No.", FromGLAccountNo, ToGLAccountNo);
        if GLAccount.FindSet() then begin
            GLAccount.ModifyAll("Account Category", GLAccountCategory."Account Category", false);
            GLAccount.ModifyAll("Account Subcategory Entry No.", GLAccountCategory."Entry No.", false);
        end;
    end;

    local procedure UpdateApiAccountType(GLAccountNo: Code[20]; AccountType: Enum "G/L Account Type"; GenPostingType: Enum "General Posting Type")
    var
        GLAccount: Record "G/L Account";
    begin
        if not GLAccount.Get(GLAccountNo) then
            exit;

        GLAccount.Validate("API Account Type", AccountType);
        GLAccount.Validate("Gen. Posting Type", GenPostingType);
        if GLAccount."No." = GovernmentCreditorIrpf() then
            GLAccount.Validate("Ignore in 347 Report", true);
        GLAccount.Modify(true);
    end;

    procedure BasicFinancing(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BasicFinancingName()));
    end;

    procedure BasicFinancingName(): Text[100]
    begin
        exit(BasicFinancingTok);
    end;

    procedure CapitalHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CapitalHeadingName()));
    end;

    procedure CapitalHeadingName(): Text[100]
    begin
        exit(CapitalHeadingTok);
    end;

    procedure ShareCapitalHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShareCapitalHeadingName()));
    end;

    procedure ShareCapitalHeadingName(): Text[100]
    begin
        exit(ShareCapitalHeadingTok);
    end;

    procedure ShareCapitalPosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShareCapitalPostingName()));
    end;

    procedure ShareCapitalPostingName(): Text[100]
    begin
        exit(ShareCapitalPostingTok);
    end;

    procedure SocialFund(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SocialFundName()));
    end;

    procedure SocialFundName(): Text[100]
    begin
        exit(SocialFundTok);
    end;

    procedure Capital(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CapitalName()));
    end;

    procedure CapitalName(): Text[100]
    begin
        exit(CapitalTok);
    end;

    procedure PartnersInvest(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnersInvestName()));
    end;

    procedure PartnersInvestName(): Text[100]
    begin
        exit(PartnersInvestTok);
    end;

    procedure PartnersInvestSCap(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnersInvestSCapName()));
    end;

    procedure PartnersInvestSCapName(): Text[100]
    begin
        exit(PartnersInvestSCapTok);
    end;

    procedure PartnersInvestPCap(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnersInvestPCapName()));
    end;

    procedure PartnersInvestPCapName(): Text[100]
    begin
        exit(PartnersInvestPCapTok);
    end;

    procedure PartnersPendNonmonetaryInv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnersPendNonmonetaryInvName()));
    end;

    procedure PartnersPendNonmonetaryInvName(): Text[100]
    begin
        exit(PartnersPendNonmonetaryInvTok);
    end;

    procedure PartPendNonmonInvSCap(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartPendNonmonInvSCapName()));
    end;

    procedure PartPendNonmonInvSCapName(): Text[100]
    begin
        exit(PartPendNonmonInvSCapTok);
    end;

    procedure PartPendNonmonInvPCap(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartPendNonmonInvPCapName()));
    end;

    procedure PartPendNonmonInvPCapName(): Text[100]
    begin
        exit(PartPendNonmonInvPCapTok);
    end;

    procedure SharesSpecialSituations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SharesSpecialSituationsName()));
    end;

    procedure SharesSpecialSituationsName(): Text[100]
    begin
        exit(SharesSpecialSituationsTok);
    end;

    procedure SharesCapitalReductions(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SharesCapitalReductionsName()));
    end;

    procedure SharesCapitalReductionsName(): Text[100]
    begin
        exit(SharesCapitalReductionsTok);
    end;

    procedure Reserves(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ReservesName()));
    end;

    procedure ReservesName(): Text[100]
    begin
        exit(ReservesTok);
    end;

    procedure SharePremium(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SharePremiumName()));
    end;

    procedure SharePremiumName(): Text[100]
    begin
        exit(SharePremiumTok);
    end;

    procedure OtherCapitalInstrHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherCapitalInstrHeadingName()));
    end;

    procedure OtherCapitalInstrHeadingName(): Text[100]
    begin
        exit(OtherCapitalInstrHeadingTok);
    end;

    procedure CapitalMixedFinInstr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CapitalMixedFinInstrName()));
    end;

    procedure CapitalMixedFinInstrName(): Text[100]
    begin
        exit(CapitalMixedFinInstrTok);
    end;

    procedure OtherCapitalInstr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherCapitalInstrName()));
    end;

    procedure OtherCapitalInstrName(): Text[100]
    begin
        exit(OtherCapitalInstrTok);
    end;

    procedure LegalReserveHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LegalReserveHeadingName()));
    end;

    procedure LegalReserveHeadingName(): Text[100]
    begin
        exit(LegalReserveHeadingTok);
    end;

    procedure LegalReserve(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LegalReserveName()));
    end;

    procedure LegalReserveName(): Text[100]
    begin
        exit(LegalReserveTok);
    end;

    procedure VoluntaryReserves(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(VoluntaryReservesName()));
    end;

    procedure VoluntaryReservesName(): Text[100]
    begin
        exit(VoluntaryReservesTok);
    end;

    procedure VoluntaryReserve(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(VoluntaryReserveName()));
    end;

    procedure VoluntaryReserveName(): Text[100]
    begin
        exit(VoluntaryReserveTok);
    end;

    procedure SpecialReserves(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SpecialReservesName()));
    end;

    procedure SpecialReservesName(): Text[100]
    begin
        exit(SpecialReservesTok);
    end;

    procedure MajorPartnerSharesReserves(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(MajorPartnerSharesReservesName()));
    end;

    procedure MajorPartnerSharesReservesName(): Text[100]
    begin
        exit(MajorPartnerSharesReservesTok);
    end;

    procedure StatutoryReserves(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StatutoryReservesName()));
    end;

    procedure StatutoryReservesName(): Text[100]
    begin
        exit(StatutoryReservesTok);
    end;

    procedure DeprCapitalReserve(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprCapitalReserveName()));
    end;

    procedure DeprCapitalReserveName(): Text[100]
    begin
        exit(DeprCapitalReserveTok);
    end;

    procedure GoodwillReserves(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodwillReservesName()));
    end;

    procedure GoodwillReservesName(): Text[100]
    begin
        exit(GoodwillReservesTok);
    end;

    procedure OwnSharesAsGuaranteeReser(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OwnSharesAsGuaranteeReserName()));
    end;

    procedure OwnSharesAsGuaranteeReserName(): Text[100]
    begin
        exit(OwnSharesAsGuaranteeReserTok);
    end;

    procedure GainsLossReservesAndAdjHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GainsLossReservesAndAdjHeadingName()));
    end;

    procedure GainsLossReservesAndAdjHeadingName(): Text[100]
    begin
        exit(GainsLossReservesAndAdjHeadingTok);
    end;

    procedure GainsLossReservesAndAdj(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GainsLossReservesAndAdjName()));
    end;

    procedure GainsLossReservesAndAdjName(): Text[100]
    begin
        exit(GainsLossReservesAndAdjTok);
    end;

    procedure PartnersOrOwnerInvestments(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnersOrOwnerInvestmentsName()));
    end;

    procedure PartnersOrOwnerInvestmentsName(): Text[100]
    begin
        exit(PartnersOrOwnerInvestmentsTok);
    end;

    procedure DifCapitalExchEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DifCapitalExchEuroName()));
    end;

    procedure DifCapitalExchEuroName(): Text[100]
    begin
        exit(DifCapitalExchEuroTok);
    end;

    procedure UnappliedResults(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(UnappliedResultsName()));
    end;

    procedure UnappliedResultsName(): Text[100]
    begin
        exit(UnappliedResultsTok);
    end;

    procedure AccumulatedLosses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(AccumulatedLossesName()));
    end;

    procedure AccumulatedLossesName(): Text[100]
    begin
        exit(AccumulatedLossesTok);
    end;

    procedure ProfitOrLossHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitOrLossHeadingName()));
    end;

    procedure ProfitOrLossHeadingName(): Text[100]
    begin
        exit(ProfitOrLossHeadingTok);
    end;

    procedure ProfitOrLoss(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitOrLossName()));
    end;

    procedure ProfitOrLossName(): Text[100]
    begin
        exit(ProfitOrLossTok);
    end;

    procedure SubvGrantsAndCurrExch(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SubvGrantsAndCurrExchName()));
    end;

    procedure SubvGrantsAndCurrExchName(): Text[100]
    begin
        exit(SubvGrantsAndCurrExchTok);
    end;

    procedure OfficialSubvHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OfficialSubvHeadingName()));
    end;

    procedure OfficialSubvHeadingName(): Text[100]
    begin
        exit(OfficialSubvHeadingTok);
    end;

    procedure OfficialSubv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OfficialSubvName()));
    end;

    procedure OfficialSubvName(): Text[100]
    begin
        exit(OfficialSubvTok);
    end;

    procedure GrantsAndLegaciesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GrantsAndLegaciesHeadingName()));
    end;

    procedure GrantsAndLegaciesHeadingName(): Text[100]
    begin
        exit(GrantsAndLegaciesHeadingTok);
    end;

    procedure GrantsAndLegacies(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GrantsAndLegaciesName()));
    end;

    procedure GrantsAndLegaciesName(): Text[100]
    begin
        exit(GrantsAndLegaciesTok);
    end;

    procedure OtherSubvGrantsAndLegHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherSubvGrantsAndLegHeadingName()));
    end;

    procedure OtherSubvGrantsAndLegHeadingName(): Text[100]
    begin
        exit(OtherSubvGrantsAndLegHeadingTok);
    end;

    procedure OtherSubvGrantsAndLeg(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherSubvGrantsAndLegName()));
    end;

    procedure OtherSubvGrantsAndLegName(): Text[100]
    begin
        exit(OtherSubvGrantsAndLegTok);
    end;

    procedure ValueAdjFinAForSaleHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ValueAdjFinAForSaleHeadingName()));
    end;

    procedure ValueAdjFinAForSaleHeadingName(): Text[100]
    begin
        exit(ValueAdjFinAForSaleHeadingTok);
    end;

    procedure ValueAdjFinAForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ValueAdjFinAForSaleName()));
    end;

    procedure ValueAdjFinAForSaleName(): Text[100]
    begin
        exit(ValueAdjFinAForSaleTok);
    end;

    procedure ValueAdjFinAForSalePosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ValueAdjFinAForSalePostingName()));
    end;

    procedure ValueAdjFinAForSalePostingName(): Text[100]
    begin
        exit(ValueAdjFinAForSalePostingTok);
    end;

    procedure CoverageOperations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CoverageOperationsName()));
    end;

    procedure CoverageOperationsName(): Text[100]
    begin
        exit(CoverageOperationsTok);
    end;

    procedure CashFlowCoverageHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CashFlowCoverageHeadingName()));
    end;

    procedure CashFlowCoverageHeadingName(): Text[100]
    begin
        exit(CashFlowCoverageHeadingTok);
    end;

    procedure CashFlowCoverage(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CashFlowCoverageName()));
    end;

    procedure CashFlowCoverageName(): Text[100]
    begin
        exit(CashFlowCoverageTok);
    end;

    procedure NetInvestCovAbroadHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NetInvestCovAbroadHeadingName()));
    end;

    procedure NetInvestCovAbroadHeadingName(): Text[100]
    begin
        exit(NetInvestCovAbroadHeadingTok);
    end;

    procedure NetInvestCovAbroad(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NetInvestCovAbroadName()));
    end;

    procedure NetInvestCovAbroadName(): Text[100]
    begin
        exit(NetInvestCovAbroadTok);
    end;

    procedure ConversionDifferencesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ConversionDifferencesHeadingName()));
    end;

    procedure ConversionDifferencesHeadingName(): Text[100]
    begin
        exit(ConversionDifferencesHeadingTok);
    end;

    procedure ConversionDifferences(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ConversionDifferencesName()));
    end;

    procedure ConversionDifferencesName(): Text[100]
    begin
        exit(ConversionDifferencesTok);
    end;

    procedure ValueAdjNoncurrentASaleHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ValueAdjNoncurrentASaleHeadingName()));
    end;

    procedure ValueAdjNoncurrentASaleHeadingName(): Text[100]
    begin
        exit(ValueAdjNoncurrentASaleHeadingTok);
    end;

    procedure ValueAdjNoncurrentASale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ValueAdjNoncurrentASaleName()));
    end;

    procedure ValueAdjNoncurrentASaleName(): Text[100]
    begin
        exit(ValueAdjNoncurrentASaleTok);
    end;

    procedure FiscalIncRetPrevYears(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FiscalIncRetPrevYearsName()));
    end;

    procedure FiscalIncRetPrevYearsName(): Text[100]
    begin
        exit(FiscalIncRetPrevYearsTok);
    end;

    procedure FiscalIncDifRetPrevYearsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FiscalIncDifRetPrevYearsHeadingName()));
    end;

    procedure FiscalIncDifRetPrevYearsHeadingName(): Text[100]
    begin
        exit(FiscalIncDifRetPrevYearsHeadingTok);
    end;

    procedure FiscalIncDifRetPrevYears(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FiscalIncDifRetPrevYearsName()));
    end;

    procedure FiscalIncDifRetPrevYearsName(): Text[100]
    begin
        exit(FiscalIncDifRetPrevYearsTok);
    end;

    procedure FiscalIncDeductDiscounts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FiscalIncDeductDiscountsName()));
    end;

    procedure FiscalIncDeductDiscountsName(): Text[100]
    begin
        exit(FiscalIncDeductDiscountsTok);
    end;

    procedure Provision(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionName()));
    end;

    procedure ProvisionName(): Text[100]
    begin
        exit(ProvisionTok);
    end;

    procedure ProvisionForPensionsEquity(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionForPensionsEquityName()));
    end;

    procedure ProvisionForPensionsEquityName(): Text[100]
    begin
        exit(ProvisionForPensionsEquityTok);
    end;

    procedure TaxationReserveEquity(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TaxationReserveEquityName()));
    end;

    procedure TaxationReserveEquityName(): Text[100]
    begin
        exit(TaxationReserveEquityTok);
    end;

    procedure ProvisionForResponsibilities(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionForResponsibilitiesName()));
    end;

    procedure ProvisionForResponsibilitiesName(): Text[100]
    begin
        exit(ProvisionForResponsibilitiesTok);
    end;

    procedure ProvisionForMayorRepairs(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionForMayorRepairsName()));
    end;

    procedure ProvisionForMayorRepairsName(): Text[100]
    begin
        exit(ProvisionForMayorRepairsTok);
    end;

    procedure ProvForEnvironmentalActEquity(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForEnvironmentalActEquityName()));
    end;

    procedure ProvForEnvironmentalActEquityName(): Text[100]
    begin
        exit(ProvForEnvironmentalActEquityTok);
    end;

    procedure ProvisionForRestructuring(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionForRestructuringName()));
    end;

    procedure ProvisionForRestructuringName(): Text[100]
    begin
        exit(ProvisionForRestructuringTok);
    end;

    procedure ProvPaymTransCapitalInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvPaymTransCapitalInstName()));
    end;

    procedure ProvPaymTransCapitalInstName(): Text[100]
    begin
        exit(ProvPaymTransCapitalInstTok);
    end;

    procedure SpecialLtDebts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SpecialLtDebtsName()));
    end;

    procedure SpecialLtDebtsName(): Text[100]
    begin
        exit(SpecialLtDebtsTok);
    end;

    procedure LtSharesLiability(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtSharesLiabilityName()));
    end;

    procedure LtSharesLiabilityName(): Text[100]
    begin
        exit(LtSharesLiabilityTok);
    end;

    procedure InvestLiability(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InvestLiabilityName()));
    end;

    procedure InvestLiabilityName(): Text[100]
    begin
        exit(InvestLiabilityTok);
    end;

    procedure InvestLiabilityG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InvestLiabilityGName()));
    end;

    procedure InvestLiabilityGName(): Text[100]
    begin
        exit(InvestLiabilityGTok);
    end;

    procedure InvestLiabilityA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InvestLiabilityAName()));
    end;

    procedure InvestLiabilityAName(): Text[100]
    begin
        exit(InvestLiabilityATok);
    end;

    procedure InvestLiabilityOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InvestLiabilityOthName()));
    end;

    procedure InvestLiabilityOthName(): Text[100]
    begin
        exit(InvestLiabilityOthTok);
    end;

    procedure OtherInvestLiability(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherInvestLiabilityName()));
    end;

    procedure OtherInvestLiabilityName(): Text[100]
    begin
        exit(OtherInvestLiabilityTok);
    end;

    procedure PendNonmonetaryInvLiab(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PendNonmonetaryInvLiabName()));
    end;

    procedure PendNonmonetaryInvLiabName(): Text[100]
    begin
        exit(PendNonmonetaryInvLiabTok);
    end;

    procedure PendNonmonetaryInvLiabG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PendNonmonetaryInvLiabGName()));
    end;

    procedure PendNonmonetaryInvLiabGName(): Text[100]
    begin
        exit(PendNonmonetaryInvLiabGTok);
    end;

    procedure PendNonmonetaryInvLiabA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PendNonmonetaryInvLiabAName()));
    end;

    procedure PendNonmonetaryInvLiabAName(): Text[100]
    begin
        exit(PendNonmonetaryInvLiabATok);
    end;

    procedure PendNonmonInvLiabOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PendNonmonInvLiabOthName()));
    end;

    procedure PendNonmonInvLiabOthName(): Text[100]
    begin
        exit(PendNonmonInvLiabOthTok);
    end;

    procedure OtherPendNonmonInv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherPendNonmonInvName()));
    end;

    procedure OtherPendNonmonInvName(): Text[100]
    begin
        exit(OtherPendNonmonInvTok);
    end;

    procedure VincCompaniesLtDebts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(VincCompaniesLtDebtsName()));
    end;

    procedure VincCompaniesLtDebtsName(): Text[100]
    begin
        exit(VincCompaniesLtDebtsTok);
    end;

    procedure DebtsLtWithVincFinInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtsLtWithVincFinInstName()));
    end;

    procedure DebtsLtWithVincFinInstName(): Text[100]
    begin
        exit(DebtsLtWithVincFinInstTok);
    end;

    procedure DebtsLtToFinInstG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtsLtToFinInstGName()));
    end;

    procedure DebtsLtToFinInstGName(): Text[100]
    begin
        exit(DebtsLtToFinInstGTok);
    end;

    procedure DebtsLtToFinInstA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtsLtToFinInstAName()));
    end;

    procedure DebtsLtToFinInstAName(): Text[100]
    begin
        exit(DebtsLtToFinInstATok);
    end;

    procedure DebtsLtToOthVincCredInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtsLtToOthVincCredInstName()));
    end;

    procedure DebtsLtToOthVincCredInstName(): Text[100]
    begin
        exit(DebtsLtToOthVincCredInstTok);
    end;

    procedure LtFixedAssetVendorsVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtFixedAssetVendorsVincName()));
    end;

    procedure LtFixedAssetVendorsVincName(): Text[100]
    begin
        exit(LtFixedAssetVendorsVincTok);
    end;

    procedure LtFixedAssetVendorsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtFixedAssetVendorsGName()));
    end;

    procedure LtFixedAssetVendorsGName(): Text[100]
    begin
        exit(LtFixedAssetVendorsGTok);
    end;

    procedure LtFixedAssetVendorsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtFixedAssetVendorsAName()));
    end;

    procedure LtFixedAssetVendorsAName(): Text[100]
    begin
        exit(LtFixedAssetVendorsATok);
    end;

    procedure LtFixedAssetVendorsOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtFixedAssetVendorsOthName()));
    end;

    procedure LtFixedAssetVendorsOthName(): Text[100]
    begin
        exit(LtFixedAssetVendorsOthTok);
    end;

    procedure FinLtLeaseCreditorsVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinLtLeaseCreditorsVincName()));
    end;

    procedure FinLtLeaseCreditorsVincName(): Text[100]
    begin
        exit(FinLtLeaseCreditorsVincTok);
    end;

    procedure FinLtLeaseCreditorsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinLtLeaseCreditorsGName()));
    end;

    procedure FinLtLeaseCreditorsGName(): Text[100]
    begin
        exit(FinLtLeaseCreditorsGTok);
    end;

    procedure FinLtLeaseCreditorsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinLtLeaseCreditorsAName()));
    end;

    procedure FinLtLeaseCreditorsAName(): Text[100]
    begin
        exit(FinLtLeaseCreditorsATok);
    end;

    procedure FinLtLeaseCreditorsOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinLtLeaseCreditorsOthName()));
    end;

    procedure FinLtLeaseCreditorsOthName(): Text[100]
    begin
        exit(FinLtLeaseCreditorsOthTok);
    end;

    procedure OtherLtDebtsToVincComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherLtDebtsToVincCompName()));
    end;

    procedure OtherLtDebtsToVincCompName(): Text[100]
    begin
        exit(OtherLtDebtsToVincCompTok);
    end;

    procedure OtherLtDebtsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherLtDebtsGName()));
    end;

    procedure OtherLtDebtsGName(): Text[100]
    begin
        exit(OtherLtDebtsGTok);
    end;

    procedure OtherLtDebtsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherLtDebtsAName()));
    end;

    procedure OtherLtDebtsAName(): Text[100]
    begin
        exit(OtherLtDebtsATok);
    end;

    procedure OtherLtDebtsOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherLtDebtsOthName()));
    end;

    procedure OtherLtDebtsOthName(): Text[100]
    begin
        exit(OtherLtDebtsOthTok);
    end;

    procedure LoansAndSimilarBorrowings(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LoansAndSimilarBorrowingsName()));
    end;

    procedure LoansAndSimilarBorrowingsName(): Text[100]
    begin
        exit(LoansAndSimilarBorrowingsTok);
    end;

    procedure LTLoansFromFinInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LTLoansFromFinInstName()));
    end;

    procedure LTLoansFromFinInstName(): Text[100]
    begin
        exit(LTLoansFromFinInstTok);
    end;

    procedure LongTermDebts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LongTermDebtsName()));
    end;

    procedure LongTermDebtsName(): Text[100]
    begin
        exit(LongTermDebtsTok);
    end;

    procedure LongTermDebtsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LongTermDebtsHeadingName()));
    end;

    procedure LongTermDebtsHeadingName(): Text[100]
    begin
        exit(LongTermDebtsHeadingTok);
    end;

    procedure ConvertibleInGrants(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ConvertibleInGrantsName()));
    end;

    procedure ConvertibleInGrantsName(): Text[100]
    begin
        exit(ConvertibleInGrantsTok);
    end;

    procedure LtFixedAssetVendors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtFixedAssetVendorsName()));
    end;

    procedure LtFixedAssetVendorsName(): Text[100]
    begin
        exit(LtFixedAssetVendorsTok);
    end;

    procedure FinLtLeaseCreditors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinLtLeaseCreditorsName()));
    end;

    procedure FinLtLeaseCreditorsName(): Text[100]
    begin
        exit(FinLtLeaseCreditorsTok);
    end;

    procedure TradeCredBillExchPay(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredBillExchPayName()));
    end;

    procedure TradeCredBillExchPayName(): Text[100]
    begin
        exit(TradeCredBillExchPayTok);
    end;

    procedure LtDerivFinLiab(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDerivFinLiabName()));
    end;

    procedure LtDerivFinLiabName(): Text[100]
    begin
        exit(LtDerivFinLiabTok);
    end;

    procedure LtDerivFinLiabPortfolio(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDerivFinLiabPortfolioName()));
    end;

    procedure LtDerivFinLiabPortfolioName(): Text[100]
    begin
        exit(LtDerivFinLiabPortfolioTok);
    end;

    procedure LtDerivFinLiabCoverInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDerivFinLiabCoverInstName()));
    end;

    procedure LtDerivFinLiabCoverInstName(): Text[100]
    begin
        exit(LtDerivFinLiabCoverInstTok);
    end;

    procedure ObligAndDebentLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ObligAndDebentLoansName()));
    end;

    procedure ObligAndDebentLoansName(): Text[100]
    begin
        exit(ObligAndDebentLoansTok);
    end;

    procedure ObligAndConvDebentLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ObligAndConvDebentLoansName()));
    end;

    procedure ObligAndConvDebentLoansName(): Text[100]
    begin
        exit(ObligAndConvDebentLoansTok);
    end;

    procedure DebtsOthMarketableSecur(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtsOthMarketableSecurName()));
    end;

    procedure DebtsOthMarketableSecurName(): Text[100]
    begin
        exit(DebtsOthMarketableSecurTok);
    end;

    procedure LtGuaranteesDepRec(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtGuaranteesDepRecName()));
    end;

    procedure LtGuaranteesDepRecName(): Text[100]
    begin
        exit(LtGuaranteesDepRecTok);
    end;

    procedure LtGuaranteesReceived(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtGuaranteesReceivedName()));
    end;

    procedure LtGuaranteesReceivedName(): Text[100]
    begin
        exit(LtGuaranteesReceivedTok);
    end;

    procedure LtSalesAndServicesAdvances(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtSalesAndServicesAdvancesName()));
    end;

    procedure LtSalesAndServicesAdvancesName(): Text[100]
    begin
        exit(LtSalesAndServicesAdvancesTok);
    end;

    procedure LtDepositsReceived(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDepositsReceivedName()));
    end;

    procedure LtDepositsReceivedName(): Text[100]
    begin
        exit(LtDepositsReceivedTok);
    end;

    procedure LtFinancialGuarantees(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtFinancialGuaranteesName()));
    end;

    procedure LtFinancialGuaranteesName(): Text[100]
    begin
        exit(LtFinancialGuaranteesTok);
    end;

    procedure TransitionalSituations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TransitionalSituationsName()));
    end;

    procedure TransitionalSituationsName(): Text[100]
    begin
        exit(TransitionalSituationsTok);
    end;

    procedure IssuedSharesOrPartStock(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IssuedSharesOrPartStockName()));
    end;

    procedure IssuedSharesOrPartStockName(): Text[100]
    begin
        exit(IssuedSharesOrPartStockTok);
    end;

    procedure SharesSubscriptors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SharesSubscriptorsName()));
    end;

    procedure SharesSubscriptorsName(): Text[100]
    begin
        exit(SharesSubscriptorsTok);
    end;

    procedure EqCapitalCInCreation(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(EqCapitalCInCreationName()));
    end;

    procedure EqCapitalCInCreationName(): Text[100]
    begin
        exit(EqCapitalCInCreationTok);
    end;

    procedure IssuedSharesOrPartFinLiab(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IssuedSharesOrPartFinLiabName()));
    end;

    procedure IssuedSharesOrPartFinLiabName(): Text[100]
    begin
        exit(IssuedSharesOrPartFinLiabTok);
    end;

    procedure FinLiabSharesSubs(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinLiabSharesSubsName()));
    end;

    procedure FinLiabSharesSubsName(): Text[100]
    begin
        exit(FinLiabSharesSubsTok);
    end;

    procedure PendFinLiabSharesOrSt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PendFinLiabSharesOrStName()));
    end;

    procedure PendFinLiabSharesOrStName(): Text[100]
    begin
        exit(PendFinLiabSharesOrStTok);
    end;

    procedure IntangibleAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntangibleAssetsName()));
    end;

    procedure IntangibleAssetsName(): Text[100]
    begin
        exit(IntangibleAssetsTok);
    end;

    procedure ResearchCostsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ResearchCostsHeadingName()));
    end;

    procedure ResearchCostsHeadingName(): Text[100]
    begin
        exit(ResearchCostsHeadingTok);
    end;

    procedure ResearchCosts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ResearchCostsName()));
    end;

    procedure ResearchCostsName(): Text[100]
    begin
        exit(ResearchCostsTok);
    end;

    procedure DevCostsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DevCostsHeadingName()));
    end;

    procedure DevCostsHeadingName(): Text[100]
    begin
        exit(DevCostsHeadingTok);
    end;

    procedure DevCosts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DevCostsName()));
    end;

    procedure DevCostsName(): Text[100]
    begin
        exit(DevCostsTok);
    end;

    procedure FranchisedAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FranchisedAssetsName()));
    end;

    procedure FranchisedAssetsName(): Text[100]
    begin
        exit(FranchisedAssetsTok);
    end;

    procedure IndustrialProperty(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IndustrialPropertyName()));
    end;

    procedure IndustrialPropertyName(): Text[100]
    begin
        exit(IndustrialPropertyTok);
    end;

    procedure Goodwill(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodwillName()));
    end;

    procedure GoodwillName(): Text[100]
    begin
        exit(GoodwillTok);
    end;

    procedure RightToLease(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RightToLeaseName()));
    end;

    procedure RightToLeaseName(): Text[100]
    begin
        exit(RightToLeaseTok);
    end;

    procedure EdpApplications(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(EdpApplicationsName()));
    end;

    procedure EdpApplicationsName(): Text[100]
    begin
        exit(EdpApplicationsTok);
    end;

    procedure IntangibleAssetsAdvances(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntangibleAssetsAdvancesName()));
    end;

    procedure IntangibleAssetsAdvancesName(): Text[100]
    begin
        exit(IntangibleAssetsAdvancesTok);
    end;

    procedure TangibleAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TangibleAssetsName()));
    end;

    procedure TangibleAssetsName(): Text[100]
    begin
        exit(TangibleAssetsTok);
    end;

    procedure FreeholdLand(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FreeholdLandName()));
    end;

    procedure FreeholdLandName(): Text[100]
    begin
        exit(FreeholdLandTok);
    end;

    procedure Land(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LandName()));
    end;

    procedure LandName(): Text[100]
    begin
        exit(LandTok);
    end;

    procedure Buildings(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BuildingsName()));
    end;

    procedure BuildingsName(): Text[100]
    begin
        exit(BuildingsTok);
    end;

    procedure SpecificInstallations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SpecificInstallationsName()));
    end;

    procedure SpecificInstallationsName(): Text[100]
    begin
        exit(SpecificInstallationsTok);
    end;

    procedure IndustrialMachineryHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IndustrialMachineryHeadingName()));
    end;

    procedure IndustrialMachineryHeadingName(): Text[100]
    begin
        exit(IndustrialMachineryHeadingTok);
    end;

    procedure IndustrialMachinery(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IndustrialMachineryName()));
    end;

    procedure IndustrialMachineryName(): Text[100]
    begin
        exit(IndustrialMachineryTok);
    end;

    procedure IndustrialTooling(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IndustrialToolingName()));
    end;

    procedure IndustrialToolingName(): Text[100]
    begin
        exit(IndustrialToolingTok);
    end;

    procedure PlantMachineryEquipment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PlantMachineryEquipmentName()));
    end;

    procedure PlantMachineryEquipmentName(): Text[100]
    begin
        exit(PlantMachineryEquipmentTok);
    end;

    procedure FurnitureHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FurnitureHeadingName()));
    end;

    procedure FurnitureHeadingName(): Text[100]
    begin
        exit(FurnitureHeadingTok);
    end;

    procedure Furniture(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FurnitureName()));
    end;

    procedure FurnitureName(): Text[100]
    begin
        exit(FurnitureTok);
    end;

    procedure InfoProcessEquipment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InfoProcessEquipmentName()));
    end;

    procedure InfoProcessEquipmentName(): Text[100]
    begin
        exit(InfoProcessEquipmentTok);
    end;

    procedure DataProcessingEquipment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DataProcessingEquipmentName()));
    end;

    procedure DataProcessingEquipmentName(): Text[100]
    begin
        exit(DataProcessingEquipmentTok);
    end;

    procedure TransportEquipment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TransportEquipmentName()));
    end;

    procedure TransportEquipmentName(): Text[100]
    begin
        exit(TransportEquipmentTok);
    end;

    procedure Vehicle(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(VehicleName()));
    end;

    procedure VehicleName(): Text[100]
    begin
        exit(VehicleTok);
    end;

    procedure OtherTangibleFixedAssetsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherTangibleFixedAssetsHeadingName()));
    end;

    procedure OtherTangibleFixedAssetsHeadingName(): Text[100]
    begin
        exit(OtherTangibleFixedAssetsHeadingTok);
    end;

    procedure OtherTangibleFixedAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherTangibleFixedAssetsName()));
    end;

    procedure OtherTangibleFixedAssetsName(): Text[100]
    begin
        exit(OtherTangibleFixedAssetsTok);
    end;

    procedure PropertiesInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PropertiesInvestmName()));
    end;

    procedure PropertiesInvestmName(): Text[100]
    begin
        exit(PropertiesInvestmTok);
    end;

    procedure FreeholdLandInv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FreeholdLandInvName()));
    end;

    procedure FreeholdLandInvName(): Text[100]
    begin
        exit(FreeholdLandInvTok);
    end;

    procedure LandInv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LandInvName()));
    end;

    procedure LandInvName(): Text[100]
    begin
        exit(LandInvTok);
    end;

    procedure BuildingsInv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BuildingsInvName()));
    end;

    procedure BuildingsInvName(): Text[100]
    begin
        exit(BuildingsInvTok);
    end;

    procedure FixedAssetsInProgress(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FixedAssetsInProgressName()));
    end;

    procedure FixedAssetsInProgressName(): Text[100]
    begin
        exit(FixedAssetsInProgressTok);
    end;

    procedure ImprPrepCostsFreehLand(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ImprPrepCostsFreehLandName()));
    end;

    procedure ImprPrepCostsFreehLandName(): Text[100]
    begin
        exit(ImprPrepCostsFreehLandTok);
    end;

    procedure ConstructionWorkInProgress(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ConstructionWorkInProgressName()));
    end;

    procedure ConstructionWorkInProgressName(): Text[100]
    begin
        exit(ConstructionWorkInProgressTok);
    end;

    procedure PlantMachEquipmUndInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PlantMachEquipmUndInstName()));
    end;

    procedure PlantMachEquipmUndInstName(): Text[100]
    begin
        exit(PlantMachEquipmUndInstTok);
    end;

    procedure MachineryUnderInstallation(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(MachineryUnderInstallationName()));
    end;

    procedure MachineryUnderInstallationName(): Text[100]
    begin
        exit(MachineryUnderInstallationTok);
    end;

    procedure InfoProcessEquipmUndInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InfoProcessEquipmUndInstName()));
    end;

    procedure InfoProcessEquipmUndInstName(): Text[100]
    begin
        exit(InfoProcessEquipmUndInstTok);
    end;

    procedure TangibleAssetsAdvances(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TangibleAssetsAdvancesName()));
    end;

    procedure TangibleAssetsAdvancesName(): Text[100]
    begin
        exit(TangibleAssetsAdvancesTok);
    end;

    procedure VincCompFinInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(VincCompFinInvestmName()));
    end;

    procedure VincCompFinInvestmName(): Text[100]
    begin
        exit(VincCompFinInvestmTok);
    end;

    procedure LtInvestmInVincCom(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtInvestmInVincComName()));
    end;

    procedure LtInvestmInVincComName(): Text[100]
    begin
        exit(LtInvestmInVincComTok);
    end;

    procedure LtInvestmG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtInvestmGName()));
    end;

    procedure LtInvestmGName(): Text[100]
    begin
        exit(LtInvestmGTok);
    end;

    procedure LtInvestmA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtInvestmAName()));
    end;

    procedure LtInvestmAName(): Text[100]
    begin
        exit(LtInvestmATok);
    end;

    procedure LtInvestmOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtInvestmOthName()));
    end;

    procedure LtInvestmOthName(): Text[100]
    begin
        exit(LtInvestmOthTok);
    end;

    procedure LtDebtValueVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDebtValueVincName()));
    end;

    procedure LtDebtValueVincName(): Text[100]
    begin
        exit(LtDebtValueVincTok);
    end;

    procedure LtDebtValueG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDebtValueGName()));
    end;

    procedure LtDebtValueGName(): Text[100]
    begin
        exit(LtDebtValueGTok);
    end;

    procedure LtDebtValueA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDebtValueAName()));
    end;

    procedure LtDebtValueAName(): Text[100]
    begin
        exit(LtDebtValueATok);
    end;

    procedure LtDebtValueOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDebtValueOthName()));
    end;

    procedure LtDebtValueOthName(): Text[100]
    begin
        exit(LtDebtValueOthTok);
    end;

    procedure LtCreditsToVincComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtCreditsToVincCompName()));
    end;

    procedure LtCreditsToVincCompName(): Text[100]
    begin
        exit(LtCreditsToVincCompTok);
    end;

    procedure LtCreditsToG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtCreditsToGName()));
    end;

    procedure LtCreditsToGName(): Text[100]
    begin
        exit(LtCreditsToGTok);
    end;

    procedure LtCreditsToA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtCreditsToAName()));
    end;

    procedure LtCreditsToAName(): Text[100]
    begin
        exit(LtCreditsToATok);
    end;

    procedure LtCreditsToOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtCreditsToOthName()));
    end;

    procedure LtCreditsToOthName(): Text[100]
    begin
        exit(LtCreditsToOthTok);
    end;

    procedure AmountsUncalledLt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(AmountsUncalledLtName()));
    end;

    procedure AmountsUncalledLtName(): Text[100]
    begin
        exit(AmountsUncalledLtTok);
    end;

    procedure AmountsUncalledG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(AmountsUncalledGName()));
    end;

    procedure AmountsUncalledGName(): Text[100]
    begin
        exit(AmountsUncalledGTok);
    end;

    procedure AmountsUncalledA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(AmountsUncalledAName()));
    end;

    procedure AmountsUncalledAName(): Text[100]
    begin
        exit(AmountsUncalledATok);
    end;

    procedure AmountsUncalledOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(AmountsUncalledOthName()));
    end;

    procedure AmountsUncalledOthName(): Text[100]
    begin
        exit(AmountsUncalledOthTok);
    end;

    procedure OtherFinancialInvestmLt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherFinancialInvestmLtName()));
    end;

    procedure OtherFinancialInvestmLtName(): Text[100]
    begin
        exit(OtherFinancialInvestmLtTok);
    end;

    procedure LtInvestmInCapitalInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtInvestmInCapitalInstName()));
    end;

    procedure LtInvestmInCapitalInstName(): Text[100]
    begin
        exit(LtInvestmInCapitalInstTok);
    end;

    procedure LtDebtValuesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDebtValuesHeadingName()));
    end;

    procedure LtDebtValuesHeadingName(): Text[100]
    begin
        exit(LtDebtValuesHeadingTok);
    end;

    procedure LtDebtValues(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDebtValuesName()));
    end;

    procedure LtDebtValuesName(): Text[100]
    begin
        exit(LtDebtValuesTok);
    end;

    procedure LongTermLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LongTermLoansName()));
    end;

    procedure LongTermLoansName(): Text[100]
    begin
        exit(LongTermLoansTok);
    end;

    procedure FaTransfLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FaTransfLoansName()));
    end;

    procedure FaTransfLoansName(): Text[100]
    begin
        exit(FaTransfLoansTok);
    end;

    procedure StaffLtCredits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StaffLtCreditsName()));
    end;

    procedure StaffLtCreditsName(): Text[100]
    begin
        exit(StaffLtCreditsTok);
    end;

    procedure LtDerivFinCapital(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDerivFinCapitalName()));
    end;

    procedure LtDerivFinCapitalName(): Text[100]
    begin
        exit(LtDerivFinCapitalTok);
    end;

    procedure LtDerivFinCapPortfolio(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDerivFinCapPortfolioName()));
    end;

    procedure LtDerivFinCapPortfolioName(): Text[100]
    begin
        exit(LtDerivFinCapPortfolioTok);
    end;

    procedure LtDerivFinCapCoverInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtDerivFinCapCoverInstName()));
    end;

    procedure LtDerivFinCapCoverInstName(): Text[100]
    begin
        exit(LtDerivFinCapCoverInstTok);
    end;

    procedure LtPersInsContReimbRights(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtPersInsContReimbRightsName()));
    end;

    procedure LtPersInsContReimbRightsName(): Text[100]
    begin
        exit(LtPersInsContReimbRightsTok);
    end;

    procedure LongTermTaxations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LongTermTaxationsName()));
    end;

    procedure LongTermTaxationsName(): Text[100]
    begin
        exit(LongTermTaxationsTok);
    end;

    procedure PendingInvestOnCapitalInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PendingInvestOnCapitalInstName()));
    end;

    procedure PendingInvestOnCapitalInstName(): Text[100]
    begin
        exit(PendingInvestOnCapitalInstTok);
    end;

    procedure GuarantDepSecurities(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GuarantDepSecuritiesName()));
    end;

    procedure GuarantDepSecuritiesName(): Text[100]
    begin
        exit(GuarantDepSecuritiesTok);
    end;

    procedure GuarantSecuritiesLT(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GuarantSecuritiesLTName()));
    end;

    procedure GuarantSecuritiesLTName(): Text[100]
    begin
        exit(GuarantSecuritiesLTTok);
    end;

    procedure GuaranteedSecurities(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GuaranteedSecuritiesName()));
    end;

    procedure GuaranteedSecuritiesName(): Text[100]
    begin
        exit(GuaranteedSecuritiesTok);
    end;

    procedure GuaranteedDepositsLT(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GuaranteedDepositsLTName()));
    end;

    procedure GuaranteedDepositsLTName(): Text[100]
    begin
        exit(GuaranteedDepositsLTTok);
    end;

    procedure DeprOfIntangibleFa(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprOfIntangibleFaName()));
    end;

    procedure DeprOfIntangibleFaName(): Text[100]
    begin
        exit(DeprOfIntangibleFaTok);
    end;

    procedure DepResearchCosts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepResearchCostsName()));
    end;

    procedure DepResearchCostsName(): Text[100]
    begin
        exit(DepResearchCostsTok);
    end;

    procedure DepDevelopmCosts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepDevelopmCostsName()));
    end;

    procedure DepDevelopmCostsName(): Text[100]
    begin
        exit(DepDevelopmCostsTok);
    end;

    procedure DepFranchisedAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepFranchisedAssetsName()));
    end;

    procedure DepFranchisedAssetsName(): Text[100]
    begin
        exit(DepFranchisedAssetsTok);
    end;

    procedure DepIndustrialProperty(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepIndustrialPropertyName()));
    end;

    procedure DepIndustrialPropertyName(): Text[100]
    begin
        exit(DepIndustrialPropertyTok);
    end;

    procedure DepRightToLease(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepRightToLeaseName()));
    end;

    procedure DepRightToLeaseName(): Text[100]
    begin
        exit(DepRightToLeaseTok);
    end;

    procedure DepEdpApplications(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepEdpApplicationsName()));
    end;

    procedure DepEdpApplicationsName(): Text[100]
    begin
        exit(DepEdpApplicationsTok);
    end;

    procedure DeprOfTangibleFa(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprOfTangibleFaName()));
    end;

    procedure DeprOfTangibleFaName(): Text[100]
    begin
        exit(DeprOfTangibleFaTok);
    end;

    procedure DepBuildings(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepBuildingsName()));
    end;

    procedure DepBuildingsName(): Text[100]
    begin
        exit(DepBuildingsTok);
    end;

    procedure DepTechnicalInstallations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepTechnicalInstallationsName()));
    end;

    procedure DepTechnicalInstallationsName(): Text[100]
    begin
        exit(DepTechnicalInstallationsTok);
    end;

    procedure DepIndustrialMachineryHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepIndustrialMachineryHeadingName()));
    end;

    procedure DepIndustrialMachineryHeadingName(): Text[100]
    begin
        exit(DepIndustrialMachineryHeadingTok);
    end;

    procedure DepIndustrialMachinery(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepIndustrialMachineryName()));
    end;

    procedure DepIndustrialMachineryName(): Text[100]
    begin
        exit(DepIndustrialMachineryTok);
    end;

    procedure DepIndustrialTooling(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepIndustrialToolingName()));
    end;

    procedure DepIndustrialToolingName(): Text[100]
    begin
        exit(DepIndustrialToolingTok);
    end;

    procedure DepPlantMachineryEquip(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepPlantMachineryEquipName()));
    end;

    procedure DepPlantMachineryEquipName(): Text[100]
    begin
        exit(DepPlantMachineryEquipTok);
    end;

    procedure DepFurnitureAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepFurnitureAssetsName()));
    end;

    procedure DepFurnitureAssetsName(): Text[100]
    begin
        exit(DepFurnitureAssetsTok);
    end;

    procedure DepFurniture(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepFurnitureName()));
    end;

    procedure DepFurnitureName(): Text[100]
    begin
        exit(DepFurnitureTok);
    end;

    procedure DepInfoProcessEquipment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepInfoProcessEquipmentName()));
    end;

    procedure DepInfoProcessEquipmentName(): Text[100]
    begin
        exit(DepInfoProcessEquipmentTok);
    end;

    procedure DepTransportEquipmentHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepTransportEquipmentHeadingName()));
    end;

    procedure DepTransportEquipmentHeadingName(): Text[100]
    begin
        exit(DepTransportEquipmentHeadingTok);
    end;

    procedure DepTransportEquipment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepTransportEquipmentName()));
    end;

    procedure DepTransportEquipmentName(): Text[100]
    begin
        exit(DepTransportEquipmentTok);
    end;

    procedure DepOtherTangibleFaHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepOtherTangibleFaHeadingName()));
    end;

    procedure DepOtherTangibleFaHeadingName(): Text[100]
    begin
        exit(DepOtherTangibleFaHeadingTok);
    end;

    procedure DepOtherTangibleFa(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepOtherTangibleFaName()));
    end;

    procedure DepOtherTangibleFaName(): Text[100]
    begin
        exit(DepOtherTangibleFaTok);
    end;

    procedure DepPropertiesInvestmHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepPropertiesInvestmHeadingName()));
    end;

    procedure DepPropertiesInvestmHeadingName(): Text[100]
    begin
        exit(DepPropertiesInvestmHeadingTok);
    end;

    procedure DepPropertiesInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepPropertiesInvestmName()));
    end;

    procedure DepPropertiesInvestmName(): Text[100]
    begin
        exit(DepPropertiesInvestmTok);
    end;

    procedure DeteriorForFa(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeteriorForFaName()));
    end;

    procedure DeteriorForFaName(): Text[100]
    begin
        exit(DeteriorForFaTok);
    end;

    procedure DeteriorOfIntangFa(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeteriorOfIntangFaName()));
    end;

    procedure DeteriorOfIntangFaName(): Text[100]
    begin
        exit(DeteriorOfIntangFaTok);
    end;

    procedure DetResearchCosts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetResearchCostsName()));
    end;

    procedure DetResearchCostsName(): Text[100]
    begin
        exit(DetResearchCostsTok);
    end;

    procedure DetDevelopmCosts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetDevelopmCostsName()));
    end;

    procedure DetDevelopmCostsName(): Text[100]
    begin
        exit(DetDevelopmCostsTok);
    end;

    procedure DetFranchisedAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetFranchisedAssetsName()));
    end;

    procedure DetFranchisedAssetsName(): Text[100]
    begin
        exit(DetFranchisedAssetsTok);
    end;

    procedure DetIndustrialProperty(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetIndustrialPropertyName()));
    end;

    procedure DetIndustrialPropertyName(): Text[100]
    begin
        exit(DetIndustrialPropertyTok);
    end;

    procedure DetRightToLease(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetRightToLeaseName()));
    end;

    procedure DetRightToLeaseName(): Text[100]
    begin
        exit(DetRightToLeaseTok);
    end;

    procedure DetEdpApplications(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetEdpApplicationsName()));
    end;

    procedure DetEdpApplicationsName(): Text[100]
    begin
        exit(DetEdpApplicationsTok);
    end;

    procedure DeteriorOfTangFa(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeteriorOfTangFaName()));
    end;

    procedure DeteriorOfTangFaName(): Text[100]
    begin
        exit(DeteriorOfTangFaTok);
    end;

    procedure DetFreeholdLand(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetFreeholdLandName()));
    end;

    procedure DetFreeholdLandName(): Text[100]
    begin
        exit(DetFreeholdLandTok);
    end;

    procedure DetBuilding(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetBuildingName()));
    end;

    procedure DetBuildingName(): Text[100]
    begin
        exit(DetBuildingTok);
    end;

    procedure DetTechnicalInstallations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetTechnicalInstallationsName()));
    end;

    procedure DetTechnicalInstallationsName(): Text[100]
    begin
        exit(DetTechnicalInstallationsTok);
    end;

    procedure DetIndustrialMachinery(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetIndustrialMachineryName()));
    end;

    procedure DetIndustrialMachineryName(): Text[100]
    begin
        exit(DetIndustrialMachineryTok);
    end;

    procedure DetIndustrialTooling(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetIndustrialToolingName()));
    end;

    procedure DetIndustrialToolingName(): Text[100]
    begin
        exit(DetIndustrialToolingTok);
    end;

    procedure DetPlantMachineryEquip(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetPlantMachineryEquipName()));
    end;

    procedure DetPlantMachineryEquipName(): Text[100]
    begin
        exit(DetPlantMachineryEquipTok);
    end;

    procedure DepFurnitureHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DepFurnitureHeadingName()));
    end;

    procedure DepFurnitureHeadingName(): Text[100]
    begin
        exit(DepFurnitureHeadingTok);
    end;

    procedure DetInfoProcessEquipment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetInfoProcessEquipmentName()));
    end;

    procedure DetInfoProcessEquipmentName(): Text[100]
    begin
        exit(DetInfoProcessEquipmentTok);
    end;

    procedure DetTransportEquipment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetTransportEquipmentName()));
    end;

    procedure DetTransportEquipmentName(): Text[100]
    begin
        exit(DetTransportEquipmentTok);
    end;

    procedure DetOtherTangFixedAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetOtherTangFixedAssetsName()));
    end;

    procedure DetOtherTangFixedAssetsName(): Text[100]
    begin
        exit(DetOtherTangFixedAssetsTok);
    end;

    procedure DetPropertiesInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetPropertiesInvestmName()));
    end;

    procedure DetPropertiesInvestmName(): Text[100]
    begin
        exit(DetPropertiesInvestmTok);
    end;

    procedure DetFreeholdLandHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetFreeholdLandHeadingName()));
    end;

    procedure DetFreeholdLandHeadingName(): Text[100]
    begin
        exit(DetFreeholdLandHeadingTok);
    end;

    procedure DetBuildingHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetBuildingHeadingName()));
    end;

    procedure DetBuildingHeadingName(): Text[100]
    begin
        exit(DetBuildingHeadingTok);
    end;

    procedure DetLtSecValueInVincC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtSecValueInVincCName()));
    end;

    procedure DetLtSecValueInVincCName(): Text[100]
    begin
        exit(DetLtSecValueInVincCTok);
    end;

    procedure DetLtSecValueInGr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtSecValueInGrName()));
    end;

    procedure DetLtSecValueInGrName(): Text[100]
    begin
        exit(DetLtSecValueInGrTok);
    end;

    procedure DetLtSecValueInAsoc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtSecValueInAsocName()));
    end;

    procedure DetLtSecValueInAsocName(): Text[100]
    begin
        exit(DetLtSecValueInAsocTok);
    end;

    procedure DetLtDebtSecuritiesVinC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtDebtSecuritiesVinCName()));
    end;

    procedure DetLtDebtSecuritiesVinCName(): Text[100]
    begin
        exit(DetLtDebtSecuritiesVinCTok);
    end;

    procedure DetLtDebtSecuritiesG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtDebtSecuritiesGName()));
    end;

    procedure DetLtDebtSecuritiesGName(): Text[100]
    begin
        exit(DetLtDebtSecuritiesGTok);
    end;

    procedure DetLtDebtSecuritiesA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtDebtSecuritiesAName()));
    end;

    procedure DetLtDebtSecuritiesAName(): Text[100]
    begin
        exit(DetLtDebtSecuritiesATok);
    end;

    procedure DetLtDebtSecurOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtDebtSecurOVinName()));
    end;

    procedure DetLtDebtSecurOVinName(): Text[100]
    begin
        exit(DetLtDebtSecurOVinTok);
    end;

    procedure DetLtCreditsValToVincC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtCreditsValToVincCName()));
    end;

    procedure DetLtCreditsValToVincCName(): Text[100]
    begin
        exit(DetLtCreditsValToVincCTok);
    end;

    procedure DetLtCreditsToGr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtCreditsToGrName()));
    end;

    procedure DetLtCreditsToGrName(): Text[100]
    begin
        exit(DetLtCreditsToGrTok);
    end;

    procedure DetLtCreditsToAsoc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtCreditsToAsocName()));
    end;

    procedure DetLtCreditsToAsocName(): Text[100]
    begin
        exit(DetLtCreditsToAsocTok);
    end;

    procedure DetLtCreditsToOthVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtCreditsToOthVinName()));
    end;

    procedure DetLtCreditsToOthVinName(): Text[100]
    begin
        exit(DetLtCreditsToOthVinTok);
    end;

    procedure DetLtDebtSecuritiesValue(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtDebtSecuritiesValueName()));
    end;

    procedure DetLtDebtSecuritiesValueName(): Text[100]
    begin
        exit(DetLtDebtSecuritiesValueTok);
    end;

    procedure DetLtCreditsValue(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLtCreditsValueName()));
    end;

    procedure DetLtCreditsValueName(): Text[100]
    begin
        exit(DetLtCreditsValueTok);
    end;

    procedure TradeGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeGoodsName()));
    end;

    procedure TradeGoodsName(): Text[100]
    begin
        exit(TradeGoodsTok);
    end;

    procedure GoodsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsHeadingName()));
    end;

    procedure GoodsHeadingName(): Text[100]
    begin
        exit(GoodsHeadingTok);
    end;

    procedure Goods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsName()));
    end;

    procedure GoodsName(): Text[100]
    begin
        exit(GoodsTok);
    end;

    procedure AssemblyBom(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(AssemblyBomName()));
    end;

    procedure AssemblyBomName(): Text[100]
    begin
        exit(AssemblyBomTok);
    end;

    procedure GoodsTradeCred(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsTradeCredName()));
    end;

    procedure GoodsTradeCredName(): Text[100]
    begin
        exit(GoodsTradeCredTok);
    end;

    procedure BillOfMaterTradeCred(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BillOfMaterTradeCredName()));
    end;

    procedure BillOfMaterTradeCredName(): Text[100]
    begin
        exit(BillOfMaterTradeCredTok);
    end;

    procedure RawMaterialsProv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RawMaterialsProvName()));
    end;

    procedure RawMaterialsProvName(): Text[100]
    begin
        exit(RawMaterialsProvTok);
    end;

    procedure SuppliesOtherConsum(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SuppliesOtherConsumName()));
    end;

    procedure SuppliesOtherConsumName(): Text[100]
    begin
        exit(SuppliesOtherConsumTok);
    end;

    procedure ItemsAssembToIncorp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ItemsAssembToIncorpName()));
    end;

    procedure ItemsAssembToIncorpName(): Text[100]
    begin
        exit(ItemsAssembToIncorpTok);
    end;

    procedure Fuels(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FuelsName()));
    end;

    procedure FuelsName(): Text[100]
    begin
        exit(FuelsTok);
    end;

    procedure ReplacementParts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ReplacementPartsName()));
    end;

    procedure ReplacementPartsName(): Text[100]
    begin
        exit(ReplacementPartsTok);
    end;

    procedure OtherMaterials(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherMaterialsName()));
    end;

    procedure OtherMaterialsName(): Text[100]
    begin
        exit(OtherMaterialsTok);
    end;

    procedure Packaging(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PackagingName()));
    end;

    procedure PackagingName(): Text[100]
    begin
        exit(PackagingTok);
    end;

    procedure Containers(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ContainersName()));
    end;

    procedure ContainersName(): Text[100]
    begin
        exit(ContainersTok);
    end;

    procedure ProdInProgrManufGoodsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProdInProgrManufGoodsHeadingName()));
    end;

    procedure ProdInProgrManufGoodsHeadingName(): Text[100]
    begin
        exit(ProdInProgrManufGoodsHeadingTok);
    end;

    procedure ProdInProgrManufGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProdInProgrManufGoodsName()));
    end;

    procedure ProdInProgrManufGoodsName(): Text[100]
    begin
        exit(ProdInProgrManufGoodsTok);
    end;

    procedure SalesSpecialist(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SalesSpecialistName()));
    end;

    procedure SalesSpecialistName(): Text[100]
    begin
        exit(SalesSpecialistTok);
    end;

    procedure WipProjectSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WipProjectSalesName()));
    end;

    procedure WipProjectSalesName(): Text[100]
    begin
        exit(WipProjectSalesTok);
    end;

    procedure WipInvoicedProjectSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WipInvoicedProjectSalesName()));
    end;

    procedure WipInvoicedProjectSalesName(): Text[100]
    begin
        exit(WipInvoicedProjectSalesTok);
    end;

    procedure CostsSpecialist(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CostsSpecialistName()));
    end;

    procedure CostsSpecialistName(): Text[100]
    begin
        exit(CostsSpecialistTok);
    end;

    procedure WipProjectCosts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WipProjectCostsName()));
    end;

    procedure WipProjectCostsName(): Text[100]
    begin
        exit(WipProjectCostsTok);
    end;

    procedure WipAccruedProjectCosts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WipAccruedProjectCostsName()));
    end;

    procedure WipAccruedProjectCostsName(): Text[100]
    begin
        exit(WipAccruedProjectCostsTok);
    end;

    procedure JobPostingGroup(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(JobPostingGroupName()));
    end;

    procedure JobPostingGroupName(): Text[100]
    begin
        exit(JobPostingGroupTok);
    end;

    procedure WorkInProgressHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WorkInProgressHeadingName()));
    end;

    procedure WorkInProgressHeadingName(): Text[100]
    begin
        exit(WorkInProgressHeadingTok);
    end;

    procedure WorkInProgress(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WorkInProgressName()));
    end;

    procedure WorkInProgressName(): Text[100]
    begin
        exit(WorkInProgressTok);
    end;

    procedure ByProductsOrScrap(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ByProductsOrScrapName()));
    end;

    procedure ByProductsOrScrapName(): Text[100]
    begin
        exit(ByProductsOrScrapTok);
    end;

    procedure ByProducts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ByProductsName()));
    end;

    procedure ByProductsName(): Text[100]
    begin
        exit(ByProductsTok);
    end;

    procedure WasteProducts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WasteProductsName()));
    end;

    procedure WasteProductsName(): Text[100]
    begin
        exit(WasteProductsTok);
    end;

    procedure RejectsOfManufacturing(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RejectsOfManufacturingName()));
    end;

    procedure RejectsOfManufacturingName(): Text[100]
    begin
        exit(RejectsOfManufacturingTok);
    end;

    procedure DeteriorInventoryValue(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeteriorInventoryValueName()));
    end;

    procedure DeteriorInventoryValueName(): Text[100]
    begin
        exit(DeteriorInventoryValueTok);
    end;

    procedure DetGoodsValue(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetGoodsValueName()));
    end;

    procedure DetGoodsValueName(): Text[100]
    begin
        exit(DetGoodsValueTok);
    end;

    procedure DetRawMat(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetRawMatName()));
    end;

    procedure DetRawMatName(): Text[100]
    begin
        exit(DetRawMatTok);
    end;

    procedure DetSuppliesOtherConsum(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetSuppliesOtherConsumName()));
    end;

    procedure DetSuppliesOtherConsumName(): Text[100]
    begin
        exit(DetSuppliesOtherConsumTok);
    end;

    procedure DetProdProgrManufGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetProdProgrManufGoodsName()));
    end;

    procedure DetProdProgrManufGoodsName(): Text[100]
    begin
        exit(DetProdProgrManufGoodsTok);
    end;

    procedure DetForWorkInProgress(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetForWorkInProgressName()));
    end;

    procedure DetForWorkInProgressName(): Text[100]
    begin
        exit(DetForWorkInProgressTok);
    end;

    procedure DetForFinishedGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetForFinishedGoodsName()));
    end;

    procedure DetForFinishedGoodsName(): Text[100]
    begin
        exit(DetForFinishedGoodsTok);
    end;

    procedure DetForByProdOrScrap(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetForByProdOrScrapName()));
    end;

    procedure DetForByProdOrScrapName(): Text[100]
    begin
        exit(DetForByProdOrScrapTok);
    end;

    procedure CreditorsAndDebtors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CreditorsAndDebtorsName()));
    end;

    procedure CreditorsAndDebtorsName(): Text[100]
    begin
        exit(CreditorsAndDebtorsTok);
    end;

    procedure TradeCreditorsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCreditorsHeadingName()));
    end;

    procedure TradeCreditorsHeadingName(): Text[100]
    begin
        exit(TradeCreditorsHeadingTok);
    end;

    procedure TradeCreditors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCreditorsName()));
    end;

    procedure TradeCreditorsName(): Text[100]
    begin
        exit(TradeCreditorsTok);
    end;

    procedure STTradeCredEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(STTradeCredEuroName()));
    end;

    procedure STTradeCredEuroName(): Text[100]
    begin
        exit(STTradeCredEuroTok);
    end;

    procedure NationalTradeCreditors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NationalTradeCreditorsName()));
    end;

    procedure NationalTradeCreditorsName(): Text[100]
    begin
        exit(NationalTradeCreditorsTok);
    end;

    procedure InternatTradeCreditors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InternatTradeCreditorsName()));
    end;

    procedure InternatTradeCreditorsName(): Text[100]
    begin
        exit(InternatTradeCreditorsTok);
    end;

    procedure InvUnderPaymentOrder(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InvUnderPaymentOrderName()));
    end;

    procedure InvUnderPaymentOrderName(): Text[100]
    begin
        exit(InvUnderPaymentOrderTok);
    end;

    procedure ForCurrTradeCreditors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ForCurrTradeCreditorsName()));
    end;

    procedure ForCurrTradeCreditorsName(): Text[100]
    begin
        exit(ForCurrTradeCreditorsTok);
    end;

    procedure EuTradeCreditors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(EuTradeCreditorsName()));
    end;

    procedure EuTradeCreditorsName(): Text[100]
    begin
        exit(EuTradeCreditorsTok);
    end;

    procedure TradeCredInvNotRec(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredInvNotRecName()));
    end;

    procedure TradeCredInvNotRecName(): Text[100]
    begin
        exit(TradeCredInvNotRecTok);
    end;

    procedure TradeCredBillOfExchPay(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredBillOfExchPayName()));
    end;

    procedure TradeCredBillOfExchPayName(): Text[100]
    begin
        exit(TradeCredBillOfExchPayTok);
    end;

    procedure TradeCrBillExPay(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCrBillExPayName()));
    end;

    procedure TradeCrBillExPayName(): Text[100]
    begin
        exit(TradeCrBillExPayTok);
    end;

    procedure BillExPayNational(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BillExPayNationalName()));
    end;

    procedure BillExPayNationalName(): Text[100]
    begin
        exit(BillExPayNationalTok);
    end;

    procedure BillExInPaymtOrder(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BillExInPaymtOrderName()));
    end;

    procedure BillExInPaymtOrderName(): Text[100]
    begin
        exit(BillExInPaymtOrderTok);
    end;

    procedure TradeCreditorsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCreditorsGName()));
    end;

    procedure TradeCreditorsGName(): Text[100]
    begin
        exit(TradeCreditorsGTok);
    end;

    procedure TradeCreditorsGEuroHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCreditorsGEuroHeadingName()));
    end;

    procedure TradeCreditorsGEuroHeadingName(): Text[100]
    begin
        exit(TradeCreditorsGEuroHeadingTok);
    end;

    procedure TradeCreditorsGEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCreditorsGEuroName()));
    end;

    procedure TradeCreditorsGEuroName(): Text[100]
    begin
        exit(TradeCreditorsGEuroTok);
    end;

    procedure ProvForBillExchPayG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForBillExchPayGName()));
    end;

    procedure ProvForBillExchPayGName(): Text[100]
    begin
        exit(ProvForBillExchPayGTok);
    end;

    procedure TradeCreditorsGForCurr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCreditorsGForCurrName()));
    end;

    procedure TradeCreditorsGForCurrName(): Text[100]
    begin
        exit(TradeCreditorsGForCurrTok);
    end;

    procedure TradeCrReturnEmptiesG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCrReturnEmptiesGName()));
    end;

    procedure TradeCrReturnEmptiesGName(): Text[100]
    begin
        exit(TradeCrReturnEmptiesGTok);
    end;

    procedure TradeCredInvNotRecG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredInvNotRecGName()));
    end;

    procedure TradeCredInvNotRecGName(): Text[100]
    begin
        exit(TradeCredInvNotRecGTok);
    end;

    procedure TradeCredAsoc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredAsocName()));
    end;

    procedure TradeCredAsocName(): Text[100]
    begin
        exit(TradeCredAsocTok);
    end;

    procedure TradeCredOthVinC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredOthVinCName()));
    end;

    procedure TradeCredOthVinCName(): Text[100]
    begin
        exit(TradeCredOthVinCTok);
    end;

    procedure TradeCrReturnEmpties(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCrReturnEmptiesName()));
    end;

    procedure TradeCrReturnEmptiesName(): Text[100]
    begin
        exit(TradeCrReturnEmptiesTok);
    end;

    procedure TradeCredAdvancesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredAdvancesHeadingName()));
    end;

    procedure TradeCredAdvancesHeadingName(): Text[100]
    begin
        exit(TradeCredAdvancesHeadingTok);
    end;

    procedure TradeCredAdvances(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredAdvancesName()));
    end;

    procedure TradeCredAdvancesName(): Text[100]
    begin
        exit(TradeCredAdvancesTok);
    end;

    procedure TradeCredAdvancesNational(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredAdvancesNationalName()));
    end;

    procedure TradeCredAdvancesNationalName(): Text[100]
    begin
        exit(TradeCredAdvancesNationalTok);
    end;

    procedure TradeCredAdvancesEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredAdvancesEuName()));
    end;

    procedure TradeCredAdvancesEuName(): Text[100]
    begin
        exit(TradeCredAdvancesEuTok);
    end;

    procedure TradeCredAdvancesExport(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCredAdvancesExportName()));
    end;

    procedure TradeCredAdvancesExportName(): Text[100]
    begin
        exit(TradeCredAdvancesExportTok);
    end;

    procedure OtherCreditorsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherCreditorsHeadingName()));
    end;

    procedure OtherCreditorsHeadingName(): Text[100]
    begin
        exit(OtherCreditorsHeadingTok);
    end;

    procedure CreditorsProvOfServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CreditorsProvOfServicesName()));
    end;

    procedure CreditorsProvOfServicesName(): Text[100]
    begin
        exit(CreditorsProvOfServicesTok);
    end;

    procedure STCreditorsEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(STCreditorsEuroName()));
    end;

    procedure STCreditorsEuroName(): Text[100]
    begin
        exit(STCreditorsEuroTok);
    end;

    procedure OtherCreditors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherCreditorsName()));
    end;

    procedure OtherCreditorsName(): Text[100]
    begin
        exit(OtherCreditorsTok);
    end;

    procedure CreditorsProvServForCurr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CreditorsProvServForCurrName()));
    end;

    procedure CreditorsProvServForCurrName(): Text[100]
    begin
        exit(CreditorsProvServForCurrTok);
    end;

    procedure CreditorsInvNotRec(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CreditorsInvNotRecName()));
    end;

    procedure CreditorsInvNotRecName(): Text[100]
    begin
        exit(CreditorsInvNotRecTok);
    end;

    procedure CreditorsBillExPayHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CreditorsBillExPayHeadingName()));
    end;

    procedure CreditorsBillExPayHeadingName(): Text[100]
    begin
        exit(CreditorsBillExPayHeadingTok);
    end;

    procedure CreditorsBillExPay(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CreditorsBillExPayName()));
    end;

    procedure CreditorsBillExPayName(): Text[100]
    begin
        exit(CreditorsBillExPayTok);
    end;

    procedure CreditorsComOperationsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CreditorsComOperationsHeadingName()));
    end;

    procedure CreditorsComOperationsHeadingName(): Text[100]
    begin
        exit(CreditorsComOperationsHeadingTok);
    end;

    procedure CreditorsComOperations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CreditorsComOperationsName()));
    end;

    procedure CreditorsComOperationsName(): Text[100]
    begin
        exit(CreditorsComOperationsTok);
    end;

    procedure TradeAccReceivHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeAccReceivHeadingName()));
    end;

    procedure TradeAccReceivHeadingName(): Text[100]
    begin
        exit(TradeAccReceivHeadingTok);
    end;

    procedure TradeAccReceiv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeAccReceivName()));
    end;

    procedure TradeAccReceivName(): Text[100]
    begin
        exit(TradeAccReceivTok);
    end;

    procedure TradeAccReceivEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeAccReceivEuroName()));
    end;

    procedure TradeAccReceivEuroName(): Text[100]
    begin
        exit(TradeAccReceivEuroTok);
    end;

    procedure NationalCustomers(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NationalCustomersName()));
    end;

    procedure NationalCustomersName(): Text[100]
    begin
        exit(NationalCustomersTok);
    end;

    procedure InternationalCustomers(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InternationalCustomersName()));
    end;

    procedure InternationalCustomersName(): Text[100]
    begin
        exit(InternationalCustomersTok);
    end;

    procedure InvoicesToBePaid(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InvoicesToBePaidName()));
    end;

    procedure InvoicesToBePaidName(): Text[100]
    begin
        exit(InvoicesToBePaidTok);
    end;

    procedure DiscountedInvoicesAccount(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscountedInvoicesAccountName()));
    end;

    procedure DiscountedInvoicesAccountName(): Text[100]
    begin
        exit(DiscountedInvoicesAccountTok);
    end;

    procedure RejectedInvoicesAccount(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RejectedInvoicesAccountName()));
    end;

    procedure RejectedInvoicesAccountName(): Text[100]
    begin
        exit(RejectedInvoicesAccountTok);
    end;

    procedure TradeAccReceivForCurr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeAccReceivForCurrName()));
    end;

    procedure TradeAccReceivForCurrName(): Text[100]
    begin
        exit(TradeAccReceivForCurrTok);
    end;

    procedure TradeAccRecInvNotRec(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeAccRecInvNotRecName()));
    end;

    procedure TradeAccRecInvNotRecName(): Text[100]
    begin
        exit(TradeAccRecInvNotRecTok);
    end;

    procedure TradeAccRecBillsColl(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeAccRecBillsCollName()));
    end;

    procedure TradeAccRecBillsCollName(): Text[100]
    begin
        exit(TradeAccRecBillsCollTok);
    end;

    procedure PendingReceivablesBillsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PendingReceivablesBillsHeadingName()));
    end;

    procedure PendingReceivablesBillsHeadingName(): Text[100]
    begin
        exit(PendingReceivablesBillsHeadingTok);
    end;

    procedure PendingReceivablesBills(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PendingReceivablesBillsName()));
    end;

    procedure PendingReceivablesBillsName(): Text[100]
    begin
        exit(PendingReceivablesBillsTok);
    end;

    procedure DiscountedBillsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscountedBillsHeadingName()));
    end;

    procedure DiscountedBillsHeadingName(): Text[100]
    begin
        exit(DiscountedBillsHeadingTok);
    end;

    procedure DiscountedBills(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscountedBillsName()));
    end;

    procedure DiscountedBillsName(): Text[100]
    begin
        exit(DiscountedBillsTok);
    end;

    procedure BillsOnCollectionManagHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BillsOnCollectionManagHeadingName()));
    end;

    procedure BillsOnCollectionManagHeadingName(): Text[100]
    begin
        exit(BillsOnCollectionManagHeadingTok);
    end;

    procedure BillsOnCollectionManag(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BillsOnCollectionManagName()));
    end;

    procedure BillsOnCollectionManagName(): Text[100]
    begin
        exit(BillsOnCollectionManagTok);
    end;

    procedure UnpaidBillsOfExchangeHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(UnpaidBillsOfExchangeHeadingName()));
    end;

    procedure UnpaidBillsOfExchangeHeadingName(): Text[100]
    begin
        exit(UnpaidBillsOfExchangeHeadingTok);
    end;

    procedure UnpaidBillsOfExchange(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(UnpaidBillsOfExchangeName()));
    end;

    procedure UnpaidBillsOfExchangeName(): Text[100]
    begin
        exit(UnpaidBillsOfExchangeTok);
    end;

    procedure TradeAccFactoringOp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeAccFactoringOpName()));
    end;

    procedure TradeAccFactoringOpName(): Text[100]
    begin
        exit(TradeAccFactoringOpTok);
    end;

    procedure TradeAccRecAccG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeAccRecAccGName()));
    end;

    procedure TradeAccRecAccGName(): Text[100]
    begin
        exit(TradeAccRecAccGTok);
    end;

    procedure GroupTrAccRecEuroHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GroupTrAccRecEuroHeadingName()));
    end;

    procedure GroupTrAccRecEuroHeadingName(): Text[100]
    begin
        exit(GroupTrAccRecEuroHeadingTok);
    end;

    procedure GroupTrAccRecEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GroupTrAccRecEuroName()));
    end;

    procedure GroupTrAccRecEuroName(): Text[100]
    begin
        exit(GroupTrAccRecEuroTok);
    end;

    procedure BillsOfExchRecG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BillsOfExchRecGName()));
    end;

    procedure BillsOfExchRecGName(): Text[100]
    begin
        exit(BillsOfExchRecGTok);
    end;

    procedure TrAccFactoringOpG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TrAccFactoringOpGName()));
    end;

    procedure TrAccFactoringOpGName(): Text[100]
    begin
        exit(TrAccFactoringOpGTok);
    end;

    procedure ForCurrTrAccRecG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ForCurrTrAccRecGName()));
    end;

    procedure ForCurrTrAccRecGName(): Text[100]
    begin
        exit(ForCurrTrAccRecGTok);
    end;

    procedure TrAccRecRetEmptG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TrAccRecRetEmptGName()));
    end;

    procedure TrAccRecRetEmptGName(): Text[100]
    begin
        exit(TrAccRecRetEmptGTok);
    end;

    procedure GroupTrAccRecRetEmpt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GroupTrAccRecRetEmptName()));
    end;

    procedure GroupTrAccRecRetEmptName(): Text[100]
    begin
        exit(GroupTrAccRecRetEmptTok);
    end;

    procedure TrAccRecInvNotRecG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TrAccRecInvNotRecGName()));
    end;

    procedure TrAccRecInvNotRecGName(): Text[100]
    begin
        exit(TrAccRecInvNotRecGTok);
    end;

    procedure TradeAcsRecAccA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeAcsRecAccAName()));
    end;

    procedure TradeAcsRecAccAName(): Text[100]
    begin
        exit(TradeAcsRecAccATok);
    end;

    procedure TrAccRecOtherVincComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TrAccRecOtherVincCompName()));
    end;

    procedure TrAccRecOtherVincCompName(): Text[100]
    begin
        exit(TrAccRecOtherVincCompTok);
    end;

    procedure BadDoubtfulDebts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BadDoubtfulDebtsName()));
    end;

    procedure BadDoubtfulDebtsName(): Text[100]
    begin
        exit(BadDoubtfulDebtsTok);
    end;

    procedure TrAccRecRetEmpt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TrAccRecRetEmptName()));
    end;

    procedure TrAccRecRetEmptName(): Text[100]
    begin
        exit(TrAccRecRetEmptTok);
    end;

    procedure TradeDebtorsCreditBalances(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeDebtorsCreditBalancesName()));
    end;

    procedure TradeDebtorsCreditBalancesName(): Text[100]
    begin
        exit(TradeDebtorsCreditBalancesTok);
    end;

    procedure StTrDebtAdvancesNational(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StTrDebtAdvancesNationalName()));
    end;

    procedure StTrDebtAdvancesNationalName(): Text[100]
    begin
        exit(StTrDebtAdvancesNationalTok);
    end;

    procedure StTrDebtAdvancesEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StTrDebtAdvancesEuName()));
    end;

    procedure StTrDebtAdvancesEuName(): Text[100]
    begin
        exit(StTrDebtAdvancesEuTok);
    end;

    procedure StTrDebtAdvancesExport(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StTrDebtAdvancesExportName()));
    end;

    procedure StTrDebtAdvancesExportName(): Text[100]
    begin
        exit(StTrDebtAdvancesExportTok);
    end;

    procedure OtherDebtors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherDebtorsName()));
    end;

    procedure OtherDebtorsName(): Text[100]
    begin
        exit(OtherDebtorsTok);
    end;

    procedure DebtorsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtorsHeadingName()));
    end;

    procedure DebtorsHeadingName(): Text[100]
    begin
        exit(DebtorsHeadingTok);
    end;

    procedure DebtorsEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtorsEuroName()));
    end;

    procedure DebtorsEuroName(): Text[100]
    begin
        exit(DebtorsEuroTok);
    end;

    procedure Debtors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtorsName()));
    end;

    procedure DebtorsName(): Text[100]
    begin
        exit(DebtorsTok);
    end;

    procedure DebtorsForeignCurr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtorsForeignCurrName()));
    end;

    procedure DebtorsForeignCurrName(): Text[100]
    begin
        exit(DebtorsForeignCurrTok);
    end;

    procedure DebtorsInvNotRec(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtorsInvNotRecName()));
    end;

    procedure DebtorsInvNotRecName(): Text[100]
    begin
        exit(DebtorsInvNotRecTok);
    end;

    procedure DebtorsBillsOfCollection(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtorsBillsOfCollectionName()));
    end;

    procedure DebtorsBillsOfCollectionName(): Text[100]
    begin
        exit(DebtorsBillsOfCollectionTok);
    end;

    procedure DebtorsReceivablesPendBills(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtorsReceivablesPendBillsName()));
    end;

    procedure DebtorsReceivablesPendBillsName(): Text[100]
    begin
        exit(DebtorsReceivablesPendBillsTok);
    end;

    procedure DebtorsDiscountedBills(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtorsDiscountedBillsName()));
    end;

    procedure DebtorsDiscountedBillsName(): Text[100]
    begin
        exit(DebtorsDiscountedBillsTok);
    end;

    procedure DebtBillsOnCollManag(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtBillsOnCollManagName()));
    end;

    procedure DebtBillsOnCollManagName(): Text[100]
    begin
        exit(DebtBillsOnCollManagTok);
    end;

    procedure DebtorsUnpaidBills(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtorsUnpaidBillsName()));
    end;

    procedure DebtorsUnpaidBillsName(): Text[100]
    begin
        exit(DebtorsUnpaidBillsTok);
    end;

    procedure BadDoubtfulDebt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BadDoubtfulDebtName()));
    end;

    procedure BadDoubtfulDebtName(): Text[100]
    begin
        exit(BadDoubtfulDebtTok);
    end;

    procedure DebtorsJointVentures(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtorsJointVenturesName()));
    end;

    procedure DebtorsJointVenturesName(): Text[100]
    begin
        exit(DebtorsJointVenturesTok);
    end;

    procedure Employees(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(EmployeesName()));
    end;

    procedure EmployeesName(): Text[100]
    begin
        exit(EmployeesTok);
    end;

    procedure RemunerationAdvancesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RemunerationAdvancesHeadingName()));
    end;

    procedure RemunerationAdvancesHeadingName(): Text[100]
    begin
        exit(RemunerationAdvancesHeadingTok);
    end;

    procedure RemunerationAdvances(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RemunerationAdvancesName()));
    end;

    procedure RemunerationAdvancesName(): Text[100]
    begin
        exit(RemunerationAdvancesTok);
    end;

    procedure PendingRemunerations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PendingRemunerationsName()));
    end;

    procedure PendingRemunerationsName(): Text[100]
    begin
        exit(PendingRemunerationsTok);
    end;

    procedure PendingFixContribSistRem(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PendingFixContribSistRemName()));
    end;

    procedure PendingFixContribSistRemName(): Text[100]
    begin
        exit(PendingFixContribSistRemTok);
    end;

    procedure GeneralGovernment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GeneralGovernmentName()));
    end;

    procedure GeneralGovernmentName(): Text[100]
    begin
        exit(GeneralGovernmentTok);
    end;

    procedure GovernmentReceivable(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovernmentReceivableName()));
    end;

    procedure GovernmentReceivableName(): Text[100]
    begin
        exit(GovernmentReceivableTok);
    end;

    procedure GovernmentVatReceivHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovernmentVatReceivHeadingName()));
    end;

    procedure GovernmentVatReceivHeadingName(): Text[100]
    begin
        exit(GovernmentVatReceivHeadingTok);
    end;

    procedure GovernmentVatReceiv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovernmentVatReceivName()));
    end;

    procedure GovernmentVatReceivName(): Text[100]
    begin
        exit(GovernmentVatReceivTok);
    end;

    procedure GovernmentSubvReceiv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovernmentSubvReceivName()));
    end;

    procedure GovernmentSubvReceivName(): Text[100]
    begin
        exit(GovernmentSubvReceivTok);
    end;

    procedure GovernmentTaxReturnReceiv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovernmentTaxReturnReceivName()));
    end;

    procedure GovernmentTaxReturnReceivName(): Text[100]
    begin
        exit(GovernmentTaxReturnReceivTok);
    end;

    procedure SocialSecurity(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SocialSecurityName()));
    end;

    procedure SocialSecurityName(): Text[100]
    begin
        exit(SocialSecurityTok);
    end;

    procedure SocialSecurityReceivable(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SocialSecurityReceivableName()));
    end;

    procedure SocialSecurityReceivableName(): Text[100]
    begin
        exit(SocialSecurityReceivableTok);
    end;

    procedure ValueAddedTaxDeduct(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ValueAddedTaxDeductName()));
    end;

    procedure ValueAddedTaxDeductName(): Text[100]
    begin
        exit(ValueAddedTaxDeductTok);
    end;

    procedure GovVatDeductible(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovVatDeductibleName()));
    end;

    procedure GovVatDeductibleName(): Text[100]
    begin
        exit(GovVatDeductibleTok);
    end;

    procedure GovDeducPaymOnAccHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovDeducPaymOnAccHeadingName()));
    end;

    procedure GovDeducPaymOnAccHeadingName(): Text[100]
    begin
        exit(GovDeducPaymOnAccHeadingTok);
    end;

    procedure GovDeducPaymOnAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovDeducPaymOnAccName()));
    end;

    procedure GovDeducPaymOnAccName(): Text[100]
    begin
        exit(GovDeducPaymOnAccTok);
    end;

    procedure DeferredTaxAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeferredTaxAssetsName()));
    end;

    procedure DeferredTaxAssetsName(): Text[100]
    begin
        exit(DeferredTaxAssetsTok);
    end;

    procedure DeducTemporaryDifferences(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeducTemporaryDifferencesName()));
    end;

    procedure DeducTemporaryDifferencesName(): Text[100]
    begin
        exit(DeducTemporaryDifferencesTok);
    end;

    procedure DeferredDeductDiscounts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeferredDeductDiscountsName()));
    end;

    procedure DeferredDeductDiscountsName(): Text[100]
    begin
        exit(DeferredDeductDiscountsTok);
    end;

    procedure CreditForLossesToComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CreditForLossesToCompName()));
    end;

    procedure CreditForLossesToCompName(): Text[100]
    begin
        exit(CreditForLossesToCompTok);
    end;

    procedure GovernmentCreditor(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovernmentCreditorName()));
    end;

    procedure GovernmentCreditorName(): Text[100]
    begin
        exit(GovernmentCreditorTok);
    end;

    procedure GovernmentCreditorVatHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovernmentCreditorVatHeadingName()));
    end;

    procedure GovernmentCreditorVatHeadingName(): Text[100]
    begin
        exit(GovernmentCreditorVatHeadingTok);
    end;

    procedure GovernmentCreditorVat(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovernmentCreditorVatName()));
    end;

    procedure GovernmentCreditorVatName(): Text[100]
    begin
        exit(GovernmentCreditorVatTok);
    end;

    procedure GovernmentCreditorIrpfHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovernmentCreditorIrpfHeadingName()));
    end;

    procedure GovernmentCreditorIrpfHeadingName(): Text[100]
    begin
        exit(GovernmentCreditorIrpfHeadingTok);
    end;

    procedure GovernmentCreditorIrpf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovernmentCreditorIrpfName()));
    end;

    procedure GovernmentCreditorIrpfName(): Text[100]
    begin
        exit(GovernmentCreditorIrpfTok);
    end;

    procedure GovCredCorpIncTaxHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovCredCorpIncTaxHeadingName()));
    end;

    procedure GovCredCorpIncTaxHeadingName(): Text[100]
    begin
        exit(GovCredCorpIncTaxHeadingTok);
    end;

    procedure GovCredCorpIncTax(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovCredCorpIncTaxName()));
    end;

    procedure GovCredCorpIncTaxName(): Text[100]
    begin
        exit(GovCredCorpIncTaxTok);
    end;

    procedure GovCreditorSubvHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovCreditorSubvHeadingName()));
    end;

    procedure GovCreditorSubvHeadingName(): Text[100]
    begin
        exit(GovCreditorSubvHeadingTok);
    end;

    procedure GovCreditorSubv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GovCreditorSubvName()));
    end;

    procedure GovCreditorSubvName(): Text[100]
    begin
        exit(GovCreditorSubvTok);
    end;

    procedure SocialSecurityCreditorHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SocialSecurityCreditorHeadingName()));
    end;

    procedure SocialSecurityCreditorHeadingName(): Text[100]
    begin
        exit(SocialSecurityCreditorHeadingTok);
    end;

    procedure SocialSecurityCreditor(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SocialSecurityCreditorName()));
    end;

    procedure SocialSecurityCreditorName(): Text[100]
    begin
        exit(SocialSecurityCreditorTok);
    end;

    procedure ValueAddTaxCollByComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ValueAddTaxCollByCompName()));
    end;

    procedure ValueAddTaxCollByCompName(): Text[100]
    begin
        exit(ValueAddTaxCollByCompTok);
    end;

    procedure VatCollByTheComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(VatCollByTheCompName()));
    end;

    procedure VatCollByTheCompName(): Text[100]
    begin
        exit(VatCollByTheCompTok);
    end;

    procedure VatEuReversion(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(VatEuReversionName()));
    end;

    procedure VatEuReversionName(): Text[100]
    begin
        exit(VatEuReversionTok);
    end;

    procedure DeferredProfitTax(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeferredProfitTaxName()));
    end;

    procedure DeferredProfitTaxName(): Text[100]
    begin
        exit(DeferredProfitTaxTok);
    end;

    procedure ChargSprOverSevPeriods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChargSprOverSevPeriodsName()));
    end;

    procedure ChargSprOverSevPeriodsName(): Text[100]
    begin
        exit(ChargSprOverSevPeriodsTok);
    end;

    procedure Prepayments(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PrepaymentsName()));
    end;

    procedure PrepaymentsName(): Text[100]
    begin
        exit(PrepaymentsTok);
    end;

    procedure UnearnedIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(UnearnedIncomeName()));
    end;

    procedure UnearnedIncomeName(): Text[100]
    begin
        exit(UnearnedIncomeTok);
    end;

    procedure DetCreditValAndStVend(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetCreditValAndStVendName()));
    end;

    procedure DetCreditValAndStVendName(): Text[100]
    begin
        exit(DetCreditValAndStVendTok);
    end;

    procedure DetCreditValTradeOper(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetCreditValTradeOperName()));
    end;

    procedure DetCreditValTradeOperName(): Text[100]
    begin
        exit(DetCreditValTradeOperTok);
    end;

    procedure DetCreditValTradeOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetCreditValTradeOVinName()));
    end;

    procedure DetCreditValTradeOVinName(): Text[100]
    begin
        exit(DetCreditValTradeOVinTok);
    end;

    procedure DetCreditValTradeOG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetCreditValTradeOGName()));
    end;

    procedure DetCreditValTradeOGName(): Text[100]
    begin
        exit(DetCreditValTradeOGTok);
    end;

    procedure DetCreditValTradeOA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetCreditValTradeOAName()));
    end;

    procedure DetCreditValTradeOAName(): Text[100]
    begin
        exit(DetCreditValTradeOATok);
    end;

    procedure DetCreditValTradeOOv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetCreditValTradeOOvName()));
    end;

    procedure DetCreditValTradeOOvName(): Text[100]
    begin
        exit(DetCreditValTradeOOvTok);
    end;

    procedure ProvForTradeTransactLiabilities(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForTradeTransactLiabilitiesName()));
    end;

    procedure ProvForTradeTransactLiabilitiesName(): Text[100]
    begin
        exit(ProvForTradeTransactLiabilitiesTok);
    end;

    procedure ProvForBurdensomeContracts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForBurdensomeContractsName()));
    end;

    procedure ProvForBurdensomeContractsName(): Text[100]
    begin
        exit(ProvForBurdensomeContractsTok);
    end;

    procedure ProvForOtherTradeTransact(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForOtherTradeTransactName()));
    end;

    procedure ProvForOtherTradeTransactName(): Text[100]
    begin
        exit(ProvForOtherTradeTransactTok);
    end;

    procedure FinancialAccounts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinancialAccountsName()));
    end;

    procedure FinancialAccountsName(): Text[100]
    begin
        exit(FinancialAccountsTok);
    end;

    procedure ShortTermInvestments(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermInvestmentsName()));
    end;

    procedure ShortTermInvestmentsName(): Text[100]
    begin
        exit(ShortTermInvestmentsTok);
    end;

    procedure ShortTermDebentLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermDebentLoansName()));
    end;

    procedure ShortTermDebentLoansName(): Text[100]
    begin
        exit(ShortTermDebentLoansTok);
    end;

    procedure TreasureBills(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TreasureBillsName()));
    end;

    procedure TreasureBillsName(): Text[100]
    begin
        exit(TreasureBillsTok);
    end;

    procedure ConvertibleDebentLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ConvertibleDebentLoansName()));
    end;

    procedure ConvertibleDebentLoansName(): Text[100]
    begin
        exit(ConvertibleDebentLoansTok);
    end;

    procedure StSharesLiability(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StSharesLiabilityName()));
    end;

    procedure StSharesLiabilityName(): Text[100]
    begin
        exit(StSharesLiabilityTok);
    end;

    procedure DebtsAsMarketableSec(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtsAsMarketableSecName()));
    end;

    procedure DebtsAsMarketableSecName(): Text[100]
    begin
        exit(DebtsAsMarketableSecTok);
    end;

    procedure BorrowingsInterests(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BorrowingsInterestsName()));
    end;

    procedure BorrowingsInterestsName(): Text[100]
    begin
        exit(BorrowingsInterestsTok);
    end;

    procedure DividendsLiability(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividendsLiabilityName()));
    end;

    procedure DividendsLiabilityName(): Text[100]
    begin
        exit(DividendsLiabilityTok);
    end;

    procedure DeprMarketableSec(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprMarketableSecName()));
    end;

    procedure DeprMarketableSecName(): Text[100]
    begin
        exit(DeprMarketableSecTok);
    end;

    procedure DeprOblAndDebLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprOblAndDebLoansName()));
    end;

    procedure DeprOblAndDebLoansName(): Text[100]
    begin
        exit(DeprOblAndDebLoansTok);
    end;

    procedure DeprConverOblAndDebL(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprConverOblAndDebLName()));
    end;

    procedure DeprConverOblAndDebLName(): Text[100]
    begin
        exit(DeprConverOblAndDebLTok);
    end;

    procedure DeprOtherMarketableSec(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprOtherMarketableSecName()));
    end;

    procedure DeprOtherMarketableSecName(): Text[100]
    begin
        exit(DeprOtherMarketableSecTok);
    end;

    procedure ShortTermDebtsWithVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermDebtsWithVincName()));
    end;

    procedure ShortTermDebtsWithVincName(): Text[100]
    begin
        exit(ShortTermDebtsWithVincTok);
    end;

    procedure StDebtsVincFinInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StDebtsVincFinInstName()));
    end;

    procedure StDebtsVincFinInstName(): Text[100]
    begin
        exit(StDebtsVincFinInstTok);
    end;

    procedure LoansFromFinInstitG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LoansFromFinInstitGName()));
    end;

    procedure LoansFromFinInstitGName(): Text[100]
    begin
        exit(LoansFromFinInstitGTok);
    end;

    procedure LoansFromFinInstitA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LoansFromFinInstitAName()));
    end;

    procedure LoansFromFinInstitAName(): Text[100]
    begin
        exit(LoansFromFinInstitATok);
    end;

    procedure LoansFromFinInstitOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LoansFromFinInstitOthName()));
    end;

    procedure LoansFromFinInstitOthName(): Text[100]
    begin
        exit(LoansFromFinInstitOthTok);
    end;

    procedure FixedAssetCredVincC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FixedAssetCredVincCName()));
    end;

    procedure FixedAssetCredVincCName(): Text[100]
    begin
        exit(FixedAssetCredVincCTok);
    end;

    procedure FixedAssetCredG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FixedAssetCredGName()));
    end;

    procedure FixedAssetCredGName(): Text[100]
    begin
        exit(FixedAssetCredGTok);
    end;

    procedure FixedAssetCreditorsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FixedAssetCreditorsAName()));
    end;

    procedure FixedAssetCreditorsAName(): Text[100]
    begin
        exit(FixedAssetCreditorsATok);
    end;

    procedure FixedAssetsCredOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FixedAssetsCredOthName()));
    end;

    procedure FixedAssetsCredOthName(): Text[100]
    begin
        exit(FixedAssetsCredOthTok);
    end;

    procedure StFinLeaseCredVincC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFinLeaseCredVincCName()));
    end;

    procedure StFinLeaseCredVincCName(): Text[100]
    begin
        exit(StFinLeaseCredVincCTok);
    end;

    procedure StFinLeaseCredG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFinLeaseCredGName()));
    end;

    procedure StFinLeaseCredGName(): Text[100]
    begin
        exit(StFinLeaseCredGTok);
    end;

    procedure StFinLeaseCredA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFinLeaseCredAName()));
    end;

    procedure StFinLeaseCredAName(): Text[100]
    begin
        exit(StFinLeaseCredATok);
    end;

    procedure StFinLeaseCredOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFinLeaseCredOthName()));
    end;

    procedure StFinLeaseCredOthName(): Text[100]
    begin
        exit(StFinLeaseCredOthTok);
    end;

    procedure OtherStDebtsVincC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherStDebtsVincCName()));
    end;

    procedure OtherStDebtsVincCName(): Text[100]
    begin
        exit(OtherStDebtsVincCTok);
    end;

    procedure ShortTermDebtsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermDebtsGName()));
    end;

    procedure ShortTermDebtsGName(): Text[100]
    begin
        exit(ShortTermDebtsGTok);
    end;

    procedure ShortTermDebtsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermDebtsAName()));
    end;

    procedure ShortTermDebtsAName(): Text[100]
    begin
        exit(ShortTermDebtsATok);
    end;

    procedure ShortTermDebtsOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermDebtsOthName()));
    end;

    procedure ShortTermDebtsOthName(): Text[100]
    begin
        exit(ShortTermDebtsOthTok);
    end;

    procedure StDebtInterestsVincC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StDebtInterestsVincCName()));
    end;

    procedure StDebtInterestsVincCName(): Text[100]
    begin
        exit(StDebtInterestsVincCTok);
    end;

    procedure DebtInterestsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtInterestsGName()));
    end;

    procedure DebtInterestsGName(): Text[100]
    begin
        exit(DebtInterestsGTok);
    end;

    procedure DebtInterestsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtInterestsAName()));
    end;

    procedure DebtInterestsAName(): Text[100]
    begin
        exit(DebtInterestsATok);
    end;

    procedure DebtInterestsOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtInterestsOthName()));
    end;

    procedure DebtInterestsOthName(): Text[100]
    begin
        exit(DebtInterestsOthTok);
    end;

    procedure StLoansDebt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoansDebtName()));
    end;

    procedure StLoansDebtName(): Text[100]
    begin
        exit(StLoansDebtTok);
    end;

    procedure StLoansFromFinInstitutHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoansFromFinInstitutHeadingName()));
    end;

    procedure StLoansFromFinInstitutHeadingName(): Text[100]
    begin
        exit(StLoansFromFinInstitutHeadingTok);
    end;

    procedure StLoansFromFinInstitut(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoansFromFinInstitutName()));
    end;

    procedure StLoansFromFinInstitutName(): Text[100]
    begin
        exit(StLoansFromFinInstitutTok);
    end;

    procedure ShortTermLoansPosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermLoansPostingName()));
    end;

    procedure ShortTermLoansPostingName(): Text[100]
    begin
        exit(ShortTermLoansPostingTok);
    end;

    procedure StDebtsForCredits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StDebtsForCreditsName()));
    end;

    procedure StDebtsForCreditsName(): Text[100]
    begin
        exit(StDebtsForCreditsTok);
    end;

    procedure DebtOnDiscountedBillsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtOnDiscountedBillsHeadingName()));
    end;

    procedure DebtOnDiscountedBillsHeadingName(): Text[100]
    begin
        exit(DebtOnDiscountedBillsHeadingTok);
    end;

    procedure DebtOnDiscountedBills(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtOnDiscountedBillsName()));
    end;

    procedure DebtOnDiscountedBillsName(): Text[100]
    begin
        exit(DebtOnDiscountedBillsTok);
    end;

    procedure DiscInvoiceDebtAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscInvoiceDebtAccName()));
    end;

    procedure DiscInvoiceDebtAccName(): Text[100]
    begin
        exit(DiscInvoiceDebtAccTok);
    end;

    procedure FactoringOpDebtAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FactoringOpDebtAccName()));
    end;

    procedure FactoringOpDebtAccName(): Text[100]
    begin
        exit(FactoringOpDebtAccTok);
    end;

    procedure ShortTermLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermLoansName()));
    end;

    procedure ShortTermLoansName(): Text[100]
    begin
        exit(ShortTermLoansTok);
    end;

    procedure DebtInSubvAndLeg(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtInSubvAndLegName()));
    end;

    procedure DebtInSubvAndLegName(): Text[100]
    begin
        exit(DebtInSubvAndLegTok);
    end;

    procedure StFixedAssetCreditors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFixedAssetCreditorsName()));
    end;

    procedure StFixedAssetCreditorsName(): Text[100]
    begin
        exit(StFixedAssetCreditorsTok);
    end;

    procedure StFinLeaseCreditors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFinLeaseCreditorsName()));
    end;

    procedure StFinLeaseCreditorsName(): Text[100]
    begin
        exit(StFinLeaseCreditorsTok);
    end;

    procedure StBillOfExchPay(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StBillOfExchPayName()));
    end;

    procedure StBillOfExchPayName(): Text[100]
    begin
        exit(StBillOfExchPayTok);
    end;

    procedure ActiveDividendToPay(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ActiveDividendToPayName()));
    end;

    procedure ActiveDividendToPayName(): Text[100]
    begin
        exit(ActiveDividendToPayTok);
    end;

    procedure ShortTermDebtIntCredInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermDebtIntCredInstName()));
    end;

    procedure ShortTermDebtIntCredInstName(): Text[100]
    begin
        exit(ShortTermDebtIntCredInstTok);
    end;

    procedure ShortTermDebtInterest(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermDebtInterestName()));
    end;

    procedure ShortTermDebtInterestName(): Text[100]
    begin
        exit(ShortTermDebtInterestTok);
    end;

    procedure ShortTermProvisions(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermProvisionsName()));
    end;

    procedure ShortTermProvisionsName(): Text[100]
    begin
        exit(ShortTermProvisionsTok);
    end;

    procedure ProvisionForPensionsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionForPensionsHeadingName()));
    end;

    procedure ProvisionForPensionsHeadingName(): Text[100]
    begin
        exit(ProvisionForPensionsHeadingTok);
    end;

    procedure TaxationReserveHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TaxationReserveHeadingName()));
    end;

    procedure TaxationReserveHeadingName(): Text[100]
    begin
        exit(TaxationReserveHeadingTok);
    end;

    procedure ProvisionForResponsibilitiesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionForResponsibilitiesHeadingName()));
    end;

    procedure ProvisionForResponsibilitiesHeadingName(): Text[100]
    begin
        exit(ProvisionForResponsibilitiesHeadingTok);
    end;

    procedure ProvisionForFaDismantle(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionForFaDismantleName()));
    end;

    procedure ProvisionForFaDismantleName(): Text[100]
    begin
        exit(ProvisionForFaDismantleTok);
    end;

    procedure ProvForEnvironmentalActHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForEnvironmentalActHeadingName()));
    end;

    procedure ProvForEnvironmentalActHeadingName(): Text[100]
    begin
        exit(ProvForEnvironmentalActHeadingTok);
    end;

    procedure ProvForRestructuring(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForRestructuringName()));
    end;

    procedure ProvForRestructuringName(): Text[100]
    begin
        exit(ProvForRestructuringTok);
    end;

    procedure ProvForPaymLiabInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForPaymLiabInstName()));
    end;

    procedure ProvForPaymLiabInstName(): Text[100]
    begin
        exit(ProvForPaymLiabInstTok);
    end;

    procedure GroupAssocFinInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GroupAssocFinInvestmName()));
    end;

    procedure GroupAssocFinInvestmName(): Text[100]
    begin
        exit(GroupAssocFinInvestmTok);
    end;

    procedure StTradeInvestmVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StTradeInvestmVincName()));
    end;

    procedure StTradeInvestmVincName(): Text[100]
    begin
        exit(StTradeInvestmVincTok);
    end;

    procedure StTradeInvestmG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StTradeInvestmGName()));
    end;

    procedure StTradeInvestmGName(): Text[100]
    begin
        exit(StTradeInvestmGTok);
    end;

    procedure StTradeInvestmA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StTradeInvestmAName()));
    end;

    procedure StTradeInvestmAName(): Text[100]
    begin
        exit(StTradeInvestmATok);
    end;

    procedure StTradeInvestmOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StTradeInvestmOthName()));
    end;

    procedure StTradeInvestmOthName(): Text[100]
    begin
        exit(StTradeInvestmOthTok);
    end;

    procedure StFixedIncomeSecVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFixedIncomeSecVincName()));
    end;

    procedure StFixedIncomeSecVincName(): Text[100]
    begin
        exit(StFixedIncomeSecVincTok);
    end;

    procedure StFixedIncomeSecG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFixedIncomeSecGName()));
    end;

    procedure StFixedIncomeSecGName(): Text[100]
    begin
        exit(StFixedIncomeSecGTok);
    end;

    procedure StFixedIncomeSecA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFixedIncomeSecAName()));
    end;

    procedure StFixedIncomeSecAName(): Text[100]
    begin
        exit(StFixedIncomeSecATok);
    end;

    procedure StFixedIncomeSecOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFixedIncomeSecOthName()));
    end;

    procedure StFixedIncomeSecOthName(): Text[100]
    begin
        exit(StFixedIncomeSecOthTok);
    end;

    procedure StLoansToVincComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoansToVincCompName()));
    end;

    procedure StLoansToVincCompName(): Text[100]
    begin
        exit(StLoansToVincCompTok);
    end;

    procedure StLoansToGroupC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoansToGroupCName()));
    end;

    procedure StLoansToGroupCName(): Text[100]
    begin
        exit(StLoansToGroupCTok);
    end;

    procedure StLoansToAComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoansToACompName()));
    end;

    procedure StLoansToACompName(): Text[100]
    begin
        exit(StLoansToACompTok);
    end;

    procedure StLoansToOtherVincC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoansToOtherVincCName()));
    end;

    procedure StLoansToOtherVincCName(): Text[100]
    begin
        exit(StLoansToOtherVincCTok);
    end;

    procedure FinInvestmInterestVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinInvestmInterestVincName()));
    end;

    procedure FinInvestmInterestVincName(): Text[100]
    begin
        exit(FinInvestmInterestVincTok);
    end;

    procedure FinInvestmInterestG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinInvestmInterestGName()));
    end;

    procedure FinInvestmInterestGName(): Text[100]
    begin
        exit(FinInvestmInterestGTok);
    end;

    procedure FinInvestmInterestsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinInvestmInterestsAName()));
    end;

    procedure FinInvestmInterestsAName(): Text[100]
    begin
        exit(FinInvestmInterestsATok);
    end;

    procedure FinInvestmInterestsOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinInvestmInterestsOthName()));
    end;

    procedure FinInvestmInterestsOthName(): Text[100]
    begin
        exit(FinInvestmInterestsOthTok);
    end;

    procedure StInterestCreditsToVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StInterestCreditsToVincName()));
    end;

    procedure StInterestCreditsToVincName(): Text[100]
    begin
        exit(StInterestCreditsToVincTok);
    end;

    procedure StInterestCreditsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StInterestCreditsGName()));
    end;

    procedure StInterestCreditsGName(): Text[100]
    begin
        exit(StInterestCreditsGTok);
    end;

    procedure StInterestCreditsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StInterestCreditsAName()));
    end;

    procedure StInterestCreditsAName(): Text[100]
    begin
        exit(StInterestCreditsATok);
    end;

    procedure StInterestCreditsOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StInterestCreditsOthName()));
    end;

    procedure StInterestCreditsOthName(): Text[100]
    begin
        exit(StInterestCreditsOthTok);
    end;

    procedure DividReceivFinInvInVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividReceivFinInvInVincName()));
    end;

    procedure DividReceivFinInvInVincName(): Text[100]
    begin
        exit(DividReceivFinInvInVincTok);
    end;

    procedure DividReceivFinInvG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividReceivFinInvGName()));
    end;

    procedure DividReceivFinInvGName(): Text[100]
    begin
        exit(DividReceivFinInvGTok);
    end;

    procedure DividReceivFinInvA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividReceivFinInvAName()));
    end;

    procedure DividReceivFinInvAName(): Text[100]
    begin
        exit(DividReceivFinInvATok);
    end;

    procedure DividReceivFinInvOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividReceivFinInvOthName()));
    end;

    procedure DividReceivFinInvOthName(): Text[100]
    begin
        exit(DividReceivFinInvOthTok);
    end;

    procedure StDemandExpendEqVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StDemandExpendEqVincName()));
    end;

    procedure StDemandExpendEqVincName(): Text[100]
    begin
        exit(StDemandExpendEqVincTok);
    end;

    procedure StDemandExpendEqG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StDemandExpendEqGName()));
    end;

    procedure StDemandExpendEqGName(): Text[100]
    begin
        exit(StDemandExpendEqGTok);
    end;

    procedure StDemandExpendEqA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StDemandExpendEqAName()));
    end;

    procedure StDemandExpendEqAName(): Text[100]
    begin
        exit(StDemandExpendEqATok);
    end;

    procedure StDemandExpendEqOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StDemandExpendEqOthName()));
    end;

    procedure StDemandExpendEqOthName(): Text[100]
    begin
        exit(StDemandExpendEqOthTok);
    end;

    procedure InterimFinancialInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InterimFinancialInvestmName()));
    end;

    procedure InterimFinancialInvestmName(): Text[100]
    begin
        exit(InterimFinancialInvestmTok);
    end;

    procedure InvestmentsInCapitalInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InvestmentsInCapitalInstName()));
    end;

    procedure InvestmentsInCapitalInstName(): Text[100]
    begin
        exit(InvestmentsInCapitalInstTok);
    end;

    procedure StFixedIncomeSecurity(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFixedIncomeSecurityName()));
    end;

    procedure StFixedIncomeSecurityName(): Text[100]
    begin
        exit(StFixedIncomeSecurityTok);
    end;

    procedure StFixedIncomeInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFixedIncomeInvestmName()));
    end;

    procedure StFixedIncomeInvestmName(): Text[100]
    begin
        exit(StFixedIncomeInvestmTok);
    end;

    procedure ShortTermLoansHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermLoansHeadingName()));
    end;

    procedure ShortTermLoansHeadingName(): Text[100]
    begin
        exit(ShortTermLoansHeadingTok);
    end;

    procedure StFaTransferenceLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFaTransferenceLoansName()));
    end;

    procedure StFaTransferenceLoansName(): Text[100]
    begin
        exit(StFaTransferenceLoansTok);
    end;

    procedure StaffStCredits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StaffStCreditsName()));
    end;

    procedure StaffStCreditsName(): Text[100]
    begin
        exit(StaffStCreditsTok);
    end;

    procedure DividendsReceivable(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividendsReceivableName()));
    end;

    procedure DividendsReceivableName(): Text[100]
    begin
        exit(DividendsReceivableTok);
    end;

    procedure SecuritiesStInterests(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SecuritiesStInterestsName()));
    end;

    procedure SecuritiesStInterestsName(): Text[100]
    begin
        exit(SecuritiesStInterestsTok);
    end;

    procedure StCreditsInterests(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StCreditsInterestsName()));
    end;

    procedure StCreditsInterestsName(): Text[100]
    begin
        exit(StCreditsInterestsTok);
    end;

    procedure ShortTermTaxations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermTaxationsName()));
    end;

    procedure ShortTermTaxationsName(): Text[100]
    begin
        exit(ShortTermTaxationsTok);
    end;

    procedure StAmtsUncalledOnShares(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StAmtsUncalledOnSharesName()));
    end;

    procedure StAmtsUncalledOnSharesName(): Text[100]
    begin
        exit(StAmtsUncalledOnSharesTok);
    end;

    procedure OtherNonBankAccounts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherNonBankAccountsName()));
    end;

    procedure OtherNonBankAccountsName(): Text[100]
    begin
        exit(OtherNonBankAccountsTok);
    end;

    procedure ProprietorsAccount(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProprietorsAccountName()));
    end;

    procedure ProprietorsAccountName(): Text[100]
    begin
        exit(ProprietorsAccountTok);
    end;

    procedure PartnAdministrCheckingAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnAdministrCheckingAccName()));
    end;

    procedure PartnAdministrCheckingAccName(): Text[100]
    begin
        exit(PartnAdministrCheckingAccTok);
    end;

    procedure OthersCheckingAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OthersCheckingAccName()));
    end;

    procedure OthersCheckingAccName(): Text[100]
    begin
        exit(OthersCheckingAccTok);
    end;

    procedure GroupVincCheckingAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GroupVincCheckingAccName()));
    end;

    procedure GroupVincCheckingAccName(): Text[100]
    begin
        exit(GroupVincCheckingAccTok);
    end;

    procedure AsocVincCheckingAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(AsocVincCheckingAccName()));
    end;

    procedure AsocVincCheckingAccName(): Text[100]
    begin
        exit(AsocVincCheckingAccTok);
    end;

    procedure OthersVincCheckingAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OthersVincCheckingAccName()));
    end;

    procedure OthersVincCheckingAccName(): Text[100]
    begin
        exit(OthersVincCheckingAccTok);
    end;

    procedure MergeAndSplitCheckAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(MergeAndSplitCheckAccName()));
    end;

    procedure MergeAndSplitCheckAccName(): Text[100]
    begin
        exit(MergeAndSplitCheckAccTok);
    end;

    procedure PartnersDissolvedSociety(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnersDissolvedSocietyName()));
    end;

    procedure PartnersDissolvedSocietyName(): Text[100]
    begin
        exit(PartnersDissolvedSocietyTok);
    end;

    procedure PartnersMergeAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnersMergeAccName()));
    end;

    procedure PartnersMergeAccName(): Text[100]
    begin
        exit(PartnersMergeAccTok);
    end;

    procedure PartnersSplitSociety(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnersSplitSocietyName()));
    end;

    procedure PartnersSplitSocietyName(): Text[100]
    begin
        exit(PartnersSplitSocietyTok);
    end;

    procedure PartnersSplitAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnersSplitAccName()));
    end;

    procedure PartnersSplitAccName(): Text[100]
    begin
        exit(PartnersSplitAccTok);
    end;

    procedure TemporaryJoinsChecAcc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TemporaryJoinsChecAccName()));
    end;

    procedure TemporaryJoinsChecAccName(): Text[100]
    begin
        exit(TemporaryJoinsChecAccTok);
    end;

    procedure UnappliedItems(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(UnappliedItemsName()));
    end;

    procedure UnappliedItemsName(): Text[100]
    begin
        exit(UnappliedItemsTok);
    end;

    procedure DemandExpendOnEquity(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DemandExpendOnEquityName()));
    end;

    procedure DemandExpendOnEquityName(): Text[100]
    begin
        exit(DemandExpendOnEquityTok);
    end;

    procedure DemandExpendEqGroup(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DemandExpendEqGroupName()));
    end;

    procedure DemandExpendEqGroupName(): Text[100]
    begin
        exit(DemandExpendEqGroupTok);
    end;

    procedure DemandExpendEqAsoc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DemandExpendEqAsocName()));
    end;

    procedure DemandExpendEqAsocName(): Text[100]
    begin
        exit(DemandExpendEqAsocTok);
    end;

    procedure DemandExpendEqOtVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DemandExpendEqOtVinName()));
    end;

    procedure DemandExpendEqOtVinName(): Text[100]
    begin
        exit(DemandExpendEqOtVinTok);
    end;

    procedure DemandExpendEqOthers(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DemandExpendEqOthersName()));
    end;

    procedure DemandExpendEqOthersName(): Text[100]
    begin
        exit(DemandExpendEqOthersTok);
    end;

    procedure InterimActiveDividends(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InterimActiveDividendsName()));
    end;

    procedure InterimActiveDividendsName(): Text[100]
    begin
        exit(InterimActiveDividendsTok);
    end;

    procedure SharehPaymentCallable(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SharehPaymentCallableName()));
    end;

    procedure SharehPaymentCallableName(): Text[100]
    begin
        exit(SharehPaymentCallableTok);
    end;

    procedure SharehPayCallSharesOrG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SharehPayCallSharesOrGName()));
    end;

    procedure SharehPayCallSharesOrGName(): Text[100]
    begin
        exit(SharehPayCallSharesOrGTok);
    end;

    procedure SharehPayCallFinLiab(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SharehPayCallFinLiabName()));
    end;

    procedure SharehPayCallFinLiabName(): Text[100]
    begin
        exit(SharehPayCallFinLiabTok);
    end;

    procedure DerivativeInstrumentSt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DerivativeInstrumentStName()));
    end;

    procedure DerivativeInstrumentStName(): Text[100]
    begin
        exit(DerivativeInstrumentStTok);
    end;

    procedure StFinDerivAssetsPortfolio(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StFinDerivAssetsPortfolioName()));
    end;

    procedure StFinDerivAssetsPortfolioName(): Text[100]
    begin
        exit(StFinDerivAssetsPortfolioTok);
    end;

    procedure AssetsDerivInstStCovIns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(AssetsDerivInstStCovInsName()));
    end;

    procedure AssetsDerivInstStCovInsName(): Text[100]
    begin
        exit(AssetsDerivInstStCovInsTok);
    end;

    procedure LiabDerivInstStPortfolio(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LiabDerivInstStPortfolioName()));
    end;

    procedure LiabDerivInstStPortfolioName(): Text[100]
    begin
        exit(LiabDerivInstStPortfolioTok);
    end;

    procedure LiabDerivInstStCovIns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LiabDerivInstStCovInsName()));
    end;

    procedure LiabDerivInstStCovInsName(): Text[100]
    begin
        exit(LiabDerivInstStCovInsTok);
    end;

    procedure SecDepositsReceivGuarant(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SecDepositsReceivGuarantName()));
    end;

    procedure SecDepositsReceivGuarantName(): Text[100]
    begin
        exit(SecDepositsReceivGuarantTok);
    end;

    procedure ShortTermGuaranteesReceiv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermGuaranteesReceivName()));
    end;

    procedure ShortTermGuaranteesReceivName(): Text[100]
    begin
        exit(ShortTermGuaranteesReceivTok);
    end;

    procedure ShortTermDepositsReceiv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermDepositsReceivName()));
    end;

    procedure ShortTermDepositsReceivName(): Text[100]
    begin
        exit(ShortTermDepositsReceivTok);
    end;

    procedure ShortTermGuaranteedSec(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermGuaranteedSecName()));
    end;

    procedure ShortTermGuaranteedSecName(): Text[100]
    begin
        exit(ShortTermGuaranteedSecTok);
    end;

    procedure ShortTermGuarantDeposits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ShortTermGuarantDepositsName()));
    end;

    procedure ShortTermGuarantDepositsName(): Text[100]
    begin
        exit(ShortTermGuarantDepositsTok);
    end;

    procedure InterestPaidInAdvance(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InterestPaidInAdvanceName()));
    end;

    procedure InterestPaidInAdvanceName(): Text[100]
    begin
        exit(InterestPaidInAdvanceTok);
    end;

    procedure InterestReceivedInAdvance(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InterestReceivedInAdvanceName()));
    end;

    procedure InterestReceivedInAdvanceName(): Text[100]
    begin
        exit(InterestReceivedInAdvanceTok);
    end;

    procedure FinancialGuaranteesSt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinancialGuaranteesStName()));
    end;

    procedure FinancialGuaranteesStName(): Text[100]
    begin
        exit(FinancialGuaranteesStTok);
    end;

    procedure CashFlow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CashFlowName()));
    end;

    procedure CashFlowName(): Text[100]
    begin
        exit(CashFlowTok);
    end;

    procedure CashEuroHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CashEuroHeadingName()));
    end;

    procedure CashEuroHeadingName(): Text[100]
    begin
        exit(CashEuroHeadingTok);
    end;

    procedure CashEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CashEuroName()));
    end;

    procedure CashEuroName(): Text[100]
    begin
        exit(CashEuroTok);
    end;

    procedure CashForeignCurrency(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CashForeignCurrencyName()));
    end;

    procedure CashForeignCurrencyName(): Text[100]
    begin
        exit(CashForeignCurrencyTok);
    end;

    procedure BanksAccountAtSightEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BanksAccountAtSightEuroName()));
    end;

    procedure BanksAccountAtSightEuroName(): Text[100]
    begin
        exit(BanksAccountAtSightEuroTok);
    end;

    procedure BanksEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BanksEuroName()));
    end;

    procedure BanksEuroName(): Text[100]
    begin
        exit(BanksEuroTok);
    end;

    procedure BanksAccAtSightFCurr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BanksAccAtSightFCurrName()));
    end;

    procedure BanksAccAtSightFCurrName(): Text[100]
    begin
        exit(BanksAccAtSightFCurrTok);
    end;

    procedure BanksForeignCurrency(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BanksForeignCurrencyName()));
    end;

    procedure BanksForeignCurrencyName(): Text[100]
    begin
        exit(BanksForeignCurrencyTok);
    end;

    procedure BanksSavingAccEuro(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BanksSavingAccEuroName()));
    end;

    procedure BanksSavingAccEuroName(): Text[100]
    begin
        exit(BanksSavingAccEuroTok);
    end;

    procedure SavingAccount(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SavingAccountName()));
    end;

    procedure SavingAccountName(): Text[100]
    begin
        exit(SavingAccountTok);
    end;

    procedure BanksSavingAccForCurr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BanksSavingAccForCurrName()));
    end;

    procedure BanksSavingAccForCurrName(): Text[100]
    begin
        exit(BanksSavingAccForCurrTok);
    end;

    procedure HighLiqStInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(HighLiqStInvestmName()));
    end;

    procedure HighLiqStInvestmName(): Text[100]
    begin
        exit(HighLiqStInvestmTok);
    end;

    procedure NonCurrentAssetsForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NonCurrentAssetsForSaleName()));
    end;

    procedure NonCurrentAssetsForSaleName(): Text[100]
    begin
        exit(NonCurrentAssetsForSaleTok);
    end;

    procedure InvestmWithVincComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InvestmWithVincCompName()));
    end;

    procedure InvestmWithVincCompName(): Text[100]
    begin
        exit(InvestmWithVincCompTok);
    end;

    procedure FinancialInvestments(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinancialInvestmentsName()));
    end;

    procedure FinancialInvestmentsName(): Text[100]
    begin
        exit(FinancialInvestmentsTok);
    end;

    procedure InventoryTradeDebtors(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InventoryTradeDebtorsName()));
    end;

    procedure InventoryTradeDebtorsName(): Text[100]
    begin
        exit(InventoryTradeDebtorsTok);
    end;

    procedure OtherAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherAssetsName()));
    end;

    procedure OtherAssetsName(): Text[100]
    begin
        exit(OtherAssetsTok);
    end;

    procedure Provisions(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionsName()));
    end;

    procedure ProvisionsName(): Text[100]
    begin
        exit(ProvisionsTok);
    end;

    procedure SpecialCharactDebts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SpecialCharactDebtsName()));
    end;

    procedure SpecialCharactDebtsName(): Text[100]
    begin
        exit(SpecialCharactDebtsTok);
    end;

    procedure DebtsWithVincComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtsWithVincCompName()));
    end;

    procedure DebtsWithVincCompName(): Text[100]
    begin
        exit(DebtsWithVincCompTok);
    end;

    procedure TradeCreditorsAndOthPay(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TradeCreditorsAndOthPayName()));
    end;

    procedure TradeCreditorsAndOthPayName(): Text[100]
    begin
        exit(TradeCreditorsAndOthPayTok);
    end;

    procedure DetValueFinancialProducts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueFinancialProductsName()));
    end;

    procedure DetValueFinancialProductsName(): Text[100]
    begin
        exit(DetValueFinancialProductsTok);
    end;

    procedure DetValueStPartVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStPartVincName()));
    end;

    procedure DetValueStPartVincName(): Text[100]
    begin
        exit(DetValueStPartVincTok);
    end;

    procedure DetValueStPartG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStPartGName()));
    end;

    procedure DetValueStPartGName(): Text[100]
    begin
        exit(DetValueStPartGTok);
    end;

    procedure DetValueStPartA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStPartAName()));
    end;

    procedure DetValueStPartAName(): Text[100]
    begin
        exit(DetValueStPartATok);
    end;

    procedure DetValueStSecVincC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStSecVincCName()));
    end;

    procedure DetValueStSecVincCName(): Text[100]
    begin
        exit(DetValueStSecVincCTok);
    end;

    procedure DetValueStSecG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStSecGName()));
    end;

    procedure DetValueStSecGName(): Text[100]
    begin
        exit(DetValueStSecGTok);
    end;

    procedure DetValueStSecA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStSecAName()));
    end;

    procedure DetValueStSecAName(): Text[100]
    begin
        exit(DetValueStSecATok);
    end;

    procedure DetValueStSecOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStSecOVinName()));
    end;

    procedure DetValueStSecOVinName(): Text[100]
    begin
        exit(DetValueStSecOVinTok);
    end;

    procedure DetValueStCreditsToVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStCreditsToVincName()));
    end;

    procedure DetValueStCreditsToVincName(): Text[100]
    begin
        exit(DetValueStCreditsToVincTok);
    end;

    procedure DetValueStCreditsToG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStCreditsToGName()));
    end;

    procedure DetValueStCreditsToGName(): Text[100]
    begin
        exit(DetValueStCreditsToGTok);
    end;

    procedure DetValueStCreditsToAs(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStCreditsToAsName()));
    end;

    procedure DetValueStCreditsToAsName(): Text[100]
    begin
        exit(DetValueStCreditsToAsTok);
    end;

    procedure DetValueStCreditsToOtV(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStCreditsToOtVName()));
    end;

    procedure DetValueStCreditsToOtVName(): Text[100]
    begin
        exit(DetValueStCreditsToOtVTok);
    end;

    procedure DetValueStSecurities(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStSecuritiesName()));
    end;

    procedure DetValueStSecuritiesName(): Text[100]
    begin
        exit(DetValueStSecuritiesTok);
    end;

    procedure DetValueStCredits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValueStCreditsName()));
    end;

    procedure DetValueStCreditsName(): Text[100]
    begin
        exit(DetValueStCreditsTok);
    end;

    procedure DetValNoncurrAForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValNoncurrAForSaleName()));
    end;

    procedure DetValNoncurrAForSaleName(): Text[100]
    begin
        exit(DetValNoncurrAForSaleTok);
    end;

    procedure DetValFixNoncAForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValFixNoncAForSaleName()));
    end;

    procedure DetValFixNoncAForSaleName(): Text[100]
    begin
        exit(DetValFixNoncAForSaleTok);
    end;

    procedure DetValRelatedInvesForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValRelatedInvesForSaleName()));
    end;

    procedure DetValRelatedInvesForSaleName(): Text[100]
    begin
        exit(DetValRelatedInvesForSaleTok);
    end;

    procedure DetValFinInvestForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValFinInvestForSaleName()));
    end;

    procedure DetValFinInvestForSaleName(): Text[100]
    begin
        exit(DetValFinInvestForSaleTok);
    end;

    procedure DetValStocksDebtsAndOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValStocksDebtsAndOthName()));
    end;

    procedure DetValStocksDebtsAndOthName(): Text[100]
    begin
        exit(DetValStocksDebtsAndOthTok);
    end;

    procedure DetValOtherAForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetValOtherAForSaleName()));
    end;

    procedure DetValOtherAForSaleName(): Text[100]
    begin
        exit(DetValOtherAForSaleTok);
    end;

    procedure CostAndExpenseAccounts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CostAndExpenseAccountsName()));
    end;

    procedure CostAndExpenseAccountsName(): Text[100]
    begin
        exit(CostAndExpenseAccountsTok);
    end;

    procedure Purchases(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PurchasesName()));
    end;

    procedure PurchasesName(): Text[100]
    begin
        exit(PurchasesTok);
    end;

    procedure PurchasesOfGoodsForResale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PurchasesOfGoodsForResaleName()));
    end;

    procedure PurchasesOfGoodsForResaleName(): Text[100]
    begin
        exit(PurchasesOfGoodsForResaleTok);
    end;

    procedure NationalPurchases(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NationalPurchasesName()));
    end;

    procedure NationalPurchasesName(): Text[100]
    begin
        exit(NationalPurchasesTok);
    end;

    procedure EuPurchases(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(EuPurchasesName()));
    end;

    procedure EuPurchasesName(): Text[100]
    begin
        exit(EuPurchasesTok);
    end;

    procedure IntNonEuPurch(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntNonEuPurchName()));
    end;

    procedure IntNonEuPurchName(): Text[100]
    begin
        exit(IntNonEuPurchTok);
    end;

    procedure PurchForRawMaterials(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PurchForRawMaterialsName()));
    end;

    procedure PurchForRawMaterialsName(): Text[100]
    begin
        exit(PurchForRawMaterialsTok);
    end;

    procedure PurchForNatRawMat(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PurchForNatRawMatName()));
    end;

    procedure PurchForNatRawMatName(): Text[100]
    begin
        exit(PurchForNatRawMatTok);
    end;

    procedure PurchForEuRawMat(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PurchForEuRawMatName()));
    end;

    procedure PurchForEuRawMatName(): Text[100]
    begin
        exit(PurchForEuRawMatTok);
    end;

    procedure PurchIntNonEuRawMat(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PurchIntNonEuRawMatName()));
    end;

    procedure PurchIntNonEuRawMatName(): Text[100]
    begin
        exit(PurchIntNonEuRawMatTok);
    end;

    procedure PurchasesForConsumables(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PurchasesForConsumablesName()));
    end;

    procedure PurchasesForConsumablesName(): Text[100]
    begin
        exit(PurchasesForConsumablesTok);
    end;

    procedure DiscAllowedOnPurch(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowedOnPurchName()));
    end;

    procedure DiscAllowedOnPurchName(): Text[100]
    begin
        exit(DiscAllowedOnPurchTok);
    end;

    procedure DiscAllowOnPurchFinGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurchFinGoodsName()));
    end;

    procedure DiscAllowOnPurchFinGoodsName(): Text[100]
    begin
        exit(DiscAllowOnPurchFinGoodsTok);
    end;

    procedure DiscAllowOnPurFinGoodN(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurFinGoodNName()));
    end;

    procedure DiscAllowOnPurFinGoodNName(): Text[100]
    begin
        exit(DiscAllowOnPurFinGoodNTok);
    end;

    procedure DiscAllowOnPurFinGoodEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurFinGoodEuName()));
    end;

    procedure DiscAllowOnPurFinGoodEuName(): Text[100]
    begin
        exit(DiscAllowOnPurFinGoodEuTok);
    end;

    procedure DiscAllowOnPurFinGoodI(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurFinGoodIName()));
    end;

    procedure DiscAllowOnPurFinGoodIName(): Text[100]
    begin
        exit(DiscAllowOnPurFinGoodITok);
    end;

    procedure DiscAllowOnPurchRawMat(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurchRawMatName()));
    end;

    procedure DiscAllowOnPurchRawMatName(): Text[100]
    begin
        exit(DiscAllowOnPurchRawMatTok);
    end;

    procedure DiscAllowOnPurcRawMatN(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurcRawMatNName()));
    end;

    procedure DiscAllowOnPurcRawMatNName(): Text[100]
    begin
        exit(DiscAllowOnPurcRawMatNTok);
    end;

    procedure DiscAllowOnPurcRawMatEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurcRawMatEuName()));
    end;

    procedure DiscAllowOnPurcRawMatEuName(): Text[100]
    begin
        exit(DiscAllowOnPurcRawMatEuTok);
    end;

    procedure DiscAllowOnPurcRawMatI(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurcRawMatIName()));
    end;

    procedure DiscAllowOnPurcRawMatIName(): Text[100]
    begin
        exit(DiscAllowOnPurcRawMatITok);
    end;

    procedure DiscAllowOnPurchOthers(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurchOthersName()));
    end;

    procedure DiscAllowOnPurchOthersName(): Text[100]
    begin
        exit(DiscAllowOnPurchOthersTok);
    end;

    procedure DiscAllowOnPurcOthersN(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurcOthersNName()));
    end;

    procedure DiscAllowOnPurcOthersNName(): Text[100]
    begin
        exit(DiscAllowOnPurcOthersNTok);
    end;

    procedure DiscAllowOnPurcOthersEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurcOthersEuName()));
    end;

    procedure DiscAllowOnPurcOthersEuName(): Text[100]
    begin
        exit(DiscAllowOnPurcOthersEuTok);
    end;

    procedure DiscAllowOnPurcOthersI(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnPurcOthersIName()));
    end;

    procedure DiscAllowOnPurcOthersIName(): Text[100]
    begin
        exit(DiscAllowOnPurcOthersITok);
    end;

    procedure WorkDoneByOtherComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WorkDoneByOtherCompName()));
    end;

    procedure WorkDoneByOtherCompName(): Text[100]
    begin
        exit(WorkDoneByOtherCompTok);
    end;

    procedure PurchaseReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PurchaseReturnsName()));
    end;

    procedure PurchaseReturnsName(): Text[100]
    begin
        exit(PurchaseReturnsTok);
    end;

    procedure GoodsPurchasedReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsPurchasedReturnsName()));
    end;

    procedure GoodsPurchasedReturnsName(): Text[100]
    begin
        exit(GoodsPurchasedReturnsTok);
    end;

    procedure NationalReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NationalReturnsName()));
    end;

    procedure NationalReturnsName(): Text[100]
    begin
        exit(NationalReturnsTok);
    end;

    procedure EuReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(EuReturnsName()));
    end;

    procedure EuReturnsName(): Text[100]
    begin
        exit(EuReturnsTok);
    end;

    procedure InternationalNonEuRet(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InternationalNonEuRetName()));
    end;

    procedure InternationalNonEuRetName(): Text[100]
    begin
        exit(InternationalNonEuRetTok);
    end;

    procedure MiscellaneousReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(MiscellaneousReturnsName()));
    end;

    procedure MiscellaneousReturnsName(): Text[100]
    begin
        exit(MiscellaneousReturnsTok);
    end;

    procedure RawMatPurchasedReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RawMatPurchasedReturnsName()));
    end;

    procedure RawMatPurchasedReturnsName(): Text[100]
    begin
        exit(RawMatPurchasedReturnsTok);
    end;

    procedure ConsumPurchasedReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ConsumPurchasedReturnsName()));
    end;

    procedure ConsumPurchasedReturnsName(): Text[100]
    begin
        exit(ConsumPurchasedReturnsTok);
    end;

    procedure PurchasesReturnAllow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PurchasesReturnAllowName()));
    end;

    procedure PurchasesReturnAllowName(): Text[100]
    begin
        exit(PurchasesReturnAllowTok);
    end;

    procedure GoodsPurchReturnAllow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsPurchReturnAllowName()));
    end;

    procedure GoodsPurchReturnAllowName(): Text[100]
    begin
        exit(GoodsPurchReturnAllowTok);
    end;

    procedure ReturnAndAllowOnGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ReturnAndAllowOnGoodsName()));
    end;

    procedure ReturnAndAllowOnGoodsName(): Text[100]
    begin
        exit(ReturnAndAllowOnGoodsTok);
    end;

    procedure RawMatPurchRetAllow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RawMatPurchRetAllowName()));
    end;

    procedure RawMatPurchRetAllowName(): Text[100]
    begin
        exit(RawMatPurchRetAllowTok);
    end;

    procedure ReturnAllowOnRawMat(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ReturnAllowOnRawMatName()));
    end;

    procedure ReturnAllowOnRawMatName(): Text[100]
    begin
        exit(ReturnAllowOnRawMatTok);
    end;

    procedure ConsumPurchRetAllow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ConsumPurchRetAllowName()));
    end;

    procedure ConsumPurchRetAllowName(): Text[100]
    begin
        exit(ConsumPurchRetAllowTok);
    end;

    procedure ChangesInStockHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChangesInStockHeadingName()));
    end;

    procedure ChangesInStockHeadingName(): Text[100]
    begin
        exit(ChangesInStockHeadingTok);
    end;

    procedure ChangesInStock(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChangesInStockName()));
    end;

    procedure ChangesInStockName(): Text[100]
    begin
        exit(ChangesInStockTok);
    end;

    procedure ChangesInStockPosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChangesInStockPostingName()));
    end;

    procedure ChangesInStockPostingName(): Text[100]
    begin
        exit(ChangesInStockPostingTok);
    end;

    procedure ChangesInRawMaterialsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChangesInRawMaterialsHeadingName()));
    end;

    procedure ChangesInRawMaterialsHeadingName(): Text[100]
    begin
        exit(ChangesInRawMaterialsHeadingTok);
    end;

    procedure ChangesInRawMaterials(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChangesInRawMaterialsName()));
    end;

    procedure ChangesInRawMaterialsName(): Text[100]
    begin
        exit(ChangesInRawMaterialsTok);
    end;

    procedure ChgInSuppOtherConsum(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChgInSuppOtherConsumName()));
    end;

    procedure ChgInSuppOtherConsumName(): Text[100]
    begin
        exit(ChgInSuppOtherConsumTok);
    end;

    procedure ExternalChargesForServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExternalChargesForServicesName()));
    end;

    procedure ExternalChargesForServicesName(): Text[100]
    begin
        exit(ExternalChargesForServicesTok);
    end;

    procedure ResearchAndDevelopment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ResearchAndDevelopmentName()));
    end;

    procedure ResearchAndDevelopmentName(): Text[100]
    begin
        exit(ResearchAndDevelopmentTok);
    end;

    procedure Projects(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProjectsName()));
    end;

    procedure ProjectsName(): Text[100]
    begin
        exit(ProjectsTok);
    end;

    procedure LeaseAndRoyalties(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LeaseAndRoyaltiesName()));
    end;

    procedure LeaseAndRoyaltiesName(): Text[100]
    begin
        exit(LeaseAndRoyaltiesTok);
    end;

    procedure LeaseChargesPosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LeaseChargesPostingName()));
    end;

    procedure LeaseChargesPostingName(): Text[100]
    begin
        exit(LeaseChargesPostingTok);
    end;

    procedure MaintenancesAndRepairs(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(MaintenancesAndRepairsName()));
    end;

    procedure MaintenancesAndRepairsName(): Text[100]
    begin
        exit(MaintenancesAndRepairsTok);
    end;

    procedure Repairs(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RepairsName()));
    end;

    procedure RepairsName(): Text[100]
    begin
        exit(RepairsTok);
    end;

    procedure ProfessionalServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfessionalServicesName()));
    end;

    procedure ProfessionalServicesName(): Text[100]
    begin
        exit(ProfessionalServicesTok);
    end;

    procedure InternalResources(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InternalResourcesName()));
    end;

    procedure InternalResourcesName(): Text[100]
    begin
        exit(InternalResourcesTok);
    end;

    procedure Consulting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ConsultingName()));
    end;

    procedure ConsultingName(): Text[100]
    begin
        exit(ConsultingTok);
    end;

    procedure ProfessionalAdvisoryServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfessionalAdvisoryServicesName()));
    end;

    procedure ProfessionalAdvisoryServicesName(): Text[100]
    begin
        exit(ProfessionalAdvisoryServicesTok);
    end;

    procedure ProjectCostsRetail(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProjectCostsRetailName()));
    end;

    procedure ProjectCostsRetailName(): Text[100]
    begin
        exit(ProjectCostsRetailTok);
    end;

    procedure ProjectCostsAdjustment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProjectCostsAdjustmentName()));
    end;

    procedure ProjectCostsAdjustmentName(): Text[100]
    begin
        exit(ProjectCostsAdjustmentTok);
    end;

    procedure ProjectCostsRecognized(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProjectCostsRecognizedName()));
    end;

    procedure ProjectCostsRecognizedName(): Text[100]
    begin
        exit(ProjectCostsRecognizedTok);
    end;

    procedure ProjectsCostsRawMaterial(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProjectsCostsRawMaterialName()));
    end;

    procedure ProjectsCostsRawMaterialName(): Text[100]
    begin
        exit(ProjectsCostsRawMaterialTok);
    end;

    procedure ProjectsCostsResources(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProjectsCostsResourcesName()));
    end;

    procedure ProjectsCostsResourcesName(): Text[100]
    begin
        exit(ProjectsCostsResourcesTok);
    end;

    procedure TransportationHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TransportationHeadingName()));
    end;

    procedure TransportationHeadingName(): Text[100]
    begin
        exit(TransportationHeadingTok);
    end;

    procedure Transportation(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TransportationName()));
    end;

    procedure TransportationName(): Text[100]
    begin
        exit(TransportationTok);
    end;

    procedure Fuel(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FuelName()));
    end;

    procedure FuelName(): Text[100]
    begin
        exit(FuelTok);
    end;

    procedure InsurancePremiumsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InsurancePremiumsHeadingName()));
    end;

    procedure InsurancePremiumsHeadingName(): Text[100]
    begin
        exit(InsurancePremiumsHeadingTok);
    end;

    procedure InsurancePremiums(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InsurancePremiumsName()));
    end;

    procedure InsurancePremiumsName(): Text[100]
    begin
        exit(InsurancePremiumsTok);
    end;

    procedure BankingServicesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BankingServicesHeadingName()));
    end;

    procedure BankingServicesHeadingName(): Text[100]
    begin
        exit(BankingServicesHeadingTok);
    end;

    procedure BankingServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BankingServicesName()));
    end;

    procedure BankingServicesName(): Text[100]
    begin
        exit(BankingServicesTok);
    end;

    procedure AdvertisingPublicRelations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(AdvertisingPublicRelationsName()));
    end;

    procedure AdvertisingPublicRelationsName(): Text[100]
    begin
        exit(AdvertisingPublicRelationsTok);
    end;

    procedure Supplies(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SuppliesName()));
    end;

    procedure SuppliesName(): Text[100]
    begin
        exit(SuppliesTok);
    end;

    procedure Electricity(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ElectricityName()));
    end;

    procedure ElectricityName(): Text[100]
    begin
        exit(ElectricityTok);
    end;

    procedure Water(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WaterName()));
    end;

    procedure WaterName(): Text[100]
    begin
        exit(WaterTok);
    end;

    procedure OtherSupplies(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherSuppliesName()));
    end;

    procedure OtherSuppliesName(): Text[100]
    begin
        exit(OtherSuppliesTok);
    end;

    procedure OtherServicesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherServicesHeadingName()));
    end;

    procedure OtherServicesHeadingName(): Text[100]
    begin
        exit(OtherServicesHeadingTok);
    end;

    procedure OtherServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherServicesName()));
    end;

    procedure OtherServicesName(): Text[100]
    begin
        exit(OtherServicesTok);
    end;

    procedure OtherBusinessExpenses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherBusinessExpensesName()));
    end;

    procedure OtherBusinessExpensesName(): Text[100]
    begin
        exit(OtherBusinessExpensesTok);
    end;

    procedure Tax(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TaxName()));
    end;

    procedure TaxName(): Text[100]
    begin
        exit(TaxTok);
    end;

    procedure ProfitTaxHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitTaxHeadingName()));
    end;

    procedure ProfitTaxHeadingName(): Text[100]
    begin
        exit(ProfitTaxHeadingTok);
    end;

    procedure RunningTax(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RunningTaxName()));
    end;

    procedure RunningTaxName(): Text[100]
    begin
        exit(RunningTaxTok);
    end;

    procedure ProfitTax(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitTaxName()));
    end;

    procedure ProfitTaxName(): Text[100]
    begin
        exit(ProfitTaxTok);
    end;

    procedure DeferredTax(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeferredTaxName()));
    end;

    procedure DeferredTaxName(): Text[100]
    begin
        exit(DeferredTaxTok);
    end;

    procedure OtherTaxesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherTaxesHeadingName()));
    end;

    procedure OtherTaxesHeadingName(): Text[100]
    begin
        exit(OtherTaxesHeadingTok);
    end;

    procedure OtherTaxes(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherTaxesName()));
    end;

    procedure OtherTaxesName(): Text[100]
    begin
        exit(OtherTaxesTok);
    end;

    procedure NegativeAdjustmOnProfits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegativeAdjustmOnProfitsName()));
    end;

    procedure NegativeAdjustmOnProfitsName(): Text[100]
    begin
        exit(NegativeAdjustmOnProfitsTok);
    end;

    procedure NegativeAdjustmIndivTax(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegativeAdjustmIndivTaxName()));
    end;

    procedure NegativeAdjustmIndivTaxName(): Text[100]
    begin
        exit(NegativeAdjustmIndivTaxTok);
    end;

    procedure NegativeAdjustmRunningAct(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegativeAdjustmRunningActName()));
    end;

    procedure NegativeAdjustmRunningActName(): Text[100]
    begin
        exit(NegativeAdjustmRunningActTok);
    end;

    procedure NegativeAdjustmInvestTax(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegativeAdjustmInvestTaxName()));
    end;

    procedure NegativeAdjustmInvestTaxName(): Text[100]
    begin
        exit(NegativeAdjustmInvestTaxTok);
    end;

    procedure TaxRefunds(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TaxRefundsName()));
    end;

    procedure TaxRefundsName(): Text[100]
    begin
        exit(TaxRefundsTok);
    end;

    procedure PositiveAdjustmOnProfits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PositiveAdjustmOnProfitsName()));
    end;

    procedure PositiveAdjustmOnProfitsName(): Text[100]
    begin
        exit(PositiveAdjustmOnProfitsTok);
    end;

    procedure PositiveAdjustmIndivTax(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PositiveAdjustmIndivTaxName()));
    end;

    procedure PositiveAdjustmIndivTaxName(): Text[100]
    begin
        exit(PositiveAdjustmIndivTaxTok);
    end;

    procedure PositiveAdjustmRunningAct(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PositiveAdjustmRunningActName()));
    end;

    procedure PositiveAdjustmRunningActName(): Text[100]
    begin
        exit(PositiveAdjustmRunningActTok);
    end;

    procedure PositiveAdjustmInvestTax(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PositiveAdjustmInvestTaxName()));
    end;

    procedure PositiveAdjustmInvestTaxName(): Text[100]
    begin
        exit(PositiveAdjustmInvestTaxTok);
    end;

    procedure WagesAndSalariesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WagesAndSalariesHeadingName()));
    end;

    procedure WagesAndSalariesHeadingName(): Text[100]
    begin
        exit(WagesAndSalariesHeadingTok);
    end;

    procedure WagesAndSalaries(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WagesAndSalariesName()));
    end;

    procedure WagesAndSalariesName(): Text[100]
    begin
        exit(WagesAndSalariesTok);
    end;

    procedure Prizes(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PrizesName()));
    end;

    procedure PrizesName(): Text[100]
    begin
        exit(PrizesTok);
    end;

    procedure PensionFunds(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PensionFundsName()));
    end;

    procedure PensionFundsName(): Text[100]
    begin
        exit(PensionFundsTok);
    end;

    procedure Compensations(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CompensationsName()));
    end;

    procedure CompensationsName(): Text[100]
    begin
        exit(CompensationsTok);
    end;

    procedure SocialSecPaidByCompanyHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SocialSecPaidByCompanyHeadingName()));
    end;

    procedure SocialSecPaidByCompanyHeadingName(): Text[100]
    begin
        exit(SocialSecPaidByCompanyHeadingTok);
    end;

    procedure SocialSecPaidByCompany(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SocialSecPaidByCompanyName()));
    end;

    procedure SocialSecPaidByCompanyName(): Text[100]
    begin
        exit(SocialSecPaidByCompanyTok);
    end;

    procedure LtFeeInFixedContribSist(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtFeeInFixedContribSistName()));
    end;

    procedure LtFeeInFixedContribSistName(): Text[100]
    begin
        exit(LtFeeInFixedContribSistTok);
    end;

    procedure LtFeeInFixedProvisionSis(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtFeeInFixedProvisionSisName()));
    end;

    procedure LtFeeInFixedProvisionSisName(): Text[100]
    begin
        exit(LtFeeInFixedProvisionSisTok);
    end;

    procedure AnnualContributions(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(AnnualContributionsName()));
    end;

    procedure AnnualContributionsName(): Text[100]
    begin
        exit(AnnualContributionsTok);
    end;

    procedure OtherCosts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherCostsName()));
    end;

    procedure OtherCostsName(): Text[100]
    begin
        exit(OtherCostsTok);
    end;

    procedure FeesByEquityProducts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FeesByEquityProductsName()));
    end;

    procedure FeesByEquityProductsName(): Text[100]
    begin
        exit(FeesByEquityProductsTok);
    end;

    procedure PersonnelRetEqProd(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PersonnelRetEqProdName()));
    end;

    procedure PersonnelRetEqProdName(): Text[100]
    begin
        exit(PersonnelRetEqProdTok);
    end;

    procedure PersonnelRetCashEqProd(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PersonnelRetCashEqProdName()));
    end;

    procedure PersonnelRetCashEqProdName(): Text[100]
    begin
        exit(PersonnelRetCashEqProdTok);
    end;

    procedure OtherSocialExpenses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherSocialExpensesName()));
    end;

    procedure OtherSocialExpensesName(): Text[100]
    begin
        exit(OtherSocialExpensesTok);
    end;

    procedure BadDebtLosses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(BadDebtLossesName()));
    end;

    procedure BadDebtLossesName(): Text[100]
    begin
        exit(BadDebtLossesTok);
    end;

    procedure PartnershipsAndOthers(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartnershipsAndOthersName()));
    end;

    procedure PartnershipsAndOthersName(): Text[100]
    begin
        exit(PartnershipsAndOthersTok);
    end;

    procedure TransferredProfitAdmin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TransferredProfitAdminName()));
    end;

    procedure TransferredProfitAdminName(): Text[100]
    begin
        exit(TransferredProfitAdminTok);
    end;

    procedure TransferredLossParticipant(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TransferredLossParticipantName()));
    end;

    procedure TransferredLossParticipantName(): Text[100]
    begin
        exit(TransferredLossParticipantTok);
    end;

    procedure OtherOperatingLosses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherOperatingLossesName()));
    end;

    procedure OtherOperatingLossesName(): Text[100]
    begin
        exit(OtherOperatingLossesTok);
    end;

    procedure FinancialExpenses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinancialExpensesName()));
    end;

    procedure FinancialExpensesName(): Text[100]
    begin
        exit(FinancialExpensesTok);
    end;

    procedure FinExpProvUpdates(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinExpProvUpdatesName()));
    end;

    procedure FinExpProvUpdatesName(): Text[100]
    begin
        exit(FinExpProvUpdatesTok);
    end;

    procedure InterestDebentLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InterestDebentLoansName()));
    end;

    procedure InterestDebentLoansName(): Text[100]
    begin
        exit(InterestDebentLoansTok);
    end;

    procedure LtInterestDebentLoansG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtInterestDebentLoansGName()));
    end;

    procedure LtInterestDebentLoansGName(): Text[100]
    begin
        exit(LtInterestDebentLoansGTok);
    end;

    procedure LtInterestDebentLoansA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtInterestDebentLoansAName()));
    end;

    procedure LtInterestDebentLoansAName(): Text[100]
    begin
        exit(LtInterestDebentLoansATok);
    end;

    procedure LtInterestDebentLoansOv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtInterestDebentLoansOvName()));
    end;

    procedure LtInterestDebentLoansOvName(): Text[100]
    begin
        exit(LtInterestDebentLoansOvTok);
    end;

    procedure LtInterestDebentLoansOt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtInterestDebentLoansOtName()));
    end;

    procedure LtInterestDebentLoansOtName(): Text[100]
    begin
        exit(LtInterestDebentLoansOtTok);
    end;

    procedure StInterestDebentLoansG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StInterestDebentLoansGName()));
    end;

    procedure StInterestDebentLoansGName(): Text[100]
    begin
        exit(StInterestDebentLoansGTok);
    end;

    procedure StInterestDebentLoansA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StInterestDebentLoansAName()));
    end;

    procedure StInterestDebentLoansAName(): Text[100]
    begin
        exit(StInterestDebentLoansATok);
    end;

    procedure StInterestDebentLoansOv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StInterestDebentLoansOvName()));
    end;

    procedure StInterestDebentLoansOvName(): Text[100]
    begin
        exit(StInterestDebentLoansOvTok);
    end;

    procedure StInterestDebentLoansOt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StInterestDebentLoansOtName()));
    end;

    procedure StInterestDebentLoansOtName(): Text[100]
    begin
        exit(StInterestDebentLoansOtTok);
    end;

    procedure DebtInterest(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtInterestName()));
    end;

    procedure DebtInterestName(): Text[100]
    begin
        exit(DebtInterestTok);
    end;

    procedure DebtInterestGroup(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtInterestGroupName()));
    end;

    procedure DebtInterestGroupName(): Text[100]
    begin
        exit(DebtInterestGroupTok);
    end;

    procedure DebtInterestAssoc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtInterestAssocName()));
    end;

    procedure DebtInterestAssocName(): Text[100]
    begin
        exit(DebtInterestAssocTok);
    end;

    procedure DebtInterestOtVinc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtInterestOtVincName()));
    end;

    procedure DebtInterestOtVincName(): Text[100]
    begin
        exit(DebtInterestOtVincTok);
    end;

    procedure DebtInterestFinIns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtInterestFinInsName()));
    end;

    procedure DebtInterestFinInsName(): Text[100]
    begin
        exit(DebtInterestFinInsTok);
    end;

    procedure DebtInterestOther(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DebtInterestOtherName()));
    end;

    procedure DebtInterestOtherName(): Text[100]
    begin
        exit(DebtInterestOtherTok);
    end;

    procedure LossesFinInstValueFV(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesFinInstValueFVName()));
    end;

    procedure LossesFinInstValueFVName(): Text[100]
    begin
        exit(LossesFinInstValueFVTok);
    end;

    procedure PortfolioLosses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PortfolioLossesName()));
    end;

    procedure PortfolioLossesName(): Text[100]
    begin
        exit(PortfolioLossesTok);
    end;

    procedure LossesAssignByComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesAssignByCompName()));
    end;

    procedure LossesAssignByCompName(): Text[100]
    begin
        exit(LossesAssignByCompTok);
    end;

    procedure LossesAvailForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesAvailForSaleName()));
    end;

    procedure LossesAvailForSaleName(): Text[100]
    begin
        exit(LossesAvailForSaleTok);
    end;

    procedure CoverageInstLosses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CoverageInstLossesName()));
    end;

    procedure CoverageInstLossesName(): Text[100]
    begin
        exit(CoverageInstLossesTok);
    end;

    procedure DividendLiability(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividendLiabilityName()));
    end;

    procedure DividendLiabilityName(): Text[100]
    begin
        exit(DividendLiabilityTok);
    end;

    procedure DividendLiabilityG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividendLiabilityGName()));
    end;

    procedure DividendLiabilityGName(): Text[100]
    begin
        exit(DividendLiabilityGTok);
    end;

    procedure DividendLiabilityA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividendLiabilityAName()));
    end;

    procedure DividendLiabilityAName(): Text[100]
    begin
        exit(DividendLiabilityATok);
    end;

    procedure DividendLiabilityOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividendLiabilityOVinName()));
    end;

    procedure DividendLiabilityOVinName(): Text[100]
    begin
        exit(DividendLiabilityOVinTok);
    end;

    procedure DividendLiabilityOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DividendLiabilityOthName()));
    end;

    procedure DividendLiabilityOthName(): Text[100]
    begin
        exit(DividendLiabilityOthTok);
    end;

    procedure InterestOnBillsDisc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InterestOnBillsDiscName()));
    end;

    procedure InterestOnBillsDiscName(): Text[100]
    begin
        exit(InterestOnBillsDiscTok);
    end;

    procedure IntOnBillsDiscFinInsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntOnBillsDiscFinInsGName()));
    end;

    procedure IntOnBillsDiscFinInsGName(): Text[100]
    begin
        exit(IntOnBillsDiscFinInsGTok);
    end;

    procedure IntOnBillsDiscFinInsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntOnBillsDiscFinInsAName()));
    end;

    procedure IntOnBillsDiscFinInsAName(): Text[100]
    begin
        exit(IntOnBillsDiscFinInsATok);
    end;

    procedure IntOnBillsDiscFinInsV(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntOnBillsDiscFinInsVName()));
    end;

    procedure IntOnBillsDiscFinInsVName(): Text[100]
    begin
        exit(IntOnBillsDiscFinInsVTok);
    end;

    procedure InterestOnBillsDiscOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InterestOnBillsDiscOthName()));
    end;

    procedure InterestOnBillsDiscOthName(): Text[100]
    begin
        exit(InterestOnBillsDiscOthTok);
    end;

    procedure InterestOnBillsDiscounted(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InterestOnBillsDiscountedName()));
    end;

    procedure InterestOnBillsDiscountedName(): Text[100]
    begin
        exit(InterestOnBillsDiscountedTok);
    end;

    procedure FactOpInterBanksG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FactOpInterBanksGName()));
    end;

    procedure FactOpInterBanksGName(): Text[100]
    begin
        exit(FactOpInterBanksGTok);
    end;

    procedure FactOpInterBanksA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FactOpInterBanksAName()));
    end;

    procedure FactOpInterBanksAName(): Text[100]
    begin
        exit(FactOpInterBanksATok);
    end;

    procedure FactOpInterBanksV(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FactOpInterBanksVName()));
    end;

    procedure FactOpInterBanksVName(): Text[100]
    begin
        exit(FactOpInterBanksVTok);
    end;

    procedure FactOpInterOtherBanksHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FactOpInterOtherBanksHeadingName()));
    end;

    procedure FactOpInterOtherBanksHeadingName(): Text[100]
    begin
        exit(FactOpInterOtherBanksHeadingTok);
    end;

    procedure FactOpInterOtherBanks(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FactOpInterOtherBanksName()));
    end;

    procedure FactOpInterOtherBanksName(): Text[100]
    begin
        exit(FactOpInterOtherBanksTok);
    end;

    procedure SecuritiesLoss(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SecuritiesLossName()));
    end;

    procedure SecuritiesLossName(): Text[100]
    begin
        exit(SecuritiesLossTok);
    end;

    procedure LtSecuritiesLossG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtSecuritiesLossGName()));
    end;

    procedure LtSecuritiesLossGName(): Text[100]
    begin
        exit(LtSecuritiesLossGTok);
    end;

    procedure LtSecuritiesLossA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtSecuritiesLossAName()));
    end;

    procedure LtSecuritiesLossAName(): Text[100]
    begin
        exit(LtSecuritiesLossATok);
    end;

    procedure LtSecuritiesLossOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtSecuritiesLossOVinName()));
    end;

    procedure LtSecuritiesLossOVinName(): Text[100]
    begin
        exit(LtSecuritiesLossOVinTok);
    end;

    procedure LtSecuritiesLossOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtSecuritiesLossOthName()));
    end;

    procedure LtSecuritiesLossOthName(): Text[100]
    begin
        exit(LtSecuritiesLossOthTok);
    end;

    procedure StSecuritiesLossG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StSecuritiesLossGName()));
    end;

    procedure StSecuritiesLossGName(): Text[100]
    begin
        exit(StSecuritiesLossGTok);
    end;

    procedure StSecuritiesLossA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StSecuritiesLossAName()));
    end;

    procedure StSecuritiesLossAName(): Text[100]
    begin
        exit(StSecuritiesLossATok);
    end;

    procedure StSecuritiesLossOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StSecuritiesLossOVinName()));
    end;

    procedure StSecuritiesLossOVinName(): Text[100]
    begin
        exit(StSecuritiesLossOVinTok);
    end;

    procedure StSecuritiesLossOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StSecuritiesLossOthName()));
    end;

    procedure StSecuritiesLossOthName(): Text[100]
    begin
        exit(StSecuritiesLossOthTok);
    end;

    procedure LoanLoss(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LoanLossName()));
    end;

    procedure LoanLossName(): Text[100]
    begin
        exit(LoanLossTok);
    end;

    procedure LtLoanLossG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtLoanLossGName()));
    end;

    procedure LtLoanLossGName(): Text[100]
    begin
        exit(LtLoanLossGTok);
    end;

    procedure LtLoanLossA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtLoanLossAName()));
    end;

    procedure LtLoanLossAName(): Text[100]
    begin
        exit(LtLoanLossATok);
    end;

    procedure LtLoanLossOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtLoanLossOVinName()));
    end;

    procedure LtLoanLossOVinName(): Text[100]
    begin
        exit(LtLoanLossOVinTok);
    end;

    procedure LtLoanLossOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtLoanLossOthName()));
    end;

    procedure LtLoanLossOthName(): Text[100]
    begin
        exit(LtLoanLossOthTok);
    end;

    procedure StLoanLossG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoanLossGName()));
    end;

    procedure StLoanLossGName(): Text[100]
    begin
        exit(StLoanLossGTok);
    end;

    procedure StLoanLossA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoanLossAName()));
    end;

    procedure StLoanLossAName(): Text[100]
    begin
        exit(StLoanLossATok);
    end;

    procedure StLoanLossOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoanLossOVinName()));
    end;

    procedure StLoanLossOVinName(): Text[100]
    begin
        exit(StLoanLossOVinTok);
    end;

    procedure StLoanLossOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(StLoanLossOthName()));
    end;

    procedure StLoanLossOthName(): Text[100]
    begin
        exit(StLoanLossOthTok);
    end;

    procedure RealizedLossesOnExchangeHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RealizedLossesOnExchangeHeadingName()));
    end;

    procedure RealizedLossesOnExchangeHeadingName(): Text[100]
    begin
        exit(RealizedLossesOnExchangeHeadingTok);
    end;

    procedure RealLossExchInternEurHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RealLossExchInternEurHeadingName()));
    end;

    procedure RealLossExchInternEurHeadingName(): Text[100]
    begin
        exit(RealLossExchInternEurHeadingTok);
    end;

    procedure RealLossExchInternEur(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RealLossExchInternEurName()));
    end;

    procedure RealLossExchInternEurName(): Text[100]
    begin
        exit(RealLossExchInternEurTok);
    end;

    procedure OtherRealLossesOnExch(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherRealLossesOnExchName()));
    end;

    procedure OtherRealLossesOnExchName(): Text[100]
    begin
        exit(OtherRealLossesOnExchTok);
    end;

    procedure RealizedLossesOnExchange(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RealizedLossesOnExchangeName()));
    end;

    procedure RealizedLossesOnExchangeName(): Text[100]
    begin
        exit(RealizedLossesOnExchangeTok);
    end;

    procedure OtherFinancialExpensesHeadingExpenses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherFinancialExpensesHeadingExpensesName()));
    end;

    procedure OtherFinancialExpensesHeadingExpensesName(): Text[100]
    begin
        exit(OtherFinancialExpensesHeadingExpensesTok);
    end;

    procedure ExpenOnRoundOffEurHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExpenOnRoundOffEurHeadingName()));
    end;

    procedure ExpenOnRoundOffEurHeadingName(): Text[100]
    begin
        exit(ExpenOnRoundOffEurHeadingTok);
    end;

    procedure ExpenOnRoundOffEur(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExpenOnRoundOffEurName()));
    end;

    procedure ExpenOnRoundOffEurName(): Text[100]
    begin
        exit(ExpenOnRoundOffEurTok);
    end;

    procedure NegativeBalanceOnSettl(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegativeBalanceOnSettlName()));
    end;

    procedure NegativeBalanceOnSettlName(): Text[100]
    begin
        exit(NegativeBalanceOnSettlTok);
    end;

    procedure OtherFinancialExpensesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherFinancialExpensesHeadingName()));
    end;

    procedure OtherFinancialExpensesHeadingName(): Text[100]
    begin
        exit(OtherFinancialExpensesHeadingTok);
    end;

    procedure OtherFinancialExpenses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherFinancialExpensesName()));
    end;

    procedure OtherFinancialExpensesName(): Text[100]
    begin
        exit(OtherFinancialExpensesTok);
    end;

    procedure OtherFinExpBillReject(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherFinExpBillRejectName()));
    end;

    procedure OtherFinExpBillRejectName(): Text[100]
    begin
        exit(OtherFinExpBillRejectTok);
    end;

    procedure ExcepExtrItemsExp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExcepExtrItemsExpName()));
    end;

    procedure ExcepExtrItemsExpName(): Text[100]
    begin
        exit(ExcepExtrItemsExpTok);
    end;

    procedure LossOnIntangATransf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossOnIntangATransfName()));
    end;

    procedure LossOnIntangATransfName(): Text[100]
    begin
        exit(LossOnIntangATransfTok);
    end;

    procedure LossOnTangAssetsTransfHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossOnTangAssetsTransfHeadingName()));
    end;

    procedure LossOnTangAssetsTransfHeadingName(): Text[100]
    begin
        exit(LossOnTangAssetsTransfHeadingTok);
    end;

    procedure LossOnTangAssetsTransf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossOnTangAssetsTransfName()));
    end;

    procedure LossOnTangAssetsTransfName(): Text[100]
    begin
        exit(LossOnTangAssetsTransfTok);
    end;

    procedure LossOnPropertiesInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossOnPropertiesInvestmName()));
    end;

    procedure LossOnPropertiesInvestmName(): Text[100]
    begin
        exit(LossOnPropertiesInvestmTok);
    end;

    procedure LossOnLtEqInvestVinC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossOnLtEqInvestVinCName()));
    end;

    procedure LossOnLtEqInvestVinCName(): Text[100]
    begin
        exit(LossOnLtEqInvestVinCTok);
    end;

    procedure LossOnLtEqInvestG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossOnLtEqInvestGName()));
    end;

    procedure LossOnLtEqInvestGName(): Text[100]
    begin
        exit(LossOnLtEqInvestGTok);
    end;

    procedure LossOnLtEqInvestA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossOnLtEqInvestAName()));
    end;

    procedure LossOnLtEqInvestAName(): Text[100]
    begin
        exit(LossOnLtEqInvestATok);
    end;

    procedure LossOnLtEqInvestOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossOnLtEqInvestOVinName()));
    end;

    procedure LossOnLtEqInvestOVinName(): Text[100]
    begin
        exit(LossOnLtEqInvestOVinTok);
    end;

    procedure LossOnDebentLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossOnDebentLoansName()));
    end;

    procedure LossOnDebentLoansName(): Text[100]
    begin
        exit(LossOnDebentLoansTok);
    end;

    procedure DeprecAmortizOfFa(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprecAmortizOfFaName()));
    end;

    procedure DeprecAmortizOfFaName(): Text[100]
    begin
        exit(DeprecAmortizOfFaTok);
    end;

    procedure DeprOfIntangAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprOfIntangAssetsName()));
    end;

    procedure DeprOfIntangAssetsName(): Text[100]
    begin
        exit(DeprOfIntangAssetsTok);
    end;

    procedure DeprOfTangAssetsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprOfTangAssetsHeadingName()));
    end;

    procedure DeprOfTangAssetsHeadingName(): Text[100]
    begin
        exit(DeprOfTangAssetsHeadingTok);
    end;

    procedure DeprOfTangAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprOfTangAssetsName()));
    end;

    procedure DeprOfTangAssetsName(): Text[100]
    begin
        exit(DeprOfTangAssetsTok);
    end;

    procedure DeprOnPropertiesInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeprOnPropertiesInvestmName()));
    end;

    procedure DeprOnPropertiesInvestmName(): Text[100]
    begin
        exit(DeprOnPropertiesInvestmTok);
    end;

    procedure DetLossesAndOthers(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLossesAndOthersName()));
    end;

    procedure DetLossesAndOthersName(): Text[100]
    begin
        exit(DetLossesAndOthersTok);
    end;

    procedure DetLossOnIntangibleA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLossOnIntangibleAName()));
    end;

    procedure DetLossOnIntangibleAName(): Text[100]
    begin
        exit(DetLossOnIntangibleATok);
    end;

    procedure DetLossOnTangibleA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLossOnTangibleAName()));
    end;

    procedure DetLossOnTangibleAName(): Text[100]
    begin
        exit(DetLossOnTangibleATok);
    end;

    procedure DetLossOnPropertiesInvest(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLossOnPropertiesInvestName()));
    end;

    procedure DetLossOnPropertiesInvestName(): Text[100]
    begin
        exit(DetLossOnPropertiesInvestTok);
    end;

    procedure DetLossOnInventory(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLossOnInventoryName()));
    end;

    procedure DetLossOnInventoryName(): Text[100]
    begin
        exit(DetLossOnInventoryTok);
    end;

    procedure DetLossOnFinishAndWip(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLossOnFinishAndWipName()));
    end;

    procedure DetLossOnFinishAndWipName(): Text[100]
    begin
        exit(DetLossOnFinishAndWipTok);
    end;

    procedure DetLossOnGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLossOnGoodsName()));
    end;

    procedure DetLossOnGoodsName(): Text[100]
    begin
        exit(DetLossOnGoodsTok);
    end;

    procedure DetLossOnRawMat(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLossOnRawMatName()));
    end;

    procedure DetLossOnRawMatName(): Text[100]
    begin
        exit(DetLossOnRawMatTok);
    end;

    procedure DetLossOnSupOtCons(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLossOnSupOtConsName()));
    end;

    procedure DetLossOnSupOtConsName(): Text[100]
    begin
        exit(DetLossOnSupOtConsTok);
    end;

    procedure DetLossOnTradeCredits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DetLossOnTradeCreditsName()));
    end;

    procedure DetLossOnTradeCreditsName(): Text[100]
    begin
        exit(DetLossOnTradeCreditsTok);
    end;

    procedure ProvForTradeTransactHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForTradeTransactHeadingName()));
    end;

    procedure ProvForTradeTransactHeadingName(): Text[100]
    begin
        exit(ProvForTradeTransactHeadingTok);
    end;

    procedure OnerousContracts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OnerousContractsName()));
    end;

    procedure OnerousContractsName(): Text[100]
    begin
        exit(OnerousContractsTok);
    end;

    procedure OtherTradeTransact(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherTradeTransactName()));
    end;

    procedure OtherTradeTransactName(): Text[100]
    begin
        exit(OtherTradeTransactTok);
    end;

    procedure LossesDetLtSecurities(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtSecuritiesName()));
    end;

    procedure LossesDetLtSecuritiesName(): Text[100]
    begin
        exit(LossesDetLtSecuritiesTok);
    end;

    procedure LossesDetLtCapitalInstG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtCapitalInstGName()));
    end;

    procedure LossesDetLtCapitalInstGName(): Text[100]
    begin
        exit(LossesDetLtCapitalInstGTok);
    end;

    procedure LossesDetLtCapitalInstA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtCapitalInstAName()));
    end;

    procedure LossesDetLtCapitalInstAName(): Text[100]
    begin
        exit(LossesDetLtCapitalInstATok);
    end;

    procedure LossesDetLtCapitalInsOv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtCapitalInsOvName()));
    end;

    procedure LossesDetLtCapitalInsOvName(): Text[100]
    begin
        exit(LossesDetLtCapitalInsOvTok);
    end;

    procedure LossesDetLtCapitalInsO(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtCapitalInsOName()));
    end;

    procedure LossesDetLtCapitalInsOName(): Text[100]
    begin
        exit(LossesDetLtCapitalInsOTok);
    end;

    procedure LossesDetLtSecG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtSecGName()));
    end;

    procedure LossesDetLtSecGName(): Text[100]
    begin
        exit(LossesDetLtSecGTok);
    end;

    procedure LossesDetLtSecA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtSecAName()));
    end;

    procedure LossesDetLtSecAName(): Text[100]
    begin
        exit(LossesDetLtSecATok);
    end;

    procedure LossesDetLtSecOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtSecOVinName()));
    end;

    procedure LossesDetLtSecOVinName(): Text[100]
    begin
        exit(LossesDetLtSecOVinTok);
    end;

    procedure LossesDetLtSecOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtSecOthName()));
    end;

    procedure LossesDetLtSecOthName(): Text[100]
    begin
        exit(LossesDetLtSecOthTok);
    end;

    procedure LossesDetLtCredits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtCreditsName()));
    end;

    procedure LossesDetLtCreditsName(): Text[100]
    begin
        exit(LossesDetLtCreditsTok);
    end;

    procedure LossesDetLtCreditsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtCreditsGName()));
    end;

    procedure LossesDetLtCreditsGName(): Text[100]
    begin
        exit(LossesDetLtCreditsGTok);
    end;

    procedure LossesDetLtCreditsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtCreditsAName()));
    end;

    procedure LossesDetLtCreditsAName(): Text[100]
    begin
        exit(LossesDetLtCreditsATok);
    end;

    procedure LossesDetLtCreditsOV(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtCreditsOVName()));
    end;

    procedure LossesDetLtCreditsOVName(): Text[100]
    begin
        exit(LossesDetLtCreditsOVTok);
    end;

    procedure LossesDetLtCreditsOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetLtCreditsOthName()));
    end;

    procedure LossesDetLtCreditsOthName(): Text[100]
    begin
        exit(LossesDetLtCreditsOthTok);
    end;

    procedure LossesDetStSecurities(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStSecuritiesName()));
    end;

    procedure LossesDetStSecuritiesName(): Text[100]
    begin
        exit(LossesDetStSecuritiesTok);
    end;

    procedure LossesDetStCapitalInstG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStCapitalInstGName()));
    end;

    procedure LossesDetStCapitalInstGName(): Text[100]
    begin
        exit(LossesDetStCapitalInstGTok);
    end;

    procedure LossesDetStCapitalInstA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStCapitalInstAName()));
    end;

    procedure LossesDetStCapitalInstAName(): Text[100]
    begin
        exit(LossesDetStCapitalInstATok);
    end;

    procedure LossesDetStCapitalInsOv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStCapitalInsOvName()));
    end;

    procedure LossesDetStCapitalInsOvName(): Text[100]
    begin
        exit(LossesDetStCapitalInsOvTok);
    end;

    procedure LossesDetStCapitalInstO(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStCapitalInstOName()));
    end;

    procedure LossesDetStCapitalInstOName(): Text[100]
    begin
        exit(LossesDetStCapitalInstOTok);
    end;

    procedure LossesDetStSecuritiesG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStSecuritiesGName()));
    end;

    procedure LossesDetStSecuritiesGName(): Text[100]
    begin
        exit(LossesDetStSecuritiesGTok);
    end;

    procedure LossesDetStSecuritiesA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStSecuritiesAName()));
    end;

    procedure LossesDetStSecuritiesAName(): Text[100]
    begin
        exit(LossesDetStSecuritiesATok);
    end;

    procedure LossesDetStSecuritiesOv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStSecuritiesOvName()));
    end;

    procedure LossesDetStSecuritiesOvName(): Text[100]
    begin
        exit(LossesDetStSecuritiesOvTok);
    end;

    procedure LossesDetStSecuritiesO(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStSecuritiesOName()));
    end;

    procedure LossesDetStSecuritiesOName(): Text[100]
    begin
        exit(LossesDetStSecuritiesOTok);
    end;

    procedure LossesDetStCredits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStCreditsName()));
    end;

    procedure LossesDetStCreditsName(): Text[100]
    begin
        exit(LossesDetStCreditsTok);
    end;

    procedure LossesDetStCreditsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStCreditsGName()));
    end;

    procedure LossesDetStCreditsGName(): Text[100]
    begin
        exit(LossesDetStCreditsGTok);
    end;

    procedure LossesDetStCreditsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStCreditsAName()));
    end;

    procedure LossesDetStCreditsAName(): Text[100]
    begin
        exit(LossesDetStCreditsATok);
    end;

    procedure LossesDetStCreditsOV(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStCreditsOVName()));
    end;

    procedure LossesDetStCreditsOVName(): Text[100]
    begin
        exit(LossesDetStCreditsOVTok);
    end;

    procedure LossesDetStCreditsOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesDetStCreditsOthName()));
    end;

    procedure LossesDetStCreditsOthName(): Text[100]
    begin
        exit(LossesDetStCreditsOthTok);
    end;

    procedure SalesAndIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SalesAndIncomeName()));
    end;

    procedure SalesAndIncomeName(): Text[100]
    begin
        exit(SalesAndIncomeTok);
    end;

    procedure GoodsSalesServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsSalesServicesName()));
    end;

    procedure GoodsSalesServicesName(): Text[100]
    begin
        exit(GoodsSalesServicesTok);
    end;

    procedure GoodsSalesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsSalesHeadingName()));
    end;

    procedure GoodsSalesHeadingName(): Text[100]
    begin
        exit(GoodsSalesHeadingTok);
    end;

    procedure GoodsSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsSalesName()));
    end;

    procedure GoodsSalesName(): Text[100]
    begin
        exit(GoodsSalesTok);
    end;

    procedure NationalGoodsSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NationalGoodsSalesName()));
    end;

    procedure NationalGoodsSalesName(): Text[100]
    begin
        exit(NationalGoodsSalesTok);
    end;

    procedure GoodsSalesEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsSalesEuName()));
    end;

    procedure GoodsSalesEuName(): Text[100]
    begin
        exit(GoodsSalesEuTok);
    end;

    procedure IntNonEuGoodsSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntNonEuGoodsSalesName()));
    end;

    procedure IntNonEuGoodsSalesName(): Text[100]
    begin
        exit(IntNonEuGoodsSalesTok);
    end;

    procedure RawMaterialsSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RawMaterialsSalesName()));
    end;

    procedure RawMaterialsSalesName(): Text[100]
    begin
        exit(RawMaterialsSalesTok);
    end;

    procedure NationalRawMatSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NationalRawMatSalesName()));
    end;

    procedure NationalRawMatSalesName(): Text[100]
    begin
        exit(NationalRawMatSalesTok);
    end;

    procedure EuRawMaterialsSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(EuRawMaterialsSalesName()));
    end;

    procedure EuRawMaterialsSalesName(): Text[100]
    begin
        exit(EuRawMaterialsSalesTok);
    end;

    procedure IntRawMatSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntRawMatSalesName()));
    end;

    procedure IntRawMatSalesName(): Text[100]
    begin
        exit(IntRawMatSalesTok);
    end;

    procedure FinishedGoodsSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinishedGoodsSalesName()));
    end;

    procedure FinishedGoodsSalesName(): Text[100]
    begin
        exit(FinishedGoodsSalesTok);
    end;

    procedure SemiManufPartsSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SemiManufPartsSalesName()));
    end;

    procedure SemiManufPartsSalesName(): Text[100]
    begin
        exit(SemiManufPartsSalesTok);
    end;

    procedure ByProductsScrapSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ByProductsScrapSalesName()));
    end;

    procedure ByProductsScrapSalesName(): Text[100]
    begin
        exit(ByProductsScrapSalesTok);
    end;

    procedure RetEmpPackSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RetEmpPackSalesName()));
    end;

    procedure RetEmpPackSalesName(): Text[100]
    begin
        exit(RetEmpPackSalesTok);
    end;

    procedure ProvisionOfServicesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionOfServicesHeadingName()));
    end;

    procedure ProvisionOfServicesHeadingName(): Text[100]
    begin
        exit(ProvisionOfServicesHeadingTok);
    end;

    procedure ProvisionOfServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionOfServicesName()));
    end;

    procedure ProvisionOfServicesName(): Text[100]
    begin
        exit(ProvisionOfServicesTok);
    end;

    procedure InternalResourcesPosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InternalResourcesPostingName()));
    end;

    procedure InternalResourcesPostingName(): Text[100]
    begin
        exit(InternalResourcesPostingTok);
    end;

    procedure ProjectsSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProjectsSalesName()));
    end;

    procedure ProjectsSalesName(): Text[100]
    begin
        exit(ProjectsSalesTok);
    end;

    procedure OtherServicesPosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherServicesPostingName()));
    end;

    procedure OtherServicesPostingName(): Text[100]
    begin
        exit(OtherServicesPostingTok);
    end;

    procedure ProjectsSalesAdjustment(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProjectsSalesAdjustmentName()));
    end;

    procedure ProjectsSalesAdjustmentName(): Text[100]
    begin
        exit(ProjectsSalesAdjustmentTok);
    end;

    procedure ProjectsSalesRecognized(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProjectsSalesRecognizedName()));
    end;

    procedure ProjectsSalesRecognizedName(): Text[100]
    begin
        exit(ProjectsSalesRecognizedTok);
    end;

    procedure NationalServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NationalServicesName()));
    end;

    procedure NationalServicesName(): Text[100]
    begin
        exit(NationalServicesTok);
    end;

    procedure EuServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(EuServicesName()));
    end;

    procedure EuServicesName(): Text[100]
    begin
        exit(EuServicesTok);
    end;

    procedure IntServicesNonEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntServicesNonEuName()));
    end;

    procedure IntServicesNonEuName(): Text[100]
    begin
        exit(IntServicesNonEuTok);
    end;

    procedure TotalSaleOfServContracts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TotalSaleOfServContractsName()));
    end;

    procedure TotalSaleOfServContractsName(): Text[100]
    begin
        exit(TotalSaleOfServContractsTok);
    end;

    procedure ServiceContractSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ServiceContractSaleName()));
    end;

    procedure ServiceContractSaleName(): Text[100]
    begin
        exit(ServiceContractSaleTok);
    end;

    procedure SalesOfServiceContracts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SalesOfServiceContractsName()));
    end;

    procedure SalesOfServiceContractsName(): Text[100]
    begin
        exit(SalesOfServiceContractsTok);
    end;

    procedure DiscAllowedOnSales(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowedOnSalesName()));
    end;

    procedure DiscAllowedOnSalesName(): Text[100]
    begin
        exit(DiscAllowedOnSalesTok);
    end;

    procedure DiscAllowedOnSalesGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowedOnSalesGoodsName()));
    end;

    procedure DiscAllowedOnSalesGoodsName(): Text[100]
    begin
        exit(DiscAllowedOnSalesGoodsTok);
    end;

    procedure DiscAllowOnSalesGoodsN(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSalesGoodsNName()));
    end;

    procedure DiscAllowOnSalesGoodsNName(): Text[100]
    begin
        exit(DiscAllowOnSalesGoodsNTok);
    end;

    procedure DiscAllowOnSalesGoodsEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSalesGoodsEuName()));
    end;

    procedure DiscAllowOnSalesGoodsEuName(): Text[100]
    begin
        exit(DiscAllowOnSalesGoodsEuTok);
    end;

    procedure DiscAllowOnSalesGoodsI(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSalesGoodsIName()));
    end;

    procedure DiscAllowOnSalesGoodsIName(): Text[100]
    begin
        exit(DiscAllowOnSalesGoodsITok);
    end;

    procedure DiscAllowOnSalesFinGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSalesFinGoodsName()));
    end;

    procedure DiscAllowOnSalesFinGoodsName(): Text[100]
    begin
        exit(DiscAllowOnSalesFinGoodsTok);
    end;

    procedure DiscAllowOnSalFinGoodsN(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSalFinGoodsNName()));
    end;

    procedure DiscAllowOnSalFinGoodsNName(): Text[100]
    begin
        exit(DiscAllowOnSalFinGoodsNTok);
    end;

    procedure DiscAllowOnSFinGoodsEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSFinGoodsEuName()));
    end;

    procedure DiscAllowOnSFinGoodsEuName(): Text[100]
    begin
        exit(DiscAllowOnSFinGoodsEuTok);
    end;

    procedure DiscAllowOnSFinGoodsI(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSFinGoodsIName()));
    end;

    procedure DiscAllowOnSFinGoodsIName(): Text[100]
    begin
        exit(DiscAllowOnSFinGoodsITok);
    end;

    procedure DiscAllowOnSalesSemiManuf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSalesSemiManufName()));
    end;

    procedure DiscAllowOnSalesSemiManufName(): Text[100]
    begin
        exit(DiscAllowOnSalesSemiManufTok);
    end;

    procedure DiscAllowOnSSemiManufN(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSSemiManufNName()));
    end;

    procedure DiscAllowOnSSemiManufNName(): Text[100]
    begin
        exit(DiscAllowOnSSemiManufNTok);
    end;

    procedure DiscAllowOnSSemiManufEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSSemiManufEuName()));
    end;

    procedure DiscAllowOnSSemiManufEuName(): Text[100]
    begin
        exit(DiscAllowOnSSemiManufEuTok);
    end;

    procedure DiscAllowOnSSemiManufI(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllowOnSSemiManufIName()));
    end;

    procedure DiscAllowOnSSemiManufIName(): Text[100]
    begin
        exit(DiscAllowOnSSemiManufITok);
    end;

    procedure DiscAllOnSalProdScrapRet(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllOnSalProdScrapRetName()));
    end;

    procedure DiscAllOnSalProdScrapRetName(): Text[100]
    begin
        exit(DiscAllOnSalProdScrapRetTok);
    end;

    procedure DiscAllOnSProdScrRetN(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllOnSProdScrRetNName()));
    end;

    procedure DiscAllOnSProdScrRetNName(): Text[100]
    begin
        exit(DiscAllOnSProdScrRetNTok);
    end;

    procedure DiscAllOnSProdScrRetEu(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllOnSProdScrRetEuName()));
    end;

    procedure DiscAllOnSProdScrRetEuName(): Text[100]
    begin
        exit(DiscAllOnSProdScrRetEuTok);
    end;

    procedure DiscAllOnSProdScrRetI(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DiscAllOnSProdScrRetIName()));
    end;

    procedure DiscAllOnSProdScrRetIName(): Text[100]
    begin
        exit(DiscAllOnSProdScrRetITok);
    end;

    procedure SalesReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SalesReturnsName()));
    end;

    procedure SalesReturnsName(): Text[100]
    begin
        exit(SalesReturnsTok);
    end;

    procedure GoodsReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsReturnsName()));
    end;

    procedure GoodsReturnsName(): Text[100]
    begin
        exit(GoodsReturnsTok);
    end;

    procedure NationalReturnsPosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NationalReturnsPostingName()));
    end;

    procedure NationalReturnsPostingName(): Text[100]
    begin
        exit(NationalReturnsPostingTok);
    end;

    procedure EuReturnsPosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(EuReturnsPostingName()));
    end;

    procedure EuReturnsPostingName(): Text[100]
    begin
        exit(EuReturnsPostingTok);
    end;

    procedure IntNonEuReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntNonEuReturnsName()));
    end;

    procedure IntNonEuReturnsName(): Text[100]
    begin
        exit(IntNonEuReturnsTok);
    end;

    procedure FinishedGoodsReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinishedGoodsReturnsName()));
    end;

    procedure FinishedGoodsReturnsName(): Text[100]
    begin
        exit(FinishedGoodsReturnsTok);
    end;

    procedure SemiManufPartsReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SemiManufPartsReturnsName()));
    end;

    procedure SemiManufPartsReturnsName(): Text[100]
    begin
        exit(SemiManufPartsReturnsTok);
    end;

    procedure ByProductsScrapReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ByProductsScrapReturnsName()));
    end;

    procedure ByProductsScrapReturnsName(): Text[100]
    begin
        exit(ByProductsScrapReturnsTok);
    end;

    procedure RetEmpPackReturns(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RetEmpPackReturnsName()));
    end;

    procedure RetEmpPackReturnsName(): Text[100]
    begin
        exit(RetEmpPackReturnsTok);
    end;

    procedure SalesReturnAllow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SalesReturnAllowName()));
    end;

    procedure SalesReturnAllowName(): Text[100]
    begin
        exit(SalesReturnAllowTok);
    end;

    procedure GoodsSalesReturnAllowHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsSalesReturnAllowHeadingName()));
    end;

    procedure GoodsSalesReturnAllowHeadingName(): Text[100]
    begin
        exit(GoodsSalesReturnAllowHeadingTok);
    end;

    procedure GoodsSalesReturnAllow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GoodsSalesReturnAllowName()));
    end;

    procedure GoodsSalesReturnAllowName(): Text[100]
    begin
        exit(GoodsSalesReturnAllowTok);
    end;

    procedure FinishGoodsSalesRetAllow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinishGoodsSalesRetAllowName()));
    end;

    procedure FinishGoodsSalesRetAllowName(): Text[100]
    begin
        exit(FinishGoodsSalesRetAllowTok);
    end;

    procedure SemiManPSalesRetAllow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SemiManPSalesRetAllowName()));
    end;

    procedure SemiManPSalesRetAllowName(): Text[100]
    begin
        exit(SemiManPSalesRetAllowTok);
    end;

    procedure ByProdScrapSalesRetAllow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ByProdScrapSalesRetAllowName()));
    end;

    procedure ByProdScrapSalesRetAllowName(): Text[100]
    begin
        exit(ByProdScrapSalesRetAllowTok);
    end;

    procedure RetEmpPackSalesRetAllow(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RetEmpPackSalesRetAllowName()));
    end;

    procedure RetEmpPackSalesRetAllowName(): Text[100]
    begin
        exit(RetEmpPackSalesRetAllowTok);
    end;

    procedure ChangesInStockIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChangesInStockIncomeName()));
    end;

    procedure ChangesInStockIncomeName(): Text[100]
    begin
        exit(ChangesInStockIncomeTok);
    end;

    procedure ChgsProdPrgManufGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChgsProdPrgManufGoodsName()));
    end;

    procedure ChgsProdPrgManufGoodsName(): Text[100]
    begin
        exit(ChgsProdPrgManufGoodsTok);
    end;

    procedure ChgsInSemiManufParts(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChgsInSemiManufPartsName()));
    end;

    procedure ChgsInSemiManufPartsName(): Text[100]
    begin
        exit(ChgsInSemiManufPartsTok);
    end;

    procedure ChangesInFinishedGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChangesInFinishedGoodsName()));
    end;

    procedure ChangesInFinishedGoodsName(): Text[100]
    begin
        exit(ChangesInFinishedGoodsTok);
    end;

    procedure ChgsInByProdOrScrap(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ChgsInByProdOrScrapName()));
    end;

    procedure ChgsInByProdOrScrapName(): Text[100]
    begin
        exit(ChgsInByProdOrScrapTok);
    end;

    procedure WorksDoneForTheComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WorksDoneForTheCompName()));
    end;

    procedure WorksDoneForTheCompName(): Text[100]
    begin
        exit(WorksDoneForTheCompTok);
    end;

    procedure WorkDoneOnIntangA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WorkDoneOnIntangAName()));
    end;

    procedure WorkDoneOnIntangAName(): Text[100]
    begin
        exit(WorkDoneOnIntangATok);
    end;

    procedure WorkDoneOnTangibleAHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WorkDoneOnTangibleAHeadingName()));
    end;

    procedure WorkDoneOnTangibleAHeadingName(): Text[100]
    begin
        exit(WorkDoneOnTangibleAHeadingTok);
    end;

    procedure WorkDoneOnTangibleA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WorkDoneOnTangibleAName()));
    end;

    procedure WorkDoneOnTangibleAName(): Text[100]
    begin
        exit(WorkDoneOnTangibleATok);
    end;

    procedure WorkDoneOnRealEstateInves(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WorkDoneOnRealEstateInvesName()));
    end;

    procedure WorkDoneOnRealEstateInvesName(): Text[100]
    begin
        exit(WorkDoneOnRealEstateInvesTok);
    end;

    procedure WorkDoneIntgAInProgr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(WorkDoneIntgAInProgrName()));
    end;

    procedure WorkDoneIntgAInProgrName(): Text[100]
    begin
        exit(WorkDoneIntgAInProgrTok);
    end;

    procedure SubvGrantsAndAdj(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SubvGrantsAndAdjName()));
    end;

    procedure SubvGrantsAndAdjName(): Text[100]
    begin
        exit(SubvGrantsAndAdjTok);
    end;

    procedure SubvGrantsAndLegacies(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SubvGrantsAndLegaciesName()));
    end;

    procedure SubvGrantsAndLegaciesName(): Text[100]
    begin
        exit(SubvGrantsAndLegaciesTok);
    end;

    procedure SubvGrantsAndLegResult(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SubvGrantsAndLegResultName()));
    end;

    procedure SubvGrantsAndLegResultName(): Text[100]
    begin
        exit(SubvGrantsAndLegResultTok);
    end;

    procedure OtherSubvGrantsAndLegRes(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherSubvGrantsAndLegResName()));
    end;

    procedure OtherSubvGrantsAndLegResName(): Text[100]
    begin
        exit(OtherSubvGrantsAndLegResTok);
    end;

    procedure OtherOperatingIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherOperatingIncomeName()));
    end;

    procedure OtherOperatingIncomeName(): Text[100]
    begin
        exit(OtherOperatingIncomeTok);
    end;

    procedure JointVenturesResults(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(JointVenturesResultsName()));
    end;

    procedure JointVenturesResultsName(): Text[100]
    begin
        exit(JointVenturesResultsTok);
    end;

    procedure TransferredLossAdmin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TransferredLossAdminName()));
    end;

    procedure TransferredLossAdminName(): Text[100]
    begin
        exit(TransferredLossAdminTok);
    end;

    procedure TransferredProfitParticip(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TransferredProfitParticipName()));
    end;

    procedure TransferredProfitParticipName(): Text[100]
    begin
        exit(TransferredProfitParticipTok);
    end;

    procedure LeaseChargesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LeaseChargesHeadingName()));
    end;

    procedure LeaseChargesHeadingName(): Text[100]
    begin
        exit(LeaseChargesHeadingTok);
    end;

    procedure RoyFConcessLicencTrdmrks(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RoyFConcessLicencTrdmrksName()));
    end;

    procedure RoyFConcessLicencTrdmrksName(): Text[100]
    begin
        exit(RoyFConcessLicencTrdmrksTok);
    end;

    procedure CommissionsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CommissionsHeadingName()));
    end;

    procedure CommissionsHeadingName(): Text[100]
    begin
        exit(CommissionsHeadingTok);
    end;

    procedure Commissions(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CommissionsName()));
    end;

    procedure CommissionsName(): Text[100]
    begin
        exit(CommissionsTok);
    end;

    procedure ServicesDoneToEmployees(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ServicesDoneToEmployeesName()));
    end;

    procedure ServicesDoneToEmployeesName(): Text[100]
    begin
        exit(ServicesDoneToEmployeesTok);
    end;

    procedure MiscellaneousServicesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(MiscellaneousServicesHeadingName()));
    end;

    procedure MiscellaneousServicesHeadingName(): Text[100]
    begin
        exit(MiscellaneousServicesHeadingTok);
    end;

    procedure MiscellaneousServices(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(MiscellaneousServicesName()));
    end;

    procedure MiscellaneousServicesName(): Text[100]
    begin
        exit(MiscellaneousServicesTok);
    end;

    procedure FinancialIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinancialIncomeName()));
    end;

    procedure FinancialIncomeName(): Text[100]
    begin
        exit(FinancialIncomeTok);
    end;

    procedure IncFromEquityInvestm(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromEquityInvestmName()));
    end;

    procedure IncFromEquityInvestmName(): Text[100]
    begin
        exit(IncFromEquityInvestmTok);
    end;

    procedure IncFromEquityInvestmG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromEquityInvestmGName()));
    end;

    procedure IncFromEquityInvestmGName(): Text[100]
    begin
        exit(IncFromEquityInvestmGTok);
    end;

    procedure IncFromEquityInvestmA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromEquityInvestmAName()));
    end;

    procedure IncFromEquityInvestmAName(): Text[100]
    begin
        exit(IncFromEquityInvestmATok);
    end;

    procedure IncFromEquityInvestmOV(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromEquityInvestmOVName()));
    end;

    procedure IncFromEquityInvestmOVName(): Text[100]
    begin
        exit(IncFromEquityInvestmOVTok);
    end;

    procedure IncFromEquityInvestmOt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromEquityInvestmOtName()));
    end;

    procedure IncFromEquityInvestmOtName(): Text[100]
    begin
        exit(IncFromEquityInvestmOtTok);
    end;

    procedure IncDebtSecurities(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncDebtSecuritiesName()));
    end;

    procedure IncDebtSecuritiesName(): Text[100]
    begin
        exit(IncDebtSecuritiesTok);
    end;

    procedure IncDebtSecuritiesG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncDebtSecuritiesGName()));
    end;

    procedure IncDebtSecuritiesGName(): Text[100]
    begin
        exit(IncDebtSecuritiesGTok);
    end;

    procedure IncDebtSecuritiesA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncDebtSecuritiesAName()));
    end;

    procedure IncDebtSecuritiesAName(): Text[100]
    begin
        exit(IncDebtSecuritiesATok);
    end;

    procedure IncDebtSecuritiesOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncDebtSecuritiesOVinName()));
    end;

    procedure IncDebtSecuritiesOVinName(): Text[100]
    begin
        exit(IncDebtSecuritiesOVinTok);
    end;

    procedure IncDebtSecuritiesOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncDebtSecuritiesOthName()));
    end;

    procedure IncDebtSecuritiesOthName(): Text[100]
    begin
        exit(IncDebtSecuritiesOthTok);
    end;

    procedure IncFromLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromLoansName()));
    end;

    procedure IncFromLoansName(): Text[100]
    begin
        exit(IncFromLoansTok);
    end;

    procedure IncFromLtLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromLtLoansName()));
    end;

    procedure IncFromLtLoansName(): Text[100]
    begin
        exit(IncFromLtLoansTok);
    end;

    procedure IncFromLtLoansG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromLtLoansGName()));
    end;

    procedure IncFromLtLoansGName(): Text[100]
    begin
        exit(IncFromLtLoansGTok);
    end;

    procedure IncFromLtLoansA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromLtLoansAName()));
    end;

    procedure IncFromLtLoansAName(): Text[100]
    begin
        exit(IncFromLtLoansATok);
    end;

    procedure IncFromLtLoansOtVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromLtLoansOtVinName()));
    end;

    procedure IncFromLtLoansOtVinName(): Text[100]
    begin
        exit(IncFromLtLoansOtVinTok);
    end;

    procedure IncLtLoansOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncLtLoansOthName()));
    end;

    procedure IncLtLoansOthName(): Text[100]
    begin
        exit(IncLtLoansOthTok);
    end;

    procedure IncomeFromStLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncomeFromStLoansName()));
    end;

    procedure IncomeFromStLoansName(): Text[100]
    begin
        exit(IncomeFromStLoansTok);
    end;

    procedure IncFromStLoansG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromStLoansGName()));
    end;

    procedure IncFromStLoansGName(): Text[100]
    begin
        exit(IncFromStLoansGTok);
    end;

    procedure IncFromStLoansA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromStLoansAName()));
    end;

    procedure IncFromStLoansAName(): Text[100]
    begin
        exit(IncFromStLoansATok);
    end;

    procedure IncFromStLoansOtVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromStLoansOtVinName()));
    end;

    procedure IncFromStLoansOtVinName(): Text[100]
    begin
        exit(IncFromStLoansOtVinTok);
    end;

    procedure IncFromStLoansOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncFromStLoansOthName()));
    end;

    procedure IncFromStLoansOthName(): Text[100]
    begin
        exit(IncFromStLoansOthTok);
    end;

    procedure ProfitFinInstValueFV(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitFinInstValueFVName()));
    end;

    procedure ProfitFinInstValueFVName(): Text[100]
    begin
        exit(ProfitFinInstValueFVTok);
    end;

    procedure ProfitPortfolio(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitPortfolioName()));
    end;

    procedure ProfitPortfolioName(): Text[100]
    begin
        exit(ProfitPortfolioTok);
    end;

    procedure ProfitAssignByComp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitAssignByCompName()));
    end;

    procedure ProfitAssignByCompName(): Text[100]
    begin
        exit(ProfitAssignByCompTok);
    end;

    procedure ProfitAvailForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitAvailForSaleName()));
    end;

    procedure ProfitAvailForSaleName(): Text[100]
    begin
        exit(ProfitAvailForSaleTok);
    end;

    procedure ProfitCoverageInstr(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitCoverageInstrName()));
    end;

    procedure ProfitCoverageInstrName(): Text[100]
    begin
        exit(ProfitCoverageInstrTok);
    end;

    procedure ProfitMarketableSecurities(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitMarketableSecuritiesName()));
    end;

    procedure ProfitMarketableSecuritiesName(): Text[100]
    begin
        exit(ProfitMarketableSecuritiesTok);
    end;

    procedure ProfitMarkSecLtG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitMarkSecLtGName()));
    end;

    procedure ProfitMarkSecLtGName(): Text[100]
    begin
        exit(ProfitMarkSecLtGTok);
    end;

    procedure ProfitMarkSecLtA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitMarkSecLtAName()));
    end;

    procedure ProfitMarkSecLtAName(): Text[100]
    begin
        exit(ProfitMarkSecLtATok);
    end;

    procedure ProfitMarkSecLtOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitMarkSecLtOVinName()));
    end;

    procedure ProfitMarkSecLtOVinName(): Text[100]
    begin
        exit(ProfitMarkSecLtOVinTok);
    end;

    procedure ProfitMarkSecLtO(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitMarkSecLtOName()));
    end;

    procedure ProfitMarkSecLtOName(): Text[100]
    begin
        exit(ProfitMarkSecLtOTok);
    end;

    procedure ProfitMarkSecStG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitMarkSecStGName()));
    end;

    procedure ProfitMarkSecStGName(): Text[100]
    begin
        exit(ProfitMarkSecStGTok);
    end;

    procedure ProfitMarkSecStA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitMarkSecStAName()));
    end;

    procedure ProfitMarkSecStAName(): Text[100]
    begin
        exit(ProfitMarkSecStATok);
    end;

    procedure ProfitMarkSecStOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitMarkSecStOVinName()));
    end;

    procedure ProfitMarkSecStOVinName(): Text[100]
    begin
        exit(ProfitMarkSecStOVinTok);
    end;

    procedure ProfitMarkSecStO(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitMarkSecStOName()));
    end;

    procedure ProfitMarkSecStOName(): Text[100]
    begin
        exit(ProfitMarkSecStOTok);
    end;

    procedure LtIncFaAndReimbR(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtIncFaAndReimbRName()));
    end;

    procedure LtIncFaAndReimbRName(): Text[100]
    begin
        exit(LtIncFaAndReimbRTok);
    end;

    procedure ExchangeGainHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExchangeGainHeadingName()));
    end;

    procedure ExchangeGainHeadingName(): Text[100]
    begin
        exit(ExchangeGainHeadingTok);
    end;

    procedure ExchangeGainInternEurHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExchangeGainInternEurHeadingName()));
    end;

    procedure ExchangeGainInternEurHeadingName(): Text[100]
    begin
        exit(ExchangeGainInternEurHeadingTok);
    end;

    procedure ExchangeGainInternEur(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExchangeGainInternEurName()));
    end;

    procedure ExchangeGainInternEurName(): Text[100]
    begin
        exit(ExchangeGainInternEurTok);
    end;

    procedure OtherExchangeGains(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherExchangeGainsName()));
    end;

    procedure OtherExchangeGainsName(): Text[100]
    begin
        exit(OtherExchangeGainsTok);
    end;

    procedure ExchangeGainPosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExchangeGainPostingName()));
    end;

    procedure ExchangeGainPostingName(): Text[100]
    begin
        exit(ExchangeGainPostingTok);
    end;

    procedure OtherFinancialIncomeHeadingIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherFinancialIncomeHeadingIncomeName()));
    end;

    procedure OtherFinancialIncomeHeadingIncomeName(): Text[100]
    begin
        exit(OtherFinancialIncomeHeadingIncomeTok);
    end;

    procedure IncomeOnRoundOffEurosHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncomeOnRoundOffEurosHeadingName()));
    end;

    procedure IncomeOnRoundOffEurosHeadingName(): Text[100]
    begin
        exit(IncomeOnRoundOffEurosHeadingTok);
    end;

    procedure IncomeOnRoundOffEuros(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncomeOnRoundOffEurosName()));
    end;

    procedure IncomeOnRoundOffEurosName(): Text[100]
    begin
        exit(IncomeOnRoundOffEurosTok);
    end;

    procedure PositiveBalanceOnSettl(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PositiveBalanceOnSettlName()));
    end;

    procedure PositiveBalanceOnSettlName(): Text[100]
    begin
        exit(PositiveBalanceOnSettlTok);
    end;

    procedure OtherFinancialIncomeHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherFinancialIncomeHeadingName()));
    end;

    procedure OtherFinancialIncomeHeadingName(): Text[100]
    begin
        exit(OtherFinancialIncomeHeadingTok);
    end;

    procedure OtherFinancialIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherFinancialIncomeName()));
    end;

    procedure OtherFinancialIncomeName(): Text[100]
    begin
        exit(OtherFinancialIncomeTok);
    end;

    procedure ExcExtraordItemsInc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExcExtraordItemsIncName()));
    end;

    procedure ExcExtraordItemsIncName(): Text[100]
    begin
        exit(ExcExtraordItemsIncTok);
    end;

    procedure IntangibleAssetsProfit(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IntangibleAssetsProfitName()));
    end;

    procedure IntangibleAssetsProfitName(): Text[100]
    begin
        exit(IntangibleAssetsProfitTok);
    end;

    procedure TangibleAssetsProfitHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TangibleAssetsProfitHeadingName()));
    end;

    procedure TangibleAssetsProfitHeadingName(): Text[100]
    begin
        exit(TangibleAssetsProfitHeadingTok);
    end;

    procedure TangibleAssetsProfit(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TangibleAssetsProfitName()));
    end;

    procedure TangibleAssetsProfitName(): Text[100]
    begin
        exit(TangibleAssetsProfitTok);
    end;

    procedure PropertiesInvestmProfit(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PropertiesInvestmProfitName()));
    end;

    procedure PropertiesInvestmProfitName(): Text[100]
    begin
        exit(PropertiesInvestmProfitTok);
    end;

    procedure PrfOnLtEqInvestVinC(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PrfOnLtEqInvestVinCName()));
    end;

    procedure PrfOnLtEqInvestVinCName(): Text[100]
    begin
        exit(PrfOnLtEqInvestVinCTok);
    end;

    procedure PrfOnLtEqInvestG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PrfOnLtEqInvestGName()));
    end;

    procedure PrfOnLtEqInvestGName(): Text[100]
    begin
        exit(PrfOnLtEqInvestGTok);
    end;

    procedure PrfOnLtEqInvestA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PrfOnLtEqInvestAName()));
    end;

    procedure PrfOnLtEqInvestAName(): Text[100]
    begin
        exit(PrfOnLtEqInvestATok);
    end;

    procedure PrfOnLtEqInvestOtVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PrfOnLtEqInvestOtVinName()));
    end;

    procedure PrfOnLtEqInvestOtVinName(): Text[100]
    begin
        exit(PrfOnLtEqInvestOtVinTok);
    end;

    procedure NegDifferencesMergingBuss(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegDifferencesMergingBussName()));
    end;

    procedure NegDifferencesMergingBussName(): Text[100]
    begin
        exit(NegDifferencesMergingBussTok);
    end;

    procedure ProfitOnDebentLoans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitOnDebentLoansName()));
    end;

    procedure ProfitOnDebentLoansName(): Text[100]
    begin
        exit(ProfitOnDebentLoansTok);
    end;

    procedure ProvisionsApplied(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionsAppliedName()));
    end;

    procedure ProvisionsAppliedName(): Text[100]
    begin
        exit(ProvisionsAppliedTok);
    end;

    procedure SurplResrvForIntangA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvForIntangAName()));
    end;

    procedure SurplResrvForIntangAName(): Text[100]
    begin
        exit(SurplResrvForIntangATok);
    end;

    procedure SurplResrvForTangA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvForTangAName()));
    end;

    procedure SurplResrvForTangAName(): Text[100]
    begin
        exit(SurplResrvForTangATok);
    end;

    procedure SurplResrvForPropInvest(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvForPropInvestName()));
    end;

    procedure SurplResrvForPropInvestName(): Text[100]
    begin
        exit(SurplResrvForPropInvestTok);
    end;

    procedure SurplResrvForInventory(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvForInventoryName()));
    end;

    procedure SurplResrvForInventoryName(): Text[100]
    begin
        exit(SurplResrvForInventoryTok);
    end;

    procedure SurplResrvFinishWip(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvFinishWipName()));
    end;

    procedure SurplResrvFinishWipName(): Text[100]
    begin
        exit(SurplResrvFinishWipTok);
    end;

    procedure SurplResrvForGoods(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvForGoodsName()));
    end;

    procedure SurplResrvForGoodsName(): Text[100]
    begin
        exit(SurplResrvForGoodsTok);
    end;

    procedure SurplResrvForRawMat(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvForRawMatName()));
    end;

    procedure SurplResrvForRawMatName(): Text[100]
    begin
        exit(SurplResrvForRawMatTok);
    end;

    procedure SurplResrvForOtherMat(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvForOtherMatName()));
    end;

    procedure SurplResrvForOtherMatName(): Text[100]
    begin
        exit(SurplResrvForOtherMatTok);
    end;

    procedure RevDetTradeCredits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RevDetTradeCreditsName()));
    end;

    procedure RevDetTradeCreditsName(): Text[100]
    begin
        exit(RevDetTradeCreditsTok);
    end;

    procedure ProvisionExcess(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionExcessName()));
    end;

    procedure ProvisionExcessName(): Text[100]
    begin
        exit(ProvisionExcessTok);
    end;

    procedure ProvisionForPensionsIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionForPensionsIncomeName()));
    end;

    procedure ProvisionForPensionsIncomeName(): Text[100]
    begin
        exit(ProvisionForPensionsIncomeTok);
    end;

    procedure TaxationReserveIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(TaxationReserveIncomeName()));
    end;

    procedure TaxationReserveIncomeName(): Text[100]
    begin
        exit(TaxationReserveIncomeTok);
    end;

    procedure ProvisionForOtherRespon(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvisionForOtherResponName()));
    end;

    procedure ProvisionForOtherResponName(): Text[100]
    begin
        exit(ProvisionForOtherResponTok);
    end;

    procedure ProvForTradeTransactIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForTradeTransactIncomeName()));
    end;

    procedure ProvForTradeTransactIncomeName(): Text[100]
    begin
        exit(ProvForTradeTransactIncomeTok);
    end;

    procedure OnerousContractsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OnerousContractsHeadingName()));
    end;

    procedure OnerousContractsHeadingName(): Text[100]
    begin
        exit(OnerousContractsHeadingTok);
    end;

    procedure OtherTradeTransactHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherTradeTransactHeadingName()));
    end;

    procedure OtherTradeTransactHeadingName(): Text[100]
    begin
        exit(OtherTradeTransactHeadingTok);
    end;

    procedure ProvForEnvironmentalActIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForEnvironmentalActIncomeName()));
    end;

    procedure ProvForEnvironmentalActIncomeName(): Text[100]
    begin
        exit(ProvForEnvironmentalActIncomeTok);
    end;

    procedure ProvForRestructuringHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvForRestructuringHeadingName()));
    end;

    procedure ProvForRestructuringHeadingName(): Text[100]
    begin
        exit(ProvForRestructuringHeadingTok);
    end;

    procedure ProvPaymTranCapitalInst(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProvPaymTranCapitalInstName()));
    end;

    procedure ProvPaymTranCapitalInstName(): Text[100]
    begin
        exit(ProvPaymTranCapitalInstTok);
    end;

    procedure SurplProviForLtSec(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplProviForLtSecName()));
    end;

    procedure SurplProviForLtSecName(): Text[100]
    begin
        exit(SurplProviForLtSecTok);
    end;

    procedure SurplResrvLtCapitalInsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtCapitalInsGName()));
    end;

    procedure SurplResrvLtCapitalInsGName(): Text[100]
    begin
        exit(SurplResrvLtCapitalInsGTok);
    end;

    procedure SurplResrvLtCapitalInsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtCapitalInsAName()));
    end;

    procedure SurplResrvLtCapitalInsAName(): Text[100]
    begin
        exit(SurplResrvLtCapitalInsATok);
    end;

    procedure SurplResrLtCapitalInsOv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrLtCapitalInsOvName()));
    end;

    procedure SurplResrLtCapitalInsOvName(): Text[100]
    begin
        exit(SurplResrLtCapitalInsOvTok);
    end;

    procedure SurplResrvLtCapitalInsO(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtCapitalInsOName()));
    end;

    procedure SurplResrvLtCapitalInsOName(): Text[100]
    begin
        exit(SurplResrvLtCapitalInsOTok);
    end;

    procedure SurplResrvLtSecG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtSecGName()));
    end;

    procedure SurplResrvLtSecGName(): Text[100]
    begin
        exit(SurplResrvLtSecGTok);
    end;

    procedure SurplResrvLtSecA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtSecAName()));
    end;

    procedure SurplResrvLtSecAName(): Text[100]
    begin
        exit(SurplResrvLtSecATok);
    end;

    procedure SurplResrvLtSecOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtSecOVinName()));
    end;

    procedure SurplResrvLtSecOVinName(): Text[100]
    begin
        exit(SurplResrvLtSecOVinTok);
    end;

    procedure SurplResrvLtSecOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtSecOthName()));
    end;

    procedure SurplResrvLtSecOthName(): Text[100]
    begin
        exit(SurplResrvLtSecOthTok);
    end;

    procedure SurplResrvLtCredits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtCreditsName()));
    end;

    procedure SurplResrvLtCreditsName(): Text[100]
    begin
        exit(SurplResrvLtCreditsTok);
    end;

    procedure SurplResrvLtCreditsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtCreditsGName()));
    end;

    procedure SurplResrvLtCreditsGName(): Text[100]
    begin
        exit(SurplResrvLtCreditsGTok);
    end;

    procedure SurplResrvLtCreditsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtCreditsAName()));
    end;

    procedure SurplResrvLtCreditsAName(): Text[100]
    begin
        exit(SurplResrvLtCreditsATok);
    end;

    procedure SurplResrvLtCreditsOv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtCreditsOvName()));
    end;

    procedure SurplResrvLtCreditsOvName(): Text[100]
    begin
        exit(SurplResrvLtCreditsOvTok);
    end;

    procedure SurplResrvLtCreditsOt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvLtCreditsOtName()));
    end;

    procedure SurplResrvLtCreditsOtName(): Text[100]
    begin
        exit(SurplResrvLtCreditsOtTok);
    end;

    procedure SurplResrvStSecurities(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStSecuritiesName()));
    end;

    procedure SurplResrvStSecuritiesName(): Text[100]
    begin
        exit(SurplResrvStSecuritiesTok);
    end;

    procedure SurplResrvStCapitalInsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStCapitalInsGName()));
    end;

    procedure SurplResrvStCapitalInsGName(): Text[100]
    begin
        exit(SurplResrvStCapitalInsGTok);
    end;

    procedure SurplResrvStCapitalInsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStCapitalInsAName()));
    end;

    procedure SurplResrvStCapitalInsAName(): Text[100]
    begin
        exit(SurplResrvStCapitalInsATok);
    end;

    procedure SurplResrStCapitalInsOv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrStCapitalInsOvName()));
    end;

    procedure SurplResrStCapitalInsOvName(): Text[100]
    begin
        exit(SurplResrStCapitalInsOvTok);
    end;

    procedure SurplResrvStCapitalInsO(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStCapitalInsOName()));
    end;

    procedure SurplResrvStCapitalInsOName(): Text[100]
    begin
        exit(SurplResrvStCapitalInsOTok);
    end;

    procedure SurplResrvStSecG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStSecGName()));
    end;

    procedure SurplResrvStSecGName(): Text[100]
    begin
        exit(SurplResrvStSecGTok);
    end;

    procedure SurplResrvStSecA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStSecAName()));
    end;

    procedure SurplResrvStSecAName(): Text[100]
    begin
        exit(SurplResrvStSecATok);
    end;

    procedure SurplResrvStSecOVin(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStSecOVinName()));
    end;

    procedure SurplResrvStSecOVinName(): Text[100]
    begin
        exit(SurplResrvStSecOVinTok);
    end;

    procedure SurplResrvStSecOth(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStSecOthName()));
    end;

    procedure SurplResrvStSecOthName(): Text[100]
    begin
        exit(SurplResrvStSecOthTok);
    end;

    procedure SurplResrvStCredits(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStCreditsName()));
    end;

    procedure SurplResrvStCreditsName(): Text[100]
    begin
        exit(SurplResrvStCreditsTok);
    end;

    procedure SurplResrvStCreditsG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStCreditsGName()));
    end;

    procedure SurplResrvStCreditsGName(): Text[100]
    begin
        exit(SurplResrvStCreditsGTok);
    end;

    procedure SurplResrvStCreditsA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStCreditsAName()));
    end;

    procedure SurplResrvStCreditsAName(): Text[100]
    begin
        exit(SurplResrvStCreditsATok);
    end;

    procedure SurplResrvStCreditsOv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStCreditsOvName()));
    end;

    procedure SurplResrvStCreditsOvName(): Text[100]
    begin
        exit(SurplResrvStCreditsOvTok);
    end;

    procedure SurplResrvStCreditsOt(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SurplResrvStCreditsOtName()));
    end;

    procedure SurplResrvStCreditsOtName(): Text[100]
    begin
        exit(SurplResrvStCreditsOtTok);
    end;

    procedure ExpensesChargedToCapital(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExpensesChargedToCapitalName()));
    end;

    procedure ExpensesChargedToCapitalName(): Text[100]
    begin
        exit(ExpensesChargedToCapitalTok);
    end;

    procedure FinExpAssetsAndLiabVal(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinExpAssetsAndLiabValName()));
    end;

    procedure FinExpAssetsAndLiabValName(): Text[100]
    begin
        exit(FinExpAssetsAndLiabValTok);
    end;

    procedure LossesFinAForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesFinAForSaleName()));
    end;

    procedure LossesFinAForSaleName(): Text[100]
    begin
        exit(LossesFinAForSaleTok);
    end;

    procedure GainsTransFinAForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GainsTransFinAForSaleName()));
    end;

    procedure GainsTransFinAForSaleName(): Text[100]
    begin
        exit(GainsTransFinAForSaleTok);
    end;

    procedure ExpensesInCoverageOper(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExpensesInCoverageOperName()));
    end;

    procedure ExpensesInCoverageOperName(): Text[100]
    begin
        exit(ExpensesInCoverageOperTok);
    end;

    procedure LossesCashFlowCoverage(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesCashFlowCoverageName()));
    end;

    procedure LossesCashFlowCoverageName(): Text[100]
    begin
        exit(LossesCashFlowCoverageTok);
    end;

    procedure LossesInvestCoverageAbroad(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesInvestCoverageAbroadName()));
    end;

    procedure LossesInvestCoverageAbroadName(): Text[100]
    begin
        exit(LossesInvestCoverageAbroadTok);
    end;

    procedure CashFlowCoverageGainsTrans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CashFlowCoverageGainsTransName()));
    end;

    procedure CashFlowCoverageGainsTransName(): Text[100]
    begin
        exit(CashFlowCoverageGainsTransTok);
    end;

    procedure InvestCovAbroadGainsTransf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InvestCovAbroadGainsTransfName()));
    end;

    procedure InvestCovAbroadGainsTransfName(): Text[100]
    begin
        exit(InvestCovAbroadGainsTransfTok);
    end;

    procedure ExpensesConversionDifferenc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExpensesConversionDifferencName()));
    end;

    procedure ExpensesConversionDifferencName(): Text[100]
    begin
        exit(ExpensesConversionDifferencTok);
    end;

    procedure NegativeConvDifferences(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegativeConvDifferencesName()));
    end;

    procedure NegativeConvDifferencesName(): Text[100]
    begin
        exit(NegativeConvDifferencesTok);
    end;

    procedure PositiveConvDiffTransfer(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PositiveConvDiffTransferName()));
    end;

    procedure PositiveConvDiffTransferName(): Text[100]
    begin
        exit(PositiveConvDiffTransferTok);
    end;

    procedure ProfitTaxHeadingCapital(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitTaxHeadingCapitalName()));
    end;

    procedure ProfitTaxHeadingCapitalName(): Text[100]
    begin
        exit(ProfitTaxHeadingCapitalTok);
    end;

    procedure ProfitTaxCapital(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitTaxCapitalName()));
    end;

    procedure ProfitTaxCapitalName(): Text[100]
    begin
        exit(ProfitTaxCapitalTok);
    end;

    procedure RunningTaxHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RunningTaxHeadingName()));
    end;

    procedure RunningTaxHeadingName(): Text[100]
    begin
        exit(RunningTaxHeadingTok);
    end;

    procedure DeferredTaxHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeferredTaxHeadingName()));
    end;

    procedure DeferredTaxHeadingName(): Text[100]
    begin
        exit(DeferredTaxHeadingTok);
    end;

    procedure ProfitDepositNegativeAdj(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitDepositNegativeAdjName()));
    end;

    procedure ProfitDepositNegativeAdjName(): Text[100]
    begin
        exit(ProfitDepositNegativeAdjTok);
    end;

    procedure FiscalIncomePermDiffer(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FiscalIncomePermDifferName()));
    end;

    procedure FiscalIncomePermDifferName(): Text[100]
    begin
        exit(FiscalIncomePermDifferTok);
    end;

    procedure FiscalIncomeDeductions(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FiscalIncomeDeductionsName()));
    end;

    procedure FiscalIncomeDeductionsName(): Text[100]
    begin
        exit(FiscalIncomeDeductionsTok);
    end;

    procedure PermDifferTransf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PermDifferTransfName()));
    end;

    procedure PermDifferTransfName(): Text[100]
    begin
        exit(PermDifferTransfTok);
    end;

    procedure DeducFiscalBenefTransf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(DeducFiscalBenefTransfName()));
    end;

    procedure DeducFiscalBenefTransfName(): Text[100]
    begin
        exit(DeducFiscalBenefTransfTok);
    end;

    procedure ProfitDepositPositiveAdj(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ProfitDepositPositiveAdjName()));
    end;

    procedure ProfitDepositPositiveAdjName(): Text[100]
    begin
        exit(ProfitDepositPositiveAdjTok);
    end;

    procedure SubvGrantsAndLegTransf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SubvGrantsAndLegTransfName()));
    end;

    procedure SubvGrantsAndLegTransfName(): Text[100]
    begin
        exit(SubvGrantsAndLegTransfTok);
    end;

    procedure OfficialSubvTransf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OfficialSubvTransfName()));
    end;

    procedure OfficialSubvTransfName(): Text[100]
    begin
        exit(OfficialSubvTransfTok);
    end;

    procedure GrantsAndLegTransf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GrantsAndLegTransfName()));
    end;

    procedure GrantsAndLegTransfName(): Text[100]
    begin
        exit(GrantsAndLegTransfTok);
    end;

    procedure OtherSubvGrantsLegTrans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherSubvGrantsLegTransName()));
    end;

    procedure OtherSubvGrantsLegTransName(): Text[100]
    begin
        exit(OtherSubvGrantsLegTransTok);
    end;

    procedure LtLossAndAdjFeeExpenses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtLossAndAdjFeeExpensesName()));
    end;

    procedure LtLossAndAdjFeeExpensesName(): Text[100]
    begin
        exit(LtLossAndAdjFeeExpensesTok);
    end;

    procedure ActuarialLosses(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ActuarialLossesName()));
    end;

    procedure ActuarialLossesName(): Text[100]
    begin
        exit(ActuarialLossesTok);
    end;

    procedure NegAdjLtFeeFixedProv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegAdjLtFeeFixedProvName()));
    end;

    procedure NegAdjLtFeeFixedProvName(): Text[100]
    begin
        exit(NegAdjLtFeeFixedProvTok);
    end;

    procedure NonCurrAssetsOnSaleExp(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NonCurrAssetsOnSaleExpName()));
    end;

    procedure NonCurrAssetsOnSaleExpName(): Text[100]
    begin
        exit(NonCurrAssetsOnSaleExpTok);
    end;

    procedure NonCurrAAndForSaleLos(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NonCurrAAndForSaleLosName()));
    end;

    procedure NonCurrAAndForSaleLosName(): Text[100]
    begin
        exit(NonCurrAAndForSaleLosTok);
    end;

    procedure NonCurrAAndSaleGTrans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NonCurrAAndSaleGTransName()));
    end;

    procedure NonCurrAAndSaleGTransName(): Text[100]
    begin
        exit(NonCurrAAndSaleGTransTok);
    end;

    procedure PartGOrACExpPosValAdj(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartGOrACExpPosValAdjName()));
    end;

    procedure PartGOrACExpPosValAdjName(): Text[100]
    begin
        exit(PartGOrACExpPosValAdjTok);
    end;

    procedure LiabPartDetG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LiabPartDetGName()));
    end;

    procedure LiabPartDetGName(): Text[100]
    begin
        exit(LiabPartDetGTok);
    end;

    procedure LiabPartDetA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LiabPartDetAName()));
    end;

    procedure LiabPartDetAName(): Text[100]
    begin
        exit(LiabPartDetATok);
    end;

    procedure IncomeChargedToCapital(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncomeChargedToCapitalName()));
    end;

    procedure IncomeChargedToCapitalName(): Text[100]
    begin
        exit(IncomeChargedToCapitalTok);
    end;

    procedure FinIncAssetsAndLiabVal(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinIncAssetsAndLiabValName()));
    end;

    procedure FinIncAssetsAndLiabValName(): Text[100]
    begin
        exit(FinIncAssetsAndLiabValTok);
    end;

    procedure GainsFinAForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GainsFinAForSaleName()));
    end;

    procedure GainsFinAForSaleName(): Text[100]
    begin
        exit(GainsFinAForSaleTok);
    end;

    procedure LossesTransfFinAForSale(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LossesTransfFinAForSaleName()));
    end;

    procedure LossesTransfFinAForSaleName(): Text[100]
    begin
        exit(LossesTransfFinAForSaleTok);
    end;

    procedure IncomeInCoverageOper(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncomeInCoverageOperName()));
    end;

    procedure IncomeInCoverageOperName(): Text[100]
    begin
        exit(IncomeInCoverageOperTok);
    end;

    procedure IncomeCashFlowCoverage(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncomeCashFlowCoverageName()));
    end;

    procedure IncomeCashFlowCoverageName(): Text[100]
    begin
        exit(IncomeCashFlowCoverageTok);
    end;

    procedure IncomeInvestCoverageAbroad(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncomeInvestCoverageAbroadName()));
    end;

    procedure IncomeInvestCoverageAbroadName(): Text[100]
    begin
        exit(IncomeInvestCoverageAbroadTok);
    end;

    procedure CashFlowCoverageLossTransf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(CashFlowCoverageLossTransfName()));
    end;

    procedure CashFlowCoverageLossTransfName(): Text[100]
    begin
        exit(CashFlowCoverageLossTransfTok);
    end;

    procedure InvestCovAbroadLossTransf(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(InvestCovAbroadLossTransfName()));
    end;

    procedure InvestCovAbroadLossTransfName(): Text[100]
    begin
        exit(InvestCovAbroadLossTransfTok);
    end;

    procedure IncomeConversionDifferences(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(IncomeConversionDifferencesName()));
    end;

    procedure IncomeConversionDifferencesName(): Text[100]
    begin
        exit(IncomeConversionDifferencesTok);
    end;

    procedure PositiveConvDifferences(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PositiveConvDifferencesName()));
    end;

    procedure PositiveConvDifferencesName(): Text[100]
    begin
        exit(PositiveConvDifferencesTok);
    end;

    procedure NegativeConvDiffTransfer(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegativeConvDiffTransferName()));
    end;

    procedure NegativeConvDiffTransferName(): Text[100]
    begin
        exit(NegativeConvDiffTransferTok);
    end;

    procedure SubvGrantsAndLegIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(SubvGrantsAndLegIncomeName()));
    end;

    procedure SubvGrantsAndLegIncomeName(): Text[100]
    begin
        exit(SubvGrantsAndLegIncomeTok);
    end;

    procedure OfficialSubvIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OfficialSubvIncomeName()));
    end;

    procedure OfficialSubvIncomeName(): Text[100]
    begin
        exit(OfficialSubvIncomeTok);
    end;

    procedure GrantsAndLegIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(GrantsAndLegIncomeName()));
    end;

    procedure GrantsAndLegIncomeName(): Text[100]
    begin
        exit(GrantsAndLegIncomeTok);
    end;

    procedure OtherSubvGrantsAndLegInc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OtherSubvGrantsAndLegIncName()));
    end;

    procedure OtherSubvGrantsAndLegIncName(): Text[100]
    begin
        exit(OtherSubvGrantsAndLegIncTok);
    end;

    procedure LtProfitAndAdjFeeIncome(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(LtProfitAndAdjFeeIncomeName()));
    end;

    procedure LtProfitAndAdjFeeIncomeName(): Text[100]
    begin
        exit(LtProfitAndAdjFeeIncomeTok);
    end;

    procedure ActuarialGains(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ActuarialGainsName()));
    end;

    procedure ActuarialGainsName(): Text[100]
    begin
        exit(ActuarialGainsTok);
    end;

    procedure PosAdjLtFeeFixedProv(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PosAdjLtFeeFixedProvName()));
    end;

    procedure PosAdjLtFeeFixedProvName(): Text[100]
    begin
        exit(PosAdjLtFeeFixedProvTok);
    end;

    procedure NonCurrAssetsOnSaleInc(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NonCurrAssetsOnSaleIncName()));
    end;

    procedure NonCurrAssetsOnSaleIncName(): Text[100]
    begin
        exit(NonCurrAssetsOnSaleIncTok);
    end;

    procedure NonCurrAAndForSaleProfit(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NonCurrAAndForSaleProfitName()));
    end;

    procedure NonCurrAAndForSaleProfitName(): Text[100]
    begin
        exit(NonCurrAAndForSaleProfitTok);
    end;

    procedure NonCurrAAndSaleLossTrans(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NonCurrAAndSaleLossTransName()));
    end;

    procedure NonCurrAAndSaleLossTransName(): Text[100]
    begin
        exit(NonCurrAAndSaleLossTransTok);
    end;

    procedure PartGOrACoIncPosValAdj(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PartGOrACoIncPosValAdjName()));
    end;

    procedure PartGOrACoIncPosValAdjName(): Text[100]
    begin
        exit(PartGOrACoIncPosValAdjTok);
    end;

    procedure PrevNegAdjRecG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PrevNegAdjRecGName()));
    end;

    procedure PrevNegAdjRecGName(): Text[100]
    begin
        exit(PrevNegAdjRecGTok);
    end;

    procedure PrevNegAdjRecA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(PrevNegAdjRecAName()));
    end;

    procedure PrevNegAdjRecAName(): Text[100]
    begin
        exit(PrevNegAdjRecATok);
    end;

    procedure NegAdjDetValTransG(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegAdjDetValTransGName()));
    end;

    procedure NegAdjDetValTransGName(): Text[100]
    begin
        exit(NegAdjDetValTransGTok);
    end;

    procedure NegAdjDetValTransA(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(NegAdjDetValTransAName()));
    end;

    procedure NegAdjDetValTransAName(): Text[100]
    begin
        exit(NegAdjDetValTransATok);
    end;

    procedure RawMaterialsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RawMaterialsHeadingName()));
    end;

    procedure RawMaterialsHeadingName(): Text[100]
    begin
        exit(RawMaterialsHeadingTok);
    end;

    procedure RawMaterialsHeadingAssets(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RawMaterialsHeadingAssetsName()));
    end;

    procedure RawMaterialsHeadingAssetsName(): Text[100]
    begin
        exit(RawMaterialsHeadingAssetsTok);
    end;

    procedure FinishedGoodsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FinishedGoodsHeadingName()));
    end;

    procedure FinishedGoodsHeadingName(): Text[100]
    begin
        exit(FinishedGoodsHeadingTok);
    end;

    procedure FixedAssetsHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(FixedAssetsHeadingName()));
    end;

    procedure FixedAssetsHeadingName(): Text[100]
    begin
        exit(FixedAssetsHeadingTok);
    end;

    procedure OfficeSuppliesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(OfficeSuppliesHeadingName()));
    end;

    procedure OfficeSuppliesHeadingName(): Text[100]
    begin
        exit(OfficeSuppliesHeadingTok);
    end;

    procedure ExtraordinaryExpensesHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExtraordinaryExpensesHeadingName()));
    end;

    procedure ExtraordinaryExpensesHeadingName(): Text[100]
    begin
        exit(ExtraordinaryExpensesHeadingTok);
    end;

    procedure ExtraordinaryExpensesHeadingExpense(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExtraordinaryExpensesHeadingExpenseName()));
    end;

    procedure ExtraordinaryExpensesHeadingExpenseName(): Text[100]
    begin
        exit(ExtraordinaryExpensesHeadingExpenseTok);
    end;

    procedure ExtraordinaryIncomeHeading(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(ExtraordinaryIncomeHeadingName()));
    end;

    procedure ExtraordinaryIncomeHeadingName(): Text[100]
    begin
        exit(ExtraordinaryIncomeHeadingTok);
    end;

    procedure RawMaterialsAssetsPosting(): Code[20]
    begin
        exit(ContosoGLAccount.GetAccountNo(RawMaterialsAssetsPostingName()));
    end;

    procedure RawMaterialsAssetsPostingName(): Text[100]
    begin
        exit(RawMaterialsAssetsPostingTok);
    end;

    local procedure UpdateIncomeStmtBalAcc(No: Code[20]; IncomeStmtBalAcc: Code[20])
    var
        GLAccount: Record "G/L Account";
    begin
        if GLAccount.Get(No) then begin
            GLAccount.Validate("Income Stmt. Bal. Acc.", IncomeStmtBalAcc);
            GLAccount.Modify();
        end;
    end;

    var
        ContosoGLAccount: Codeunit "Contoso GL Account";
        BasicFinancingTok: Label 'BASIC FINANCING', MaxLength = 100;
        CapitalHeadingTok: Label 'Capital, Heading', MaxLength = 100;
        ShareCapitalHeadingTok: Label 'Share Capital, Heading', MaxLength = 100;
        ShareCapitalPostingTok: Label 'Share Capital', MaxLength = 100;
        SocialFundTok: Label 'Social Fund', MaxLength = 100;
        CapitalTok: Label 'Capital', MaxLength = 100;
        PartnersInvestTok: Label 'Partners invest. ', MaxLength = 100;
        PartnersInvestSCapTok: Label 'Partners invest., S. Cap.', MaxLength = 100;
        PartnersInvestPCapTok: Label 'Partners invest., P. Cap.', MaxLength = 100;
        PartnersPendNonmonetaryInvTok: Label 'Partners Pend Nonmonetary Inv.', MaxLength = 100;
        PartPendNonmonInvSCapTok: Label 'Part Pend Nonmon. Inv, S Cap', MaxLength = 100;
        PartPendNonmonInvPCapTok: Label 'Part Pend Nonmon. Inv, P Cap', MaxLength = 100;
        SharesSpecialSituationsTok: Label 'Shares Special Situations', MaxLength = 100;
        SharesCapitalReductionsTok: Label 'Shares Capital Reductions', MaxLength = 100;
        ReservesTok: Label 'Reserves', MaxLength = 100;
        SharePremiumTok: Label 'Share Premium', MaxLength = 100;
        OtherCapitalInstrHeadingTok: Label 'Other Capital Instr., Heading', MaxLength = 100;
        CapitalMixedFinInstrTok: Label 'Capital Mixed Fin. Instr.', MaxLength = 100;
        OtherCapitalInstrTok: Label 'Other Capital Instr.', MaxLength = 100;
        LegalReserveHeadingTok: Label 'Legal Reserve, Heading', MaxLength = 100;
        LegalReserveTok: Label 'Legal Reserve', MaxLength = 100;
        VoluntaryReservesTok: Label 'Voluntary Reserves', MaxLength = 100;
        VoluntaryReserveTok: Label 'Voluntary Reserve', MaxLength = 100;
        SpecialReservesTok: Label 'Special Reserves', MaxLength = 100;
        MajorPartnerSharesReservesTok: Label 'Major Partner Shares Reserves', MaxLength = 100;
        StatutoryReservesTok: Label 'Statutory Reserves', MaxLength = 100;
        DeprCapitalReserveTok: Label 'Depr. Capital Reserve', MaxLength = 100;
        GoodwillReservesTok: Label 'Goodwill Reserves', MaxLength = 100;
        OwnSharesAsGuaranteeReserTok: Label 'Own shares as guarantee Reser.', MaxLength = 100;
        GainsLossReservesAndAdjHeadingTok: Label 'Gains & Loss Reserves and adj., Heading', MaxLength = 100;
        GainsLossReservesAndAdjTok: Label 'Gains & Loss Reserves and adj.', MaxLength = 100;
        PartnersOrOwnerInvestmentsTok: Label 'Partners or Owner investments', MaxLength = 100;
        DifCapitalExchEuroTok: Label 'Dif. Capital Exch Euro', MaxLength = 100;
        UnappliedResultsTok: Label 'Unapplied Results', MaxLength = 100;
        AccumulatedLossesTok: Label 'Accumulated Losses', MaxLength = 100;
        ProfitOrLossHeadingTok: Label 'Profit or Loss, Heading', MaxLength = 100;
        ProfitOrLossTok: Label 'Profit or Loss', MaxLength = 100;
        SubvGrantsAndCurrExchTok: Label 'Subv., Grants and Curr. Exch.', MaxLength = 100;
        OfficialSubvHeadingTok: Label 'Official Subv., Heading', MaxLength = 100;
        OfficialSubvTok: Label 'Official Subv.', MaxLength = 100;
        GrantsAndLegaciesHeadingTok: Label 'Grants and legacies, Heading', MaxLength = 100;
        GrantsAndLegaciesTok: Label 'Grants and legacies', MaxLength = 100;
        OtherSubvGrantsAndLegHeadingTok: Label 'Other Subv. grants and leg., Heading', MaxLength = 100;
        OtherSubvGrantsAndLegTok: Label 'Other Subv. grants and leg.', MaxLength = 100;
        ValueAdjFinAForSaleHeadingTok: Label 'Value Adj. Fin. A. For Sale, Heading', MaxLength = 100;
        ValueAdjFinAForSaleTok: Label 'Value Adj. Fin. A. For Sale', MaxLength = 100;
        ValueAdjFinAForSalePostingTok: Label 'Value Adj. Fin. A. For Sale, Posting', MaxLength = 100;
        CoverageOperationsTok: Label 'Coverage Operations', MaxLength = 100;
        CashFlowCoverageHeadingTok: Label 'Cash Flow Coverage, Heading', MaxLength = 100;
        CashFlowCoverageTok: Label 'Cash Flow Coverage', MaxLength = 100;
        NetInvestCovAbroadHeadingTok: Label 'Net Invest. Cov. Abroad, Heading', MaxLength = 100;
        NetInvestCovAbroadTok: Label 'Net Invest. Cov. Abroad', MaxLength = 100;
        ConversionDifferencesHeadingTok: Label 'Conversion Differences, Heading', MaxLength = 100;
        ConversionDifferencesTok: Label 'Conversion Differences', MaxLength = 100;
        ValueAdjNoncurrentASaleHeadingTok: Label 'Value Adj Noncurrent A & Sale, Heading', MaxLength = 100;
        ValueAdjNoncurrentASaleTok: Label 'Value Adj Noncurrent A & Sale', MaxLength = 100;
        FiscalIncRetPrevYearsTok: Label 'Fiscal Inc. Ret. Prev Years', MaxLength = 100;
        FiscalIncDifRetPrevYearsHeadingTok: Label 'Fiscal Inc. Dif Ret Prev Years, Heading', MaxLength = 100;
        FiscalIncDifRetPrevYearsTok: Label 'Fiscal Inc. Dif Ret Prev Years', MaxLength = 100;
        FiscalIncDeductDiscountsTok: Label 'Fiscal Inc. Deduct & Discounts', MaxLength = 100;
        ProvisionTok: Label 'Provision', MaxLength = 100;
        ProvisionForPensionsEquityTok: Label 'Provision for Pensions, Equity', MaxLength = 100;
        TaxationReserveEquityTok: Label 'Taxation Reserve, Equity', MaxLength = 100;
        ProvisionForResponsibilitiesTok: Label 'Provision for Responsibilities', MaxLength = 100;
        ProvisionForMayorRepairsTok: Label 'Provision for Mayor Repairs', MaxLength = 100;
        ProvForEnvironmentalActEquityTok: Label 'Prov. for environmental act., Equity', MaxLength = 100;
        ProvisionForRestructuringTok: Label 'Provision for restructuring', MaxLength = 100;
        ProvPaymTransCapitalInstTok: Label 'Prov. Paym Trans Capital Inst', MaxLength = 100;
        SpecialLtDebtsTok: Label 'Special LT Debts', MaxLength = 100;
        LtSharesLiabilityTok: Label 'LT Shares Liability', MaxLength = 100;
        InvestLiabilityTok: Label 'Invest. Liability', MaxLength = 100;
        InvestLiabilityGTok: Label 'Invest. Liability, (G)', MaxLength = 100;
        InvestLiabilityATok: Label 'Invest. Liability, (A)', MaxLength = 100;
        InvestLiabilityOthTok: Label 'Invest. Liability, (Oth.)', MaxLength = 100;
        OtherInvestLiabilityTok: Label 'Other Invest. Liability', MaxLength = 100;
        PendNonmonetaryInvLiabTok: Label 'Pend. Nonmonetary Inv. Liab.', MaxLength = 100;
        PendNonmonetaryInvLiabGTok: Label 'Pend Nonmonetary Inv Liab,(G)', MaxLength = 100;
        PendNonmonetaryInvLiabATok: Label 'Pend Nonmonetary Inv Liab,(A)', MaxLength = 100;
        PendNonmonInvLiabOthTok: Label 'Pend Nonmon. Inv Liab, (Oth.)', MaxLength = 100;
        OtherPendNonmonInvTok: Label 'Other Pend. Nonmon. Inv.', MaxLength = 100;
        VincCompaniesLtDebtsTok: Label 'Vinc. Companies LT Debts', MaxLength = 100;
        DebtsLtWithVincFinInstTok: Label 'Debts LT with vinc. Fin. Inst.', MaxLength = 100;
        DebtsLtToFinInstGTok: Label 'Debts LT to Fin. Inst., (G)', MaxLength = 100;
        DebtsLtToFinInstATok: Label 'Debts LT to Fin. Inst., (A)', MaxLength = 100;
        DebtsLtToOthVincCredInstTok: Label 'Debts LT to oth vinc Cred Inst', MaxLength = 100;
        LtFixedAssetVendorsVincTok: Label 'LT Fixed Asset Vendors, vinc.', MaxLength = 100;
        LtFixedAssetVendorsGTok: Label 'LT Fixed Asset Vendors (G)', MaxLength = 100;
        LtFixedAssetVendorsATok: Label 'LT Fixed Asset Vendors (A)', MaxLength = 100;
        LtFixedAssetVendorsOthTok: Label 'LT Fixed Asset Vendors (Oth.)', MaxLength = 100;
        FinLtLeaseCreditorsVincTok: Label 'Fin. LT Lease Creditors, vinc.', MaxLength = 100;
        FinLtLeaseCreditorsGTok: Label 'Fin. LT Lease Creditors, (G)', MaxLength = 100;
        FinLtLeaseCreditorsATok: Label 'Fin. LT Lease Creditors, (A)', MaxLength = 100;
        FinLtLeaseCreditorsOthTok: Label 'Fin. LT Lease Creditors,(Oth.)', MaxLength = 100;
        OtherLtDebtsToVincCompTok: Label 'Other LT debts to vinc. Comp.', MaxLength = 100;
        OtherLtDebtsGTok: Label 'Other LT debts, (G)', MaxLength = 100;
        OtherLtDebtsATok: Label 'Other LT debts, (A)', MaxLength = 100;
        OtherLtDebtsOthTok: Label 'Other LT debts, (Oth.)', MaxLength = 100;
        LoansAndSimilarBorrowingsTok: Label 'Loans and Similar Borrowings', MaxLength = 100;
        LTLoansFromFinInstTok: Label 'L T Loans from Fin. Inst.', MaxLength = 100;
        LongTermDebtsTok: Label 'Long-Term Debts', MaxLength = 100;
        LongTermDebtsHeadingTok: Label 'Long-Term Debts, Heading', MaxLength = 100;
        ConvertibleInGrantsTok: Label 'Convertible in Grants', MaxLength = 100;
        LtFixedAssetVendorsTok: Label 'LT Fixed Asset Vendors', MaxLength = 100;
        FinLtLeaseCreditorsTok: Label 'Fin. LT Lease Creditors', MaxLength = 100;
        TradeCredBillExchPayTok: Label 'Trade Cred.-Bill Exch. Pay.', MaxLength = 100;
        LtDerivFinLiabTok: Label 'LT Deriv. Fin. Liab.', MaxLength = 100;
        LtDerivFinLiabPortfolioTok: Label 'LT Deriv. Fin. Liab.,Portfolio', MaxLength = 100;
        LtDerivFinLiabCoverInstTok: Label 'LT Deriv. Fin. Liab,Cover Inst', MaxLength = 100;
        ObligAndDebentLoansTok: Label 'Oblig. and Debent Loans', MaxLength = 100;
        ObligAndConvDebentLoansTok: Label 'Oblig. and Conv. Debent Loans', MaxLength = 100;
        DebtsOthMarketableSecurTok: Label 'Debts Oth Marketable Secur.', MaxLength = 100;
        LtGuaranteesDepRecTok: Label 'LT Guarantees & Dep. Rec.', MaxLength = 100;
        LtGuaranteesReceivedTok: Label 'LT Guarantees Received', MaxLength = 100;
        LtSalesAndServicesAdvancesTok: Label 'LT Sales and Services Advances', MaxLength = 100;
        LtDepositsReceivedTok: Label 'LT Deposits Received', MaxLength = 100;
        LtFinancialGuaranteesTok: Label 'LT Financial Guarantees', MaxLength = 100;
        TransitionalSituationsTok: Label 'Transitional Situations', MaxLength = 100;
        IssuedSharesOrPartStockTok: Label 'Issued Shares or Part. Stock', MaxLength = 100;
        SharesSubscriptorsTok: Label 'Shares Subscriptors', MaxLength = 100;
        EqCapitalCInCreationTok: Label 'Eq. Capital, C. in Creation', MaxLength = 100;
        IssuedSharesOrPartFinLiabTok: Label 'Issued Shares or Part,Fin Liab', MaxLength = 100;
        FinLiabSharesSubsTok: Label 'Fin Liab. Shares Subs.', MaxLength = 100;
        PendFinLiabSharesOrStTok: Label 'Pend Fin. Liab. Shares or St', MaxLength = 100;
        IntangibleAssetsTok: Label 'Intangible Assets', MaxLength = 100;
        ResearchCostsHeadingTok: Label 'Research Costs, Heading', MaxLength = 100;
        ResearchCostsTok: Label 'Research Costs', MaxLength = 100;
        DevCostsHeadingTok: Label 'Dev. Costs, Heading', MaxLength = 100;
        DevCostsTok: Label 'Dev. Costs', MaxLength = 100;
        FranchisedAssetsTok: Label 'Franchised Assets', MaxLength = 100;
        IndustrialPropertyTok: Label 'Industrial Property', MaxLength = 100;
        GoodwillTok: Label 'Goodwill', MaxLength = 100;
        RightToLeaseTok: Label 'Right to Lease', MaxLength = 100;
        EdpApplicationsTok: Label 'EDP Applications', MaxLength = 100;
        IntangibleAssetsAdvancesTok: Label 'Intangible Assets Advances', MaxLength = 100;
        TangibleAssetsTok: Label 'Tangible Assets', MaxLength = 100;
        FreeholdLandTok: Label 'Freehold Land', MaxLength = 100;
        LandTok: Label 'Land', MaxLength = 100;
        BuildingsTok: Label 'Buildings', MaxLength = 100;
        SpecificInstallationsTok: Label 'Specific Installations', MaxLength = 100;
        IndustrialMachineryHeadingTok: Label 'Industrial Machinery, Heading', MaxLength = 100;
        IndustrialMachineryTok: Label 'Industrial Machinery', MaxLength = 100;
        IndustrialToolingTok: Label 'Industrial Tooling', MaxLength = 100;
        PlantMachineryEquipmentTok: Label 'Plant, Machinery & Equipment', MaxLength = 100;
        FurnitureHeadingTok: Label 'Furniture, Heading', MaxLength = 100;
        FurnitureTok: Label 'Furniture', MaxLength = 100;
        InfoProcessEquipmentTok: Label 'Info. Process. Equipment', MaxLength = 100;
        DataProcessingEquipmentTok: Label 'Data Processing Equipment', MaxLength = 100;
        TransportEquipmentTok: Label 'Transport Equipment', MaxLength = 100;
        VehicleTok: Label 'Vehicle', MaxLength = 100;
        OtherTangibleFixedAssetsHeadingTok: Label 'Other Tangible Fixed Assets, Heading', MaxLength = 100;
        OtherTangibleFixedAssetsTok: Label 'Other Tangible Fixed Assets', MaxLength = 100;
        PropertiesInvestmTok: Label 'Properties Investm.', MaxLength = 100;
        FreeholdLandInvTok: Label 'Freehold Land Inv.', MaxLength = 100;
        LandInvTok: Label 'Land Inv.', MaxLength = 100;
        BuildingsInvTok: Label 'Buildings Inv.', MaxLength = 100;
        FixedAssetsInProgressTok: Label 'Fixed Assets in Progress', MaxLength = 100;
        ImprPrepCostsFreehLandTok: Label 'Impr & Prep Costs Freeh. Land', MaxLength = 100;
        ConstructionWorkInProgressTok: Label 'Construction Work in Progress', MaxLength = 100;
        PlantMachEquipmUndInstTok: Label 'Plant Mach. & Equipm und Inst', MaxLength = 100;
        MachineryUnderInstallationTok: Label 'Machinery under Installation', MaxLength = 100;
        InfoProcessEquipmUndInstTok: Label 'Info Process. Equipm und Inst', MaxLength = 100;
        TangibleAssetsAdvancesTok: Label 'Tangible Assets Advances', MaxLength = 100;
        VincCompFinInvestmTok: Label 'Vinc. Comp. Fin. Investm', MaxLength = 100;
        LtInvestmInVincComTok: Label 'LT Investm. In Vinc. Com.', MaxLength = 100;
        LtInvestmGTok: Label 'LT Investm. (G)', MaxLength = 100;
        LtInvestmATok: Label 'LT Investm. (A)', MaxLength = 100;
        LtInvestmOthTok: Label 'LT Investm. (Oth.)', MaxLength = 100;
        LtDebtValueVincTok: Label 'LT Debt Value, Vinc', MaxLength = 100;
        LtDebtValueGTok: Label 'LT Debt Value, (G)', MaxLength = 100;
        LtDebtValueATok: Label 'LT Debt Value, (A)', MaxLength = 100;
        LtDebtValueOthTok: Label 'LT Debt Value, (Oth.)', MaxLength = 100;
        LtCreditsToVincCompTok: Label 'LT Credits to Vinc. Comp.', MaxLength = 100;
        LtCreditsToGTok: Label 'LT Credits to (G)', MaxLength = 100;
        LtCreditsToATok: Label 'LT Credits to (A)', MaxLength = 100;
        LtCreditsToOthTok: Label 'LT Credits to (Oth.)', MaxLength = 100;
        AmountsUncalledLtTok: Label 'Amounts Uncalled LT', MaxLength = 100;
        AmountsUncalledGTok: Label 'Amounts Uncalled (G)', MaxLength = 100;
        AmountsUncalledATok: Label 'Amounts Uncalled (A)', MaxLength = 100;
        AmountsUncalledOthTok: Label 'Amounts Uncalled (Oth.)', MaxLength = 100;
        OtherFinancialInvestmLtTok: Label 'Other Financial Investm. LT', MaxLength = 100;
        LtInvestmInCapitalInstTok: Label 'LT Investm. In Capital Inst', MaxLength = 100;
        LtDebtValuesHeadingTok: Label 'LT Debt Values, Heading', MaxLength = 100;
        LtDebtValuesTok: Label 'LT Debt Values', MaxLength = 100;
        LongTermLoansTok: Label 'Long Term Loans', MaxLength = 100;
        FaTransfLoansTok: Label 'FA Transf. Loans', MaxLength = 100;
        StaffLtCreditsTok: Label 'Staff LT Credits', MaxLength = 100;
        LtDerivFinCapitalTok: Label 'LT Deriv. Fin. Capital', MaxLength = 100;
        LtDerivFinCapPortfolioTok: Label 'LT Deriv Fin Cap., Portfolio', MaxLength = 100;
        LtDerivFinCapCoverInstTok: Label 'LT Deriv Fin Cap., Cover Inst', MaxLength = 100;
        LtPersInsContReimbRightsTok: Label 'LT Pers Ins Cont Reimb Rights', MaxLength = 100;
        LongTermTaxationsTok: Label 'Long-Term Taxations', MaxLength = 100;
        PendingInvestOnCapitalInstTok: Label 'Pending Invest On Capital Inst', MaxLength = 100;
        GuarantDepSecuritiesTok: Label 'Guarant. Dep. & Securities', MaxLength = 100;
        GuarantSecuritiesLTTok: Label 'Guarant. Securities (L T)', MaxLength = 100;
        GuaranteedSecuritiesTok: Label 'Guaranteed Securities', MaxLength = 100;
        GuaranteedDepositsLTTok: Label 'Guaranteed Deposits (L T)', MaxLength = 100;
        DeprOfIntangibleFaTok: Label 'Depr. of Intangible FA', MaxLength = 100;
        DepResearchCostsTok: Label 'Dep. Research Costs', MaxLength = 100;
        DepDevelopmCostsTok: Label 'Dep. Developm. Costs', MaxLength = 100;
        DepFranchisedAssetsTok: Label 'Dep. Franchised Assets', MaxLength = 100;
        DepIndustrialPropertyTok: Label 'Dep. Industrial Property', MaxLength = 100;
        DepRightToLeaseTok: Label 'Dep. Right to Lease', MaxLength = 100;
        DepEdpApplicationsTok: Label 'Dep. EDP Applications', MaxLength = 100;
        DeprOfTangibleFaTok: Label 'Depr. of Tangible FA', MaxLength = 100;
        DepBuildingsTok: Label 'Dep. Buildings', MaxLength = 100;
        DepTechnicalInstallationsTok: Label 'Dep. Technical Installations', MaxLength = 100;
        DepIndustrialMachineryHeadingTok: Label 'Dep. Industrial Machinery, Heading', MaxLength = 100;
        DepIndustrialMachineryTok: Label 'Dep. Industrial Machinery', MaxLength = 100;
        DepIndustrialToolingTok: Label 'Dep. Industrial Tooling', MaxLength = 100;
        DepPlantMachineryEquipTok: Label 'Dep. Plant, Machinery & Equip.', MaxLength = 100;
        DepFurnitureAssetsTok: Label 'Dep. Furniture, Assets', MaxLength = 100;
        DepFurnitureTok: Label 'Dep. Furniture', MaxLength = 100;
        DepInfoProcessEquipmentTok: Label 'Dep. Info. Process. Equipment', MaxLength = 100;
        DepTransportEquipmentHeadingTok: Label 'Dep. Transport Equipment, Heading', MaxLength = 100;
        DepTransportEquipmentTok: Label 'Dep. Transport Equipment', MaxLength = 100;
        DepOtherTangibleFaHeadingTok: Label 'Dep. Other Tangible FA, Heading', MaxLength = 100;
        DepOtherTangibleFaTok: Label 'Dep. Other Tangible FA', MaxLength = 100;
        DepPropertiesInvestmHeadingTok: Label 'Dep. Properties Investm., Heading', MaxLength = 100;
        DepPropertiesInvestmTok: Label 'Dep. Properties Investm.', MaxLength = 100;
        DeteriorForFaTok: Label 'Deterior. for FA', MaxLength = 100;
        DeteriorOfIntangFaTok: Label 'Deterior. of Intang. FA', MaxLength = 100;
        DetResearchCostsTok: Label 'Det. Research Costs', MaxLength = 100;
        DetDevelopmCostsTok: Label 'Det. Developm. Costs', MaxLength = 100;
        DetFranchisedAssetsTok: Label 'Det. Franchised Assets', MaxLength = 100;
        DetIndustrialPropertyTok: Label 'Det. Industrial Property', MaxLength = 100;
        DetRightToLeaseTok: Label 'Det. Right to Lease', MaxLength = 100;
        DetEdpApplicationsTok: Label 'Det. EDP Applications', MaxLength = 100;
        DeteriorOfTangFaTok: Label 'Deterior. of Tang. FA', MaxLength = 100;
        DetFreeholdLandTok: Label 'Det. Freehold Land', MaxLength = 100;
        DetBuildingTok: Label 'Det. Building', MaxLength = 100;
        DetTechnicalInstallationsTok: Label 'Det. Technical Installations', MaxLength = 100;
        DetIndustrialMachineryTok: Label 'Det. Industrial Machinery', MaxLength = 100;
        DetIndustrialToolingTok: Label 'Det. Industrial Tooling', MaxLength = 100;
        DetPlantMachineryEquipTok: Label 'Det. Plant, Machinery & Equip.', MaxLength = 100;
        DepFurnitureHeadingTok: Label 'Dep. Furniture, Heading', MaxLength = 100;
        DetInfoProcessEquipmentTok: Label 'Det. Info. Process. Equipment', MaxLength = 100;
        DetTransportEquipmentTok: Label 'Det. Transport Equipment', MaxLength = 100;
        DetOtherTangFixedAssetsTok: Label 'Det. Other Tang. Fixed Assets', MaxLength = 100;
        DetPropertiesInvestmTok: Label 'Det. Properties Investm.', MaxLength = 100;
        DetFreeholdLandHeadingTok: Label 'Det. Freehold Land, Heading', MaxLength = 100;
        DetBuildingHeadingTok: Label 'Det. Building, Heading', MaxLength = 100;
        DetLtSecValueInVincCTok: Label 'Det. LT Sec. Value in Vinc. C.', MaxLength = 100;
        DetLtSecValueInGrTok: Label 'Det. LT Sec. Value in Gr.', MaxLength = 100;
        DetLtSecValueInAsocTok: Label 'Det. LT Sec. Value in Asoc.', MaxLength = 100;
        DetLtDebtSecuritiesVinCTok: Label 'Det. LT Debt Securities Vin C ', MaxLength = 100;
        DetLtDebtSecuritiesGTok: Label 'Det. LT Debt Securities, (G)', MaxLength = 100;
        DetLtDebtSecuritiesATok: Label 'Det. LT Debt Securities, (A)', MaxLength = 100;
        DetLtDebtSecurOVinTok: Label 'Det. LT Debt Secur., (O Vin)', MaxLength = 100;
        DetLtCreditsValToVincCTok: Label 'Det. LT Credits val. to Vinc.C', MaxLength = 100;
        DetLtCreditsToGrTok: Label 'Det. LT Credits to Gr.', MaxLength = 100;
        DetLtCreditsToAsocTok: Label 'Det. LT Credits to Asoc.', MaxLength = 100;
        DetLtCreditsToOthVinTok: Label 'Det. LT Credits to Oth.Vin.', MaxLength = 100;
        DetLtDebtSecuritiesValueTok: Label 'Det. LT Debt Securities Value', MaxLength = 100;
        DetLtCreditsValueTok: Label 'Det. LT Credits value', MaxLength = 100;
        TradeGoodsTok: Label 'Trade Goods', MaxLength = 100;
        GoodsHeadingTok: Label 'Goods, Heading', MaxLength = 100;
        GoodsTok: Label 'Goods', MaxLength = 100;
        AssemblyBomTok: Label 'Assembly BOM', MaxLength = 100;
        GoodsTradeCredTok: Label 'Goods (Trade Cred.)', MaxLength = 100;
        BillOfMaterTradeCredTok: Label 'Bill of Mater. (Trade Cred.)', MaxLength = 100;
        RawMaterialsProvTok: Label 'Raw Materials (Prov.)', MaxLength = 100;
        SuppliesOtherConsumTok: Label 'Supplies & Other Consum.', MaxLength = 100;
        ItemsAssembToIncorpTok: Label 'Items & Assemb. to Incorp.', MaxLength = 100;
        FuelsTok: Label 'Fuels', MaxLength = 100;
        ReplacementPartsTok: Label 'Replacement Parts', MaxLength = 100;
        OtherMaterialsTok: Label 'Other Materials', MaxLength = 100;
        PackagingTok: Label 'Packaging', MaxLength = 100;
        ContainersTok: Label 'Containers', MaxLength = 100;
        ProdInProgrManufGoodsHeadingTok: Label 'Prod. in Progr-Manuf. Goods, Heading', MaxLength = 100;
        ProdInProgrManufGoodsTok: Label 'Prod. in Progr-Manuf. Goods', MaxLength = 100;
        SalesSpecialistTok: Label 'Sales Specialist', MaxLength = 100;
        WipProjectSalesTok: Label 'WIP Project Sales', MaxLength = 100;
        WipInvoicedProjectSalesTok: Label 'WIP Invoiced Project Sales', MaxLength = 100;
        CostsSpecialistTok: Label 'Costs Specialist', MaxLength = 100;
        WipProjectCostsTok: Label 'WIP Project Costs', MaxLength = 100;
        WipAccruedProjectCostsTok: Label 'WIP Accrued Project Costs', MaxLength = 100;
        JobPostingGroupTok: Label 'Job Posting Group', MaxLength = 100;
        WorkInProgressHeadingTok: Label 'Work in Progress, Heading', MaxLength = 100;
        WorkInProgressTok: Label 'Work in Progress', MaxLength = 100;
        ByProductsOrScrapTok: Label 'By Products or Scrap', MaxLength = 100;
        ByProductsTok: Label 'By Products', MaxLength = 100;
        WasteProductsTok: Label 'Waste Products', MaxLength = 100;
        RejectsOfManufacturingTok: Label 'Rejects of Manufacturing', MaxLength = 100;
        DeteriorInventoryValueTok: Label 'Deterior. Inventory Value', MaxLength = 100;
        DetGoodsValueTok: Label 'Det. Goods value', MaxLength = 100;
        DetRawMatTok: Label 'Det. raw mat.', MaxLength = 100;
        DetSuppliesOtherConsumTok: Label 'Det. Supplies & Other Consum.', MaxLength = 100;
        DetProdProgrManufGoodsTok: Label 'Det. Prod. Progr-Manuf Goods', MaxLength = 100;
        DetForWorkInProgressTok: Label 'Det. for Work in Progress', MaxLength = 100;
        DetForFinishedGoodsTok: Label 'Det. for Finished Goods', MaxLength = 100;
        DetForByProdOrScrapTok: Label 'Det. for By Prod. or Scrap', MaxLength = 100;
        CreditorsAndDebtorsTok: Label 'CREDITORS AND DEBTORS', MaxLength = 100;
        TradeCreditorsHeadingTok: Label 'Trade Creditors, Heading', MaxLength = 100;
        TradeCreditorsTok: Label 'Trade Creditors', MaxLength = 100;
        STTradeCredEuroTok: Label 'S T Trade Cred. (Euro)', MaxLength = 100;
        NationalTradeCreditorsTok: Label 'National Trade Creditors', MaxLength = 100;
        InternatTradeCreditorsTok: Label 'Internat. Trade Creditors', MaxLength = 100;
        InvUnderPaymentOrderTok: Label 'Inv. under Payment Order', MaxLength = 100;
        ForCurrTradeCreditorsTok: Label 'For. Curr. Trade Creditors ', MaxLength = 100;
        EuTradeCreditorsTok: Label 'EU Trade Creditors ', MaxLength = 100;
        TradeCredInvNotRecTok: Label 'Trade Cred. Inv. Not Rec.', MaxLength = 100;
        TradeCredBillOfExchPayTok: Label 'Trade Cred. Bill of Exch. Pay.', MaxLength = 100;
        TradeCrBillExPayTok: Label 'Trade Cr. Bill Ex. Pay.', MaxLength = 100;
        BillExPayNationalTok: Label 'Bill Ex. Pay. National', MaxLength = 100;
        BillExInPaymtOrderTok: Label 'Bill Ex. In Paymt. Order', MaxLength = 100;
        TradeCreditorsGTok: Label 'Trade Creditors, (G)', MaxLength = 100;
        TradeCreditorsGEuroHeadingTok: Label 'Trade Creditors (G) Euro, Heading', MaxLength = 100;
        TradeCreditorsGEuroTok: Label 'Trade Creditors (G) Euro', MaxLength = 100;
        ProvForBillExchPayGTok: Label 'Prov. for Bill Exch. Pay. (G)', MaxLength = 100;
        TradeCreditorsGForCurrTok: Label 'Trade Creditors, (G) For. Curr', MaxLength = 100;
        TradeCrReturnEmptiesGTok: Label 'Trade Cr. Return. Empties (G)', MaxLength = 100;
        TradeCredInvNotRecGTok: Label 'Trade Cred. Inv. Not Rec. (G)', MaxLength = 100;
        TradeCredAsocTok: Label 'Trade Cred. Asoc', MaxLength = 100;
        TradeCredOthVinCTok: Label 'Trade Cred. Oth. Vin. C.', MaxLength = 100;
        TradeCrReturnEmptiesTok: Label 'Trade Cr. Return. Empties', MaxLength = 100;
        TradeCredAdvancesHeadingTok: Label 'Trade Cred. Advances, Heading', MaxLength = 100;
        TradeCredAdvancesTok: Label 'Trade Cred. Advances', MaxLength = 100;
        TradeCredAdvancesNationalTok: Label 'Trade Cred. Advances National', MaxLength = 100;
        TradeCredAdvancesEuTok: Label 'Trade Cred. Advances EU', MaxLength = 100;
        TradeCredAdvancesExportTok: Label 'Trade Cred. Advances Export', MaxLength = 100;
        OtherCreditorsHeadingTok: Label 'Other Creditors, Heading', MaxLength = 100;
        CreditorsProvOfServicesTok: Label 'Creditors Prov. of Services', MaxLength = 100;
        STCreditorsEuroTok: Label 'S T Creditors (Euro)', MaxLength = 100;
        OtherCreditorsTok: Label 'Other Creditors', MaxLength = 100;
        CreditorsProvServForCurrTok: Label 'Creditors Prov Serv (For Curr)', MaxLength = 100;
        CreditorsInvNotRecTok: Label 'Creditors Inv. Not Rec.', MaxLength = 100;
        CreditorsBillExPayHeadingTok: Label 'Creditors Bill Ex. Pay., Heading', MaxLength = 100;
        CreditorsBillExPayTok: Label 'Creditors Bill Ex. Pay.', MaxLength = 100;
        CreditorsComOperationsHeadingTok: Label 'Creditors Com. Operations, Heading', MaxLength = 100;
        CreditorsComOperationsTok: Label 'Creditors Com. Operations', MaxLength = 100;
        TradeAccReceivHeadingTok: Label 'Trade Acc. Receiv., Heading', MaxLength = 100;
        TradeAccReceivTok: Label 'Trade Acc. Receiv.', MaxLength = 100;
        TradeAccReceivEuroTok: Label 'Trade Acc. Receiv. (Euro)', MaxLength = 100;
        NationalCustomersTok: Label 'National Customers', MaxLength = 100;
        InternationalCustomersTok: Label 'International Customers', MaxLength = 100;
        InvoicesToBePaidTok: Label 'Invoices to be paid', MaxLength = 100;
        DiscountedInvoicesAccountTok: Label 'Discounted Invoices Account', MaxLength = 100;
        RejectedInvoicesAccountTok: Label 'Rejected Invoices Account', MaxLength = 100;
        TradeAccReceivForCurrTok: Label 'Trade Acc. Receiv. (For. Curr)', MaxLength = 100;
        TradeAccRecInvNotRecTok: Label 'Trade Acc. Rec. Inv. Not Rec.', MaxLength = 100;
        TradeAccRecBillsCollTok: Label 'Trade Acc. Rec. Bills Coll.', MaxLength = 100;
        PendingReceivablesBillsHeadingTok: Label 'Pending Receivables Bills, Heading', MaxLength = 100;
        PendingReceivablesBillsTok: Label 'Pending Receivables Bills', MaxLength = 100;
        DiscountedBillsHeadingTok: Label 'Discounted Bills, Heading', MaxLength = 100;
        DiscountedBillsTok: Label 'Discounted Bills', MaxLength = 100;
        BillsOnCollectionManagHeadingTok: Label 'Bills on Collection Manag., Heading', MaxLength = 100;
        BillsOnCollectionManagTok: Label 'Bills on Collection Manag.', MaxLength = 100;
        UnpaidBillsOfExchangeHeadingTok: Label 'Unpaid Bills of Exchange, Heading', MaxLength = 100;
        UnpaidBillsOfExchangeTok: Label 'Unpaid Bills of Exchange', MaxLength = 100;
        TradeAccFactoringOpTok: Label 'Trade Acc, Factoring op.', MaxLength = 100;
        TradeAccRecAccGTok: Label 'Trade Acc. Rec. Acc. (G)', MaxLength = 100;
        GroupTrAccRecEuroHeadingTok: Label 'Group Tr. Acc. Rec. (Euro), Heading', MaxLength = 100;
        GroupTrAccRecEuroTok: Label 'Group Tr. Acc. Rec. (Euro)', MaxLength = 100;
        BillsOfExchRecGTok: Label 'Bills of Exch. Rec. (G)', MaxLength = 100;
        TrAccFactoringOpGTok: Label 'Tr. Acc. Factoring Op (G)', MaxLength = 100;
        ForCurrTrAccRecGTok: Label 'For. Curr. Tr. Acc. Rec. (G)', MaxLength = 100;
        TrAccRecRetEmptGTok: Label 'Tr. Acc. Rec. Ret. Empt. (G)', MaxLength = 100;
        GroupTrAccRecRetEmptTok: Label 'Group Tr. Acc. Rec. Ret. Empt.', MaxLength = 100;
        TrAccRecInvNotRecGTok: Label 'Tr. Acc Rec Inv Not Rec (G)', MaxLength = 100;
        TradeAcsRecAccATok: Label 'Trade Acs. Rec. Acc. (A)', MaxLength = 100;
        TrAccRecOtherVincCompTok: Label 'Tr. Acc Rec. Other Vinc. Comp.', MaxLength = 100;
        BadDoubtfulDebtsTok: Label 'Bad & Doubtful Debts', MaxLength = 100;
        TrAccRecRetEmptTok: Label 'Tr. Acc. Rec. Ret. Empt.', MaxLength = 100;
        TradeDebtorsCreditBalancesTok: Label 'Trade Debtors-Credit Balances', MaxLength = 100;
        StTrDebtAdvancesNationalTok: Label 'ST Tr. Debt Advances National', MaxLength = 100;
        StTrDebtAdvancesEuTok: Label 'ST Tr. Debt Advances EU', MaxLength = 100;
        StTrDebtAdvancesExportTok: Label 'ST Tr. Debt Advances Export', MaxLength = 100;
        OtherDebtorsTok: Label 'Other Debtors', MaxLength = 100;
        DebtorsHeadingTok: Label 'Debtors, Heading', MaxLength = 100;
        DebtorsEuroTok: Label 'Debtors (Euro)', MaxLength = 100;
        DebtorsTok: Label 'Debtors', MaxLength = 100;
        DebtorsForeignCurrTok: Label 'Debtors (Foreign Curr.)', MaxLength = 100;
        DebtorsInvNotRecTok: Label 'Debtors Inv. Not Rec.', MaxLength = 100;
        DebtorsBillsOfCollectionTok: Label 'Debtors Bills of Collection', MaxLength = 100;
        DebtorsReceivablesPendBillsTok: Label 'Debtors Receivables Pend Bills', MaxLength = 100;
        DebtorsDiscountedBillsTok: Label 'Debtors Discounted Bills', MaxLength = 100;
        DebtBillsOnCollManagTok: Label 'Debt. Bills on Coll. Manag.', MaxLength = 100;
        DebtorsUnpaidBillsTok: Label 'Debtors Unpaid Bills', MaxLength = 100;
        BadDoubtfulDebtTok: Label 'Bad & Doubtful Debt.', MaxLength = 100;
        DebtorsJointVenturesTok: Label 'Debtors Joint Ventures', MaxLength = 100;
        EmployeesTok: Label 'Employees', MaxLength = 100;
        RemunerationAdvancesHeadingTok: Label 'Remuneration Advances, Heading', MaxLength = 100;
        RemunerationAdvancesTok: Label 'Remuneration Advances', MaxLength = 100;
        PendingRemunerationsTok: Label 'Pending Remunerations', MaxLength = 100;
        PendingFixContribSistRemTok: Label 'Pending Fix Contrib Sist. Rem.', MaxLength = 100;
        GeneralGovernmentTok: Label 'General Government', MaxLength = 100;
        GovernmentReceivableTok: Label 'Government Receivable', MaxLength = 100;
        GovernmentVatReceivHeadingTok: Label 'Government-VAT Receiv., Heading', MaxLength = 100;
        GovernmentVatReceivTok: Label 'Government-VAT Receiv.', MaxLength = 100;
        GovernmentSubvReceivTok: Label 'Government-Subv. Receiv.', MaxLength = 100;
        GovernmentTaxReturnReceivTok: Label 'Government-Tax Return Receiv.', MaxLength = 100;
        SocialSecurityTok: Label 'Social Security', MaxLength = 100;
        SocialSecurityReceivableTok: Label 'Social Security Receivable', MaxLength = 100;
        ValueAddedTaxDeductTok: Label 'Value Added Tax Deduct.', MaxLength = 100;
        GovVatDeductibleTok: Label 'Gov. VAT Deductible', MaxLength = 100;
        GovDeducPaymOnAccHeadingTok: Label 'Gov. Deduc. & Paym. on Acc., Heading', MaxLength = 100;
        GovDeducPaymOnAccTok: Label 'Gov. Deduc. & Paym. on Acc.', MaxLength = 100;
        DeferredTaxAssetsTok: Label 'Deferred Tax Assets', MaxLength = 100;
        DeducTemporaryDifferencesTok: Label 'Deduc. Temporary Differences', MaxLength = 100;
        DeferredDeductDiscountsTok: Label 'Deferred Deduct. & Discounts', MaxLength = 100;
        CreditForLossesToCompTok: Label 'Credit for Losses to comp.', MaxLength = 100;
        GovernmentCreditorTok: Label 'Government Creditor', MaxLength = 100;
        GovernmentCreditorVatHeadingTok: Label 'Government Creditor/ VAT, Heading', MaxLength = 100;
        GovernmentCreditorVatTok: Label 'Government Creditor/ VAT', MaxLength = 100;
        GovernmentCreditorIrpfHeadingTok: Label 'Government Creditor/ IRPF, Heading', MaxLength = 100;
        GovernmentCreditorIrpfTok: Label 'Government Creditor/ IRPF', MaxLength = 100;
        GovCredCorpIncTaxHeadingTok: Label 'Gov. Cred./ Corp. Inc. Tax, Heading', MaxLength = 100;
        GovCredCorpIncTaxTok: Label 'Gov. Cred./ Corp. Inc. Tax', MaxLength = 100;
        GovCreditorSubvHeadingTok: Label 'Gov. Creditor Subv., Heading', MaxLength = 100;
        GovCreditorSubvTok: Label 'Gov. Creditor Subv.', MaxLength = 100;
        SocialSecurityCreditorHeadingTok: Label 'Social Security Creditor, Heading', MaxLength = 100;
        SocialSecurityCreditorTok: Label 'Social Security Creditor', MaxLength = 100;
        ValueAddTaxCollByCompTok: Label 'Value Add. Tax Coll. by Comp.', MaxLength = 100;
        VatCollByTheCompTok: Label 'VAT Coll. by the Comp.', MaxLength = 100;
        VatEuReversionTok: Label 'VAT EU Reversion', MaxLength = 100;
        DeferredProfitTaxTok: Label 'Deferred Profit Tax', MaxLength = 100;
        ChargSprOverSevPeriodsTok: Label 'Charg. Spr. over Sev. Periods', MaxLength = 100;
        PrepaymentsTok: Label 'Prepayments', MaxLength = 100;
        UnearnedIncomeTok: Label 'Unearned Income', MaxLength = 100;
        DetCreditValAndStVendTok: Label 'Det. Credit Val. and ST Vend.', MaxLength = 100;
        DetCreditValTradeOperTok: Label 'Det. Credit Val. Trade Oper.', MaxLength = 100;
        DetCreditValTradeOVinTok: Label 'Det. Credit Val. Trade O. Vin.', MaxLength = 100;
        DetCreditValTradeOGTok: Label 'Det. Credit Val. Trade. O.(G)', MaxLength = 100;
        DetCreditValTradeOATok: Label 'Det. Credit Val. Trade. O.(A)', MaxLength = 100;
        DetCreditValTradeOOvTok: Label 'Det. Credit Val. Trade. O.(OV)', MaxLength = 100;
        ProvForTradeTransactLiabilitiesTok: Label 'Prov. for Trade transact., Liabilities', MaxLength = 100;
        ProvForBurdensomeContractsTok: Label 'Prov. for burdensome contracts', MaxLength = 100;
        ProvForOtherTradeTransactTok: Label 'Prov. For other Trade transact', MaxLength = 100;
        FinancialAccountsTok: Label 'FINANCIAL ACCOUNTS', MaxLength = 100;
        ShortTermInvestmentsTok: Label 'Short Term Investments', MaxLength = 100;
        ShortTermDebentLoansTok: Label 'Short-Term Debent. Loans', MaxLength = 100;
        TreasureBillsTok: Label 'Treasure Bills', MaxLength = 100;
        ConvertibleDebentLoansTok: Label 'Convertible Debent. Loans', MaxLength = 100;
        StSharesLiabilityTok: Label 'ST Shares Liability', MaxLength = 100;
        DebtsAsMarketableSecTok: Label 'Debts as Marketable Sec.', MaxLength = 100;
        BorrowingsInterestsTok: Label 'Borrowings Interests', MaxLength = 100;
        DividendsLiabilityTok: Label 'Dividends Liability', MaxLength = 100;
        DeprMarketableSecTok: Label 'Depr. Marketable. Sec.', MaxLength = 100;
        DeprOblAndDebLoansTok: Label 'Depr. Obl. and Deb. Loans', MaxLength = 100;
        DeprConverOblAndDebLTok: Label 'Depr. Conver. Obl. and Deb.L.', MaxLength = 100;
        DeprOtherMarketableSecTok: Label 'Depr. Other Marketable. Sec.', MaxLength = 100;
        ShortTermDebtsWithVincTok: Label 'Short Term Debts with Vinc.', MaxLength = 100;
        StDebtsVincFinInstTok: Label 'ST Debts Vinc. Fin. Inst.', MaxLength = 100;
        LoansFromFinInstitGTok: Label 'Loans from Fin. Instit. (G)', MaxLength = 100;
        LoansFromFinInstitATok: Label 'Loans from Fin. Instit. (A)', MaxLength = 100;
        LoansFromFinInstitOthTok: Label 'Loans from Fin. Instit. (Oth.)', MaxLength = 100;
        FixedAssetCredVincCTok: Label 'Fixed Asset Cred. Vinc C.', MaxLength = 100;
        FixedAssetCredGTok: Label 'Fixed Asset Cred. (G)', MaxLength = 100;
        FixedAssetCreditorsATok: Label 'Fixed Asset Creditors (A)', MaxLength = 100;
        FixedAssetsCredOthTok: Label 'Fixed Assets Cred. (Oth.)', MaxLength = 100;
        StFinLeaseCredVincCTok: Label 'ST Fin Lease Cred. Vinc. C.', MaxLength = 100;
        StFinLeaseCredGTok: Label 'ST Fin Lease Cred., (G)', MaxLength = 100;
        StFinLeaseCredATok: Label 'ST Fin Lease Cred., (A)', MaxLength = 100;
        StFinLeaseCredOthTok: Label 'ST Fin Lease Cred., (Oth.)', MaxLength = 100;
        OtherStDebtsVincCTok: Label 'Other ST Debts Vinc. C.', MaxLength = 100;
        ShortTermDebtsGTok: Label 'Short Term Debts (G)', MaxLength = 100;
        ShortTermDebtsATok: Label 'Short Term Debts (A)', MaxLength = 100;
        ShortTermDebtsOthTok: Label 'Short Term Debts (Oth.)', MaxLength = 100;
        StDebtInterestsVincCTok: Label 'ST Debt Interests Vinc. C.', MaxLength = 100;
        DebtInterestsGTok: Label 'Debt Interests (G)', MaxLength = 100;
        DebtInterestsATok: Label 'Debt Interests (A)', MaxLength = 100;
        DebtInterestsOthTok: Label 'Debt Interests (Oth.)', MaxLength = 100;
        StLoansDebtTok: Label 'ST Loans Debt', MaxLength = 100;
        StLoansFromFinInstitutHeadingTok: Label 'ST Loans from Fin. Institut., Heading', MaxLength = 100;
        StLoansFromFinInstitutTok: Label 'ST Loans from Fin. Institut.', MaxLength = 100;
        ShortTermLoansPostingTok: Label 'Short-Term Loans, Posting', MaxLength = 100;
        StDebtsForCreditsTok: Label 'ST Debts for Credits', MaxLength = 100;
        DebtOnDiscountedBillsHeadingTok: Label 'Debt on Discounted Bills, Heading', MaxLength = 100;
        DebtOnDiscountedBillsTok: Label 'Debt on Discounted Bills', MaxLength = 100;
        DiscInvoiceDebtAccTok: Label 'Disc. Invoice Debt Acc.', MaxLength = 100;
        FactoringOpDebtAccTok: Label 'Factoring Op. Debt Acc.', MaxLength = 100;
        ShortTermLoansTok: Label 'Short-Term Loans', MaxLength = 100;
        DebtInSubvAndLegTok: Label 'Debt in Subv. And Leg.', MaxLength = 100;
        StFixedAssetCreditorsTok: Label 'ST Fixed Asset Creditors  ', MaxLength = 100;
        StFinLeaseCreditorsTok: Label 'ST Fin. Lease Creditors', MaxLength = 100;
        StBillOfExchPayTok: Label 'ST Bill of Exch. Pay.', MaxLength = 100;
        ActiveDividendToPayTok: Label 'Active Dividend to Pay', MaxLength = 100;
        ShortTermDebtIntCredInstTok: Label 'Short Term Debt Int. Cred.Inst', MaxLength = 100;
        ShortTermDebtInterestTok: Label 'Short Term Debt Interest', MaxLength = 100;
        ShortTermProvisionsTok: Label 'Short Term Provisions', MaxLength = 100;
        ProvisionForPensionsHeadingTok: Label 'Provision for Pensions, Heading', MaxLength = 100;
        TaxationReserveHeadingTok: Label 'Taxation Reserve, Heading', MaxLength = 100;
        ProvisionForResponsibilitiesHeadingTok: Label 'Provision for Responsibilities, Heading', MaxLength = 100;
        ProvisionForFaDismantleTok: Label 'Provision for FA dismantle', MaxLength = 100;
        ProvForEnvironmentalActHeadingTok: Label 'Prov. for environmental act., Heading', MaxLength = 100;
        ProvForRestructuringTok: Label 'Prov. for restructuring', MaxLength = 100;
        ProvForPaymLiabInstTok: Label 'Prov. for paym. Liab. Inst', MaxLength = 100;
        GroupAssocFinInvestmTok: Label 'Group/Assoc. Fin. Investm.', MaxLength = 100;
        StTradeInvestmVincTok: Label 'ST Trade Investm. Vinc.', MaxLength = 100;
        StTradeInvestmGTok: Label 'ST Trade Investm. (G)', MaxLength = 100;
        StTradeInvestmATok: Label 'ST Trade Investm. (A)', MaxLength = 100;
        StTradeInvestmOthTok: Label 'ST Trade Investm. (Oth.)', MaxLength = 100;
        StFixedIncomeSecVincTok: Label 'ST Fixed-Income Sec. Vinc.', MaxLength = 100;
        StFixedIncomeSecGTok: Label 'ST Fixed-Income Sec. (G)', MaxLength = 100;
        StFixedIncomeSecATok: Label 'ST Fixed-Income Sec. (A)', MaxLength = 100;
        StFixedIncomeSecOthTok: Label 'ST Fixed-Income Sec. (Oth.)', MaxLength = 100;
        StLoansToVincCompTok: Label 'ST Loans to Vinc. Comp.', MaxLength = 100;
        StLoansToGroupCTok: Label 'ST Loans to Group C.', MaxLength = 100;
        StLoansToACompTok: Label 'ST Loans to A Comp.', MaxLength = 100;
        StLoansToOtherVincCTok: Label 'ST Loans to Other Vinc. C.', MaxLength = 100;
        FinInvestmInterestVincTok: Label 'Fin. Investm. Interest Vinc.', MaxLength = 100;
        FinInvestmInterestGTok: Label 'Fin. Investm. Interest (G)', MaxLength = 100;
        FinInvestmInterestsATok: Label 'Fin. Investm. Interests (A)', MaxLength = 100;
        FinInvestmInterestsOthTok: Label 'Fin. Investm. Interests (Oth.)', MaxLength = 100;
        StInterestCreditsToVincTok: Label 'ST Interest Credits to Vinc.', MaxLength = 100;
        StInterestCreditsGTok: Label 'ST Interest Credits (G)', MaxLength = 100;
        StInterestCreditsATok: Label 'ST Interest Credits (A)', MaxLength = 100;
        StInterestCreditsOthTok: Label 'ST Interest Credits (Oth.)', MaxLength = 100;
        DividReceivFinInvInVincTok: Label 'Divid Receiv. Fin Inv. In Vinc', MaxLength = 100;
        DividReceivFinInvGTok: Label 'Divid Receiv. Fin Inv. (G)', MaxLength = 100;
        DividReceivFinInvATok: Label 'Divid Receiv. Fin Inv. (A)', MaxLength = 100;
        DividReceivFinInvOthTok: Label 'Divid Receiv. Fin Inv. (Oth.)', MaxLength = 100;
        StDemandExpendEqVincTok: Label 'ST Demand. Expend. Eq., Vinc', MaxLength = 100;
        StDemandExpendEqGTok: Label 'ST Demand. Expend. Eq., (G)', MaxLength = 100;
        StDemandExpendEqATok: Label 'ST Demand. Expend. Eq., (A)', MaxLength = 100;
        StDemandExpendEqOthTok: Label 'ST Demand. Expend. Eq., (Oth.)', MaxLength = 100;
        InterimFinancialInvestmTok: Label 'Interim Financial Investm.', MaxLength = 100;
        InvestmentsInCapitalInstTok: Label 'Investments in Capital Inst', MaxLength = 100;
        StFixedIncomeSecurityTok: Label 'ST Fixed-Income Security', MaxLength = 100;
        StFixedIncomeInvestmTok: Label 'ST Fixed-Income Investm.', MaxLength = 100;
        ShortTermLoansHeadingTok: Label 'Short-Term Loans, Heading', MaxLength = 100;
        StFaTransferenceLoansTok: Label 'ST FA Transference Loans', MaxLength = 100;
        StaffStCreditsTok: Label 'Staff ST Credits', MaxLength = 100;
        DividendsReceivableTok: Label 'Dividends Receivable', MaxLength = 100;
        SecuritiesStInterestsTok: Label 'Securities ST Interests', MaxLength = 100;
        StCreditsInterestsTok: Label 'ST Credits Interests', MaxLength = 100;
        ShortTermTaxationsTok: Label 'Short-Term Taxations', MaxLength = 100;
        StAmtsUncalledOnSharesTok: Label 'ST Amts Uncalled on Shares', MaxLength = 100;
        OtherNonBankAccountsTok: Label 'Other non Bank Accounts', MaxLength = 100;
        ProprietorsAccountTok: Label 'Proprietors Account', MaxLength = 100;
        PartnAdministrCheckingAccTok: Label 'Partn-Administr. Checking Acc.', MaxLength = 100;
        OthersCheckingAccTok: Label 'Others Checking Acc.', MaxLength = 100;
        GroupVincCheckingAccTok: Label 'Group Vinc. Checking Acc.', MaxLength = 100;
        AsocVincCheckingAccTok: Label 'Asoc Vinc. Checking Acc.', MaxLength = 100;
        OthersVincCheckingAccTok: Label 'Others Vinc. Checking Acc.', MaxLength = 100;
        MergeAndSplitCheckAccTok: Label 'Merge and Split Check. Acc.', MaxLength = 100;
        PartnersDissolvedSocietyTok: Label 'Partners, dissolved society', MaxLength = 100;
        PartnersMergeAccTok: Label 'Partners, merge acc.', MaxLength = 100;
        PartnersSplitSocietyTok: Label 'Partners, split society', MaxLength = 100;
        PartnersSplitAccTok: Label 'Partners, split acc.', MaxLength = 100;
        TemporaryJoinsChecAccTok: Label 'Temporary Joins Chec. Acc.', MaxLength = 100;
        UnappliedItemsTok: Label 'Unapplied Items', MaxLength = 100;
        DemandExpendOnEquityTok: Label 'Demand. Expend. On Equity', MaxLength = 100;
        DemandExpendEqGroupTok: Label 'Demand. Expend. Eq., Group', MaxLength = 100;
        DemandExpendEqAsocTok: Label 'Demand. Expend. Eq., Asoc', MaxLength = 100;
        DemandExpendEqOtVinTok: Label 'Demand. Expend. Eq., Ot Vin', MaxLength = 100;
        DemandExpendEqOthersTok: Label 'Demand. Expend. Eq., Others', MaxLength = 100;
        InterimActiveDividendsTok: Label 'Interim Active Dividends', MaxLength = 100;
        SharehPaymentCallableTok: Label 'Shareh. Payment Callable', MaxLength = 100;
        SharehPayCallSharesOrGTok: Label 'Shareh. Pay. Call. Shares or G', MaxLength = 100;
        SharehPayCallFinLiabTok: Label 'Shareh. Pay. Call. Fin Liab', MaxLength = 100;
        DerivativeInstrumentStTok: Label 'Derivative Instrument ST', MaxLength = 100;
        StFinDerivAssetsPortfolioTok: Label 'ST Fin Deriv Assets, portfolio', MaxLength = 100;
        AssetsDerivInstStCovInsTok: Label 'Assets Deriv. Inst ST,cov ins', MaxLength = 100;
        LiabDerivInstStPortfolioTok: Label 'Liab. Deriv Inst ST, portfolio', MaxLength = 100;
        LiabDerivInstStCovInsTok: Label 'Liab. Deriv Inst ST, cov ins', MaxLength = 100;
        SecDepositsReceivGuarantTok: Label 'Sec-Deposits (Receiv-Guarant)', MaxLength = 100;
        ShortTermGuaranteesReceivTok: Label 'Short Term Guarantees Receiv.', MaxLength = 100;
        ShortTermDepositsReceivTok: Label 'Short Term Deposits Receiv.', MaxLength = 100;
        ShortTermGuaranteedSecTok: Label 'Short Term Guaranteed Sec.', MaxLength = 100;
        ShortTermGuarantDepositsTok: Label 'Short Term Guarant. Deposits', MaxLength = 100;
        InterestPaidInAdvanceTok: Label 'Interest paid in advance', MaxLength = 100;
        InterestReceivedInAdvanceTok: Label 'Interest received in advance', MaxLength = 100;
        FinancialGuaranteesStTok: Label 'Financial guarantees ST', MaxLength = 100;
        CashFlowTok: Label 'Cash Flow', MaxLength = 100;
        CashEuroHeadingTok: Label 'Cash - Euro, Heading', MaxLength = 100;
        CashEuroTok: Label 'Cash - Euro', MaxLength = 100;
        CashForeignCurrencyTok: Label 'Cash - Foreign Currency', MaxLength = 100;
        BanksAccountAtSightEuroTok: Label 'Banks Account at Sight Euro', MaxLength = 100;
        BanksEuroTok: Label 'Banks Euro', MaxLength = 100;
        BanksAccAtSightFCurrTok: Label 'Banks Acc. at Sight F. Curr.', MaxLength = 100;
        BanksForeignCurrencyTok: Label 'Banks Foreign Currency', MaxLength = 100;
        BanksSavingAccEuroTok: Label 'Banks Saving Acc. Euro', MaxLength = 100;
        SavingAccountTok: Label 'Saving Account', MaxLength = 100;
        BanksSavingAccForCurrTok: Label 'Banks Saving Acc. For. Curr.', MaxLength = 100;
        HighLiqStInvestmTok: Label 'High Liq ST Investm.', MaxLength = 100;
        NonCurrentAssetsForSaleTok: Label 'Non Current Assets for Sale', MaxLength = 100;
        InvestmWithVincCompTok: Label 'Investm. with Vinc. Comp.', MaxLength = 100;
        FinancialInvestmentsTok: Label 'Financial Investments', MaxLength = 100;
        InventoryTradeDebtorsTok: Label 'Inventory, trade debtors', MaxLength = 100;
        OtherAssetsTok: Label 'Other assets', MaxLength = 100;
        ProvisionsTok: Label 'Provisions', MaxLength = 100;
        SpecialCharactDebtsTok: Label 'Special Charact. Debts', MaxLength = 100;
        DebtsWithVincCompTok: Label 'Debts with Vinc. Comp.', MaxLength = 100;
        TradeCreditorsAndOthPayTok: Label 'Trade Creditors and Oth. Pay.', MaxLength = 100;
        DetValueFinancialProductsTok: Label 'Det. Value Financial Products', MaxLength = 100;
        DetValueStPartVincTok: Label 'Det. Value ST part. Vinc.', MaxLength = 100;
        DetValueStPartGTok: Label 'Det. Value ST part. (G)', MaxLength = 100;
        DetValueStPartATok: Label 'Det. Value ST part. (A)', MaxLength = 100;
        DetValueStSecVincCTok: Label 'Det. Value ST Sec, Vinc.C', MaxLength = 100;
        DetValueStSecGTok: Label 'Det. Value ST Sec, (G)', MaxLength = 100;
        DetValueStSecATok: Label 'Det. Value ST Sec, (A)', MaxLength = 100;
        DetValueStSecOVinTok: Label 'Det. Value ST Sec, (O Vin)', MaxLength = 100;
        DetValueStCreditsToVincTok: Label 'Det. Value ST Credits to Vinc.', MaxLength = 100;
        DetValueStCreditsToGTok: Label 'Det. Value ST Credits to G.', MaxLength = 100;
        DetValueStCreditsToAsTok: Label 'Det. Value ST Credits to As.', MaxLength = 100;
        DetValueStCreditsToOtVTok: Label 'Det. Value ST Credits to Ot.V.', MaxLength = 100;
        DetValueStSecuritiesTok: Label 'Det. Value ST Securities', MaxLength = 100;
        DetValueStCreditsTok: Label 'Det. Value ST Credits', MaxLength = 100;
        DetValNoncurrAForSaleTok: Label 'Det Val Noncurr. A For Sale', MaxLength = 100;
        DetValFixNoncAForSaleTok: Label 'Det Val Fix Nonc A For Sale', MaxLength = 100;
        DetValRelatedInvesForSaleTok: Label 'Det Val Related Inves For Sale', MaxLength = 100;
        DetValFinInvestForSaleTok: Label 'Det. Val. Fin. Invest For Sale', MaxLength = 100;
        DetValStocksDebtsAndOthTok: Label 'Det. Val Stocks, Debts and Oth', MaxLength = 100;
        DetValOtherAForSaleTok: Label 'Det. Val. Other A For Sale', MaxLength = 100;
        CostAndExpenseAccountsTok: Label 'COST AND EXPENSE ACCOUNTS', MaxLength = 100;
        PurchasesTok: Label 'Purchases', MaxLength = 100;
        PurchasesOfGoodsForResaleTok: Label 'Purchases of Goods for Resale', MaxLength = 100;
        NationalPurchasesTok: Label 'National Purchases', MaxLength = 100;
        EuPurchasesTok: Label 'EU Purchases', MaxLength = 100;
        IntNonEuPurchTok: Label 'Int. (Non-EU) Purch.', MaxLength = 100;
        PurchForRawMaterialsTok: Label 'Purch. for Raw Materials', MaxLength = 100;
        PurchForNatRawMatTok: Label 'Purch. for Nat. Raw Mat.', MaxLength = 100;
        PurchForEuRawMatTok: Label 'Purch. for EU Raw Mat.', MaxLength = 100;
        PurchIntNonEuRawMatTok: Label 'Purch. Int. (Non-EU) Raw Mat.', MaxLength = 100;
        PurchasesForConsumablesTok: Label 'Purchases for Consumables', MaxLength = 100;
        DiscAllowedOnPurchTok: Label 'Disc. Allowed on Purch.', MaxLength = 100;
        DiscAllowOnPurchFinGoodsTok: Label 'Disc Allow. on Purch,Fin Goods', MaxLength = 100;
        DiscAllowOnPurFinGoodNTok: Label 'Disc Allow on Pur,Fin Good (N)', MaxLength = 100;
        DiscAllowOnPurFinGoodEuTok: Label 'Disc Allow on Pur,Fin Good(EU)', MaxLength = 100;
        DiscAllowOnPurFinGoodITok: Label 'Disc Allow on Pur,Fin Good (I)', MaxLength = 100;
        DiscAllowOnPurchRawMatTok: Label 'Disc Allow. on Purch, Raw Mat', MaxLength = 100;
        DiscAllowOnPurcRawMatNTok: Label 'Disc Allow on Purc,Raw Mat (N)', MaxLength = 100;
        DiscAllowOnPurcRawMatEuTok: Label 'Disc Allow on Purc,Raw Mat(EU)', MaxLength = 100;
        DiscAllowOnPurcRawMatITok: Label 'Disc Allow on Purc,Raw Mat (I)', MaxLength = 100;
        DiscAllowOnPurchOthersTok: Label 'Disc Allow. on Purch, Others', MaxLength = 100;
        DiscAllowOnPurcOthersNTok: Label 'Disc Allow on Purc,Others (N)', MaxLength = 100;
        DiscAllowOnPurcOthersEuTok: Label 'Disc Allow on Purc,Others(EU)', MaxLength = 100;
        DiscAllowOnPurcOthersITok: Label 'Disc Allow on Purc,Others (I)', MaxLength = 100;
        WorkDoneByOtherCompTok: Label 'Work Done by Other Comp.', MaxLength = 100;
        PurchaseReturnsTok: Label 'Purchase Returns', MaxLength = 100;
        GoodsPurchasedReturnsTok: Label 'Goods Purchased Returns', MaxLength = 100;
        NationalReturnsTok: Label 'National Returns', MaxLength = 100;
        EuReturnsTok: Label 'EU Returns', MaxLength = 100;
        InternationalNonEuRetTok: Label 'International (Non-EU) Ret.', MaxLength = 100;
        MiscellaneousReturnsTok: Label 'Miscellaneous Returns', MaxLength = 100;
        RawMatPurchasedReturnsTok: Label 'Raw Mat. Purchased Returns', MaxLength = 100;
        ConsumPurchasedReturnsTok: Label 'Consum. Purchased Returns', MaxLength = 100;
        PurchasesReturnAllowTok: Label 'Purchases Return & Allow.', MaxLength = 100;
        GoodsPurchReturnAllowTok: Label 'Goods Purch. Return & Allow.', MaxLength = 100;
        ReturnAndAllowOnGoodsTok: Label 'Return and Allow. on Goods', MaxLength = 100;
        RawMatPurchRetAllowTok: Label 'Raw Mat. Purch. Ret. & Allow.', MaxLength = 100;
        ReturnAllowOnRawMatTok: Label 'Return & Allow. on Raw Mat.', MaxLength = 100;
        ConsumPurchRetAllowTok: Label 'Consum. Purch. Ret. & Allow.', MaxLength = 100;
        ChangesInStockHeadingTok: Label 'Changes in Stock, Heading', MaxLength = 100;
        ChangesInStockTok: Label 'Changes in Stock', MaxLength = 100;
        ChangesInStockPostingTok: Label 'Changes in Stock, Posting', MaxLength = 100;
        ChangesInRawMaterialsHeadingTok: Label 'Changes in raw materials, Heading', MaxLength = 100;
        ChangesInRawMaterialsTok: Label 'Changes in raw materials', MaxLength = 100;
        ChgInSuppOtherConsumTok: Label 'Chg. in Supp. & Other Consum.', MaxLength = 100;
        ExternalChargesForServicesTok: Label 'External Charges for Services', MaxLength = 100;
        ResearchAndDevelopmentTok: Label 'Research and Development', MaxLength = 100;
        ProjectsTok: Label 'Projects', MaxLength = 100;
        LeaseAndRoyaltiesTok: Label 'Lease and Royalties', MaxLength = 100;
        LeaseChargesPostingTok: Label 'Lease Charges, Posting', MaxLength = 100;
        MaintenancesAndRepairsTok: Label 'Maintenances and Repairs', MaxLength = 100;
        RepairsTok: Label 'Repairs', MaxLength = 100;
        ProfessionalServicesTok: Label 'Professional Services', MaxLength = 100;
        InternalResourcesTok: Label 'Internal Resources', MaxLength = 100;
        ConsultingTok: Label 'Consulting', MaxLength = 100;
        ProfessionalAdvisoryServicesTok: Label 'Professional Advisory Services', MaxLength = 100;
        ProjectCostsRetailTok: Label 'Project Costs, Retail', MaxLength = 100;
        ProjectCostsAdjustmentTok: Label 'Project Costs Adjustment', MaxLength = 100;
        ProjectCostsRecognizedTok: Label 'Project Costs (Recognized)', MaxLength = 100;
        ProjectsCostsRawMaterialTok: Label 'Projects Costs, Raw Material', MaxLength = 100;
        ProjectsCostsResourcesTok: Label 'Projects Costs, Resources', MaxLength = 100;
        TransportationHeadingTok: Label 'Transportation, Heading', MaxLength = 100;
        TransportationTok: Label 'Transportation', MaxLength = 100;
        FuelTok: Label 'Fuel', MaxLength = 100;
        InsurancePremiumsHeadingTok: Label 'Insurance Premiums, Heading', MaxLength = 100;
        InsurancePremiumsTok: Label 'Insurance Premiums', MaxLength = 100;
        BankingServicesHeadingTok: Label 'Banking Services, Heading', MaxLength = 100;
        BankingServicesTok: Label 'Banking Services', MaxLength = 100;
        AdvertisingPublicRelationsTok: Label 'Advertising/Public Relations', MaxLength = 100;
        SuppliesTok: Label 'Supplies', MaxLength = 100;
        ElectricityTok: Label 'Electricity', MaxLength = 100;
        WaterTok: Label 'Water', MaxLength = 100;
        OtherSuppliesTok: Label 'Other Supplies', MaxLength = 100;
        OtherServicesHeadingTok: Label 'Other Services, Heading', MaxLength = 100;
        OtherServicesTok: Label 'Other Services', MaxLength = 100;
        OtherBusinessExpensesTok: Label 'Other Business Expenses', MaxLength = 100;
        TaxTok: Label 'Tax', MaxLength = 100;
        ProfitTaxHeadingTok: Label 'Profit Tax, Heading', MaxLength = 100;
        RunningTaxTok: Label 'Running Tax', MaxLength = 100;
        ProfitTaxTok: Label 'Profit Tax', MaxLength = 100;
        DeferredTaxTok: Label 'Deferred Tax', MaxLength = 100;
        OtherTaxesHeadingTok: Label 'Other Taxes, Heading', MaxLength = 100;
        OtherTaxesTok: Label 'Other Taxes', MaxLength = 100;
        NegativeAdjustmOnProfitsTok: Label 'Negative Adjustm. on Profits', MaxLength = 100;
        NegativeAdjustmIndivTaxTok: Label 'Negative Adjustm. Indiv. Tax', MaxLength = 100;
        NegativeAdjustmRunningActTok: Label 'Negative Adjustm. Running. Act', MaxLength = 100;
        NegativeAdjustmInvestTaxTok: Label 'Negative Adjustm. Invest. Tax', MaxLength = 100;
        TaxRefundsTok: Label 'Tax Refunds', MaxLength = 100;
        PositiveAdjustmOnProfitsTok: Label 'Positive Adjustm. on Profits', MaxLength = 100;
        PositiveAdjustmIndivTaxTok: Label 'Positive Adjustm. Indiv. Tax', MaxLength = 100;
        PositiveAdjustmRunningActTok: Label 'Positive Adjustm. Running. Act', MaxLength = 100;
        PositiveAdjustmInvestTaxTok: Label 'Positive Adjustm. Invest. Tax', MaxLength = 100;
        WagesAndSalariesHeadingTok: Label 'Wages and Salaries, Heading', MaxLength = 100;
        WagesAndSalariesTok: Label 'Wages and Salaries', MaxLength = 100;
        PrizesTok: Label 'Prizes', MaxLength = 100;
        PensionFundsTok: Label 'Pension Funds', MaxLength = 100;
        CompensationsTok: Label 'Compensations', MaxLength = 100;
        SocialSecPaidByCompanyHeadingTok: Label 'Social Sec. Paid by Company, Heading', MaxLength = 100;
        SocialSecPaidByCompanyTok: Label 'Social Sec. Paid by Company', MaxLength = 100;
        LtFeeInFixedContribSistTok: Label 'LT Fee in Fixed Contrib Sist', MaxLength = 100;
        LtFeeInFixedProvisionSisTok: Label 'LT Fee in Fixed Provision Sis', MaxLength = 100;
        AnnualContributionsTok: Label 'Annual Contributions', MaxLength = 100;
        OtherCostsTok: Label 'Other costs', MaxLength = 100;
        FeesByEquityProductsTok: Label 'Fees by Equity products', MaxLength = 100;
        PersonnelRetEqProdTok: Label 'Personnel Ret. Eq. Prod.', MaxLength = 100;
        PersonnelRetCashEqProdTok: Label 'Personnel Ret. Cash Eq. Prod.', MaxLength = 100;
        OtherSocialExpensesTok: Label 'Other Social Expenses', MaxLength = 100;
        BadDebtLossesTok: Label 'Bad Debt Losses', MaxLength = 100;
        PartnershipsAndOthersTok: Label 'Partnerships and Others', MaxLength = 100;
        TransferredProfitAdminTok: Label 'Transferred Profit (admin)', MaxLength = 100;
        TransferredLossParticipantTok: Label 'Transferred Loss (participant)', MaxLength = 100;
        OtherOperatingLossesTok: Label 'Other Operating Losses', MaxLength = 100;
        FinancialExpensesTok: Label 'Financial Expenses', MaxLength = 100;
        FinExpProvUpdatesTok: Label 'Fin. Exp. Prov. Updates', MaxLength = 100;
        InterestDebentLoansTok: Label 'Interest Debent. Loans', MaxLength = 100;
        LtInterestDebentLoansGTok: Label 'LT Interest Debent. Loans (G)', MaxLength = 100;
        LtInterestDebentLoansATok: Label 'LT Interest Debent. Loans (A)', MaxLength = 100;
        LtInterestDebentLoansOvTok: Label 'LT Interest Debent. Loans (OV)', MaxLength = 100;
        LtInterestDebentLoansOtTok: Label 'LT Interest Debent. Loans (Ot)', MaxLength = 100;
        StInterestDebentLoansGTok: Label 'ST Interest Debent. Loans (G)', MaxLength = 100;
        StInterestDebentLoansATok: Label 'ST Interest Debent. Loans (A)', MaxLength = 100;
        StInterestDebentLoansOvTok: Label 'ST Interest Debent. Loans (OV)', MaxLength = 100;
        StInterestDebentLoansOtTok: Label 'ST Interest Debent. Loans (Ot)', MaxLength = 100;
        DebtInterestTok: Label 'Debt Interest', MaxLength = 100;
        DebtInterestGroupTok: Label 'Debt Interest (Group)', MaxLength = 100;
        DebtInterestAssocTok: Label 'Debt Interest (Assoc.)', MaxLength = 100;
        DebtInterestOtVincTok: Label 'Debt Interest (Ot.Vinc.)', MaxLength = 100;
        DebtInterestFinInsTok: Label 'Debt Interest (Fin.Ins.)', MaxLength = 100;
        DebtInterestOtherTok: Label 'Debt Interest (Other)', MaxLength = 100;
        LossesFinInstValueFVTok: Label 'Losses Fin. Inst. Value F.V.', MaxLength = 100;
        PortfolioLossesTok: Label 'Portfolio Losses', MaxLength = 100;
        LossesAssignByCompTok: Label 'Losses Assign. By Comp.', MaxLength = 100;
        LossesAvailForSaleTok: Label 'Losses Avail. for Sale', MaxLength = 100;
        CoverageInstLossesTok: Label 'Coverage Inst. Losses', MaxLength = 100;
        DividendLiabilityTok: Label 'Dividend Liability', MaxLength = 100;
        DividendLiabilityGTok: Label 'Dividend Liability, (G)', MaxLength = 100;
        DividendLiabilityATok: Label 'Dividend Liability, (A)', MaxLength = 100;
        DividendLiabilityOVinTok: Label 'Dividend Liability, (O Vin)', MaxLength = 100;
        DividendLiabilityOthTok: Label 'Dividend Liability, (Oth)', MaxLength = 100;
        InterestOnBillsDiscTok: Label 'Interest on Bills Disc.', MaxLength = 100;
        IntOnBillsDiscFinInsGTok: Label 'Int. on Bills Disc Fin Ins (G)', MaxLength = 100;
        IntOnBillsDiscFinInsATok: Label 'Int. on Bills Disc Fin Ins (A)', MaxLength = 100;
        IntOnBillsDiscFinInsVTok: Label 'Int. on Bills Disc Fin Ins (V)', MaxLength = 100;
        InterestOnBillsDiscOthTok: Label 'Interest on Bills Disc. (Oth)', MaxLength = 100;
        InterestOnBillsDiscountedTok: Label 'Interest on Bills Discounted', MaxLength = 100;
        FactOpInterBanksGTok: Label 'Fact Op Inter., Banks (G)', MaxLength = 100;
        FactOpInterBanksATok: Label 'Fact Op Inter., Banks (A)', MaxLength = 100;
        FactOpInterBanksVTok: Label 'Fact Op Inter., Banks (V)', MaxLength = 100;
        FactOpInterOtherBanksHeadingTok: Label 'Fact Op Inter., Other banks, Heading', MaxLength = 100;
        FactOpInterOtherBanksTok: Label 'Fact Op Inter., Other banks', MaxLength = 100;
        SecuritiesLossTok: Label 'Securities Loss', MaxLength = 100;
        LtSecuritiesLossGTok: Label 'LT Securities Loss, (G)', MaxLength = 100;
        LtSecuritiesLossATok: Label 'LT Securities Loss, (A)', MaxLength = 100;
        LtSecuritiesLossOVinTok: Label 'LT Securities Loss, (O Vin)', MaxLength = 100;
        LtSecuritiesLossOthTok: Label 'LT Securities Loss, (Oth)', MaxLength = 100;
        StSecuritiesLossGTok: Label 'ST Securities Loss, (G)', MaxLength = 100;
        StSecuritiesLossATok: Label 'ST Securities Loss, (A)', MaxLength = 100;
        StSecuritiesLossOVinTok: Label 'ST Securities Loss, (O Vin)', MaxLength = 100;
        StSecuritiesLossOthTok: Label 'ST Securities Loss, (Oth)', MaxLength = 100;
        LoanLossTok: Label 'Loan Loss', MaxLength = 100;
        LtLoanLossGTok: Label 'LT Loan Loss, (G)', MaxLength = 100;
        LtLoanLossATok: Label 'LT Loan Loss, (A)', MaxLength = 100;
        LtLoanLossOVinTok: Label 'LT Loan Loss, (O Vin)', MaxLength = 100;
        LtLoanLossOthTok: Label 'LT Loan Loss, (Oth)', MaxLength = 100;
        StLoanLossGTok: Label 'ST Loan Loss, (G)', MaxLength = 100;
        StLoanLossATok: Label 'ST Loan Loss, (A)', MaxLength = 100;
        StLoanLossOVinTok: Label 'ST Loan Loss, (O Vin)', MaxLength = 100;
        StLoanLossOthTok: Label 'ST Loan Loss, (Oth)', MaxLength = 100;
        RealizedLossesOnExchangeHeadingTok: Label 'Realized Losses on Exchange, Heading', MaxLength = 100;
        RealLossExchInternEurHeadingTok: Label 'Real. Loss. Exch (Intern/Eur), Heading', MaxLength = 100;
        RealLossExchInternEurTok: Label 'Real. Loss. Exch (Intern/Eur)', MaxLength = 100;
        OtherRealLossesOnExchTok: Label 'Other Real. Losses on Exch.', MaxLength = 100;
        RealizedLossesOnExchangeTok: Label 'Realized Losses on Exchange', MaxLength = 100;
        OtherFinancialExpensesHeadingExpensesTok: Label 'Other Financial Expenses, Heading-Expenses', MaxLength = 100;
        ExpenOnRoundOffEurHeadingTok: Label 'Expen. on Round. Off Eur, Heading', MaxLength = 100;
        ExpenOnRoundOffEurTok: Label 'Expen. on Round. Off Eur', MaxLength = 100;
        NegativeBalanceOnSettlTok: Label 'Negative Balance on Settl.', MaxLength = 100;
        OtherFinancialExpensesHeadingTok: Label 'Other Financial Expenses, Heading', MaxLength = 100;
        OtherFinancialExpensesTok: Label 'Other Financial Expenses', MaxLength = 100;
        OtherFinExpBillRejectTok: Label 'Other Fin Exp Bill Reject', MaxLength = 100;
        ExcepExtrItemsExpTok: Label 'Excep. & Extr. Items-Exp.', MaxLength = 100;
        LossOnIntangATransfTok: Label 'Loss on Intang. A Transf.', MaxLength = 100;
        LossOnTangAssetsTransfHeadingTok: Label 'Loss on Tang. Assets Transf., Heading', MaxLength = 100;
        LossOnTangAssetsTransfTok: Label 'Loss on Tang. Assets Transf.', MaxLength = 100;
        LossOnPropertiesInvestmTok: Label 'Loss on Properties Investm.', MaxLength = 100;
        LossOnLtEqInvestVinCTok: Label 'Loss on LT Eq. Invest, Vin. C.', MaxLength = 100;
        LossOnLtEqInvestGTok: Label 'Loss on LT Eq. Invest (G)', MaxLength = 100;
        LossOnLtEqInvestATok: Label 'Loss on LT Eq. Invest (A)', MaxLength = 100;
        LossOnLtEqInvestOVinTok: Label 'Loss on LT Eq. Invest (O Vin)', MaxLength = 100;
        LossOnDebentLoansTok: Label 'Loss on Debent Loans', MaxLength = 100;
        DeprecAmortizOfFaTok: Label 'Deprec. & Amortiz. of FA', MaxLength = 100;
        DeprOfIntangAssetsTok: Label 'Depr. of Intang. Assets', MaxLength = 100;
        DeprOfTangAssetsHeadingTok: Label 'Depr. of Tang. Assets, Heading', MaxLength = 100;
        DeprOfTangAssetsTok: Label 'Depr. of Tang. Assets', MaxLength = 100;
        DeprOnPropertiesInvestmTok: Label 'Depr. on Properties Investm.', MaxLength = 100;
        DetLossesAndOthersTok: Label 'Det. Losses and others', MaxLength = 100;
        DetLossOnIntangibleATok: Label 'Det. Loss on Intangible A', MaxLength = 100;
        DetLossOnTangibleATok: Label 'Det. Loss on Tangible A', MaxLength = 100;
        DetLossOnPropertiesInvestTok: Label 'Det. Loss on Properties Invest', MaxLength = 100;
        DetLossOnInventoryTok: Label 'Det. Loss on Inventory', MaxLength = 100;
        DetLossOnFinishAndWipTok: Label 'Det. Loss on Finish.and WIP', MaxLength = 100;
        DetLossOnGoodsTok: Label 'Det. Loss on Goods', MaxLength = 100;
        DetLossOnRawMatTok: Label 'Det. Loss on Raw Mat.', MaxLength = 100;
        DetLossOnSupOtConsTok: Label 'Det. Loss on Sup&Ot.Cons.', MaxLength = 100;
        DetLossOnTradeCreditsTok: Label 'Det. Loss on Trade Credits', MaxLength = 100;
        ProvForTradeTransactHeadingTok: Label 'Prov. for Trade transact., Heading', MaxLength = 100;
        OnerousContractsTok: Label 'Onerous Contracts', MaxLength = 100;
        OtherTradeTransactTok: Label 'Other Trade transact.', MaxLength = 100;
        LossesDetLtSecuritiesTok: Label 'Losses Det. LT Securities', MaxLength = 100;
        LossesDetLtCapitalInstGTok: Label 'Losses Det LT Capital Inst,(G)', MaxLength = 100;
        LossesDetLtCapitalInstATok: Label 'Losses Det LT Capital Inst,(A)', MaxLength = 100;
        LossesDetLtCapitalInsOvTok: Label 'Losses Det LT Capital Ins,(OV)', MaxLength = 100;
        LossesDetLtCapitalInsOTok: Label 'Losses Det. LT Capital Ins,(O)', MaxLength = 100;
        LossesDetLtSecGTok: Label 'Losses Det. LT Sec., (G)', MaxLength = 100;
        LossesDetLtSecATok: Label 'Losses Det. LT Sec., (A)', MaxLength = 100;
        LossesDetLtSecOVinTok: Label 'Losses Det. LT Sec., (O Vin)', MaxLength = 100;
        LossesDetLtSecOthTok: Label 'Losses Det. LT Sec., (Oth)', MaxLength = 100;
        LossesDetLtCreditsTok: Label 'Losses Det. LT Credits', MaxLength = 100;
        LossesDetLtCreditsGTok: Label 'Losses Det. LT Credits, (G)', MaxLength = 100;
        LossesDetLtCreditsATok: Label 'Losses Det. LT Credits, (A)', MaxLength = 100;
        LossesDetLtCreditsOVTok: Label 'Losses Det. LT Credits, (O V)', MaxLength = 100;
        LossesDetLtCreditsOthTok: Label 'Losses Det. LT Credits, (Oth)', MaxLength = 100;
        LossesDetStSecuritiesTok: Label 'Losses Det. ST Securities', MaxLength = 100;
        LossesDetStCapitalInstGTok: Label 'Losses Det ST Capital Inst,(G)', MaxLength = 100;
        LossesDetStCapitalInstATok: Label 'Losses Det ST Capital Inst,(A)', MaxLength = 100;
        LossesDetStCapitalInsOvTok: Label 'Losses Det ST Capital Ins,(OV)', MaxLength = 100;
        LossesDetStCapitalInstOTok: Label 'Losses Det ST Capital Inst,(O)', MaxLength = 100;
        LossesDetStSecuritiesGTok: Label 'Losses Det. ST Securities, (G)', MaxLength = 100;
        LossesDetStSecuritiesATok: Label 'Losses Det. ST Securities, (A)', MaxLength = 100;
        LossesDetStSecuritiesOvTok: Label 'Losses Det. ST Securities,(OV)', MaxLength = 100;
        LossesDetStSecuritiesOTok: Label 'Losses Det. ST Securities, (O)', MaxLength = 100;
        LossesDetStCreditsTok: Label 'Losses Det. ST Credits', MaxLength = 100;
        LossesDetStCreditsGTok: Label 'Losses Det. ST Credits, (G)', MaxLength = 100;
        LossesDetStCreditsATok: Label 'Losses Det. ST Credits, (A)', MaxLength = 100;
        LossesDetStCreditsOVTok: Label 'Losses Det. ST Credits, (O V)', MaxLength = 100;
        LossesDetStCreditsOthTok: Label 'Losses Det. ST Credits, (Oth)', MaxLength = 100;
        SalesAndIncomeTok: Label 'SALES AND INCOME', MaxLength = 100;
        GoodsSalesServicesTok: Label 'Goods Sales Services', MaxLength = 100;
        GoodsSalesHeadingTok: Label 'Goods Sales, Heading', MaxLength = 100;
        GoodsSalesTok: Label 'Goods Sales', MaxLength = 100;
        NationalGoodsSalesTok: Label 'National Goods Sales', MaxLength = 100;
        GoodsSalesEuTok: Label 'Goods Sales EU', MaxLength = 100;
        IntNonEuGoodsSalesTok: Label 'Int. (Non-EU) Goods Sales', MaxLength = 100;
        RawMaterialsSalesTok: Label 'Raw Materials Sales', MaxLength = 100;
        NationalRawMatSalesTok: Label 'National Raw Mat. Sales', MaxLength = 100;
        EuRawMaterialsSalesTok: Label 'EU Raw Materials Sales', MaxLength = 100;
        IntRawMatSalesTok: Label 'Int. Raw Mat. Sales', MaxLength = 100;
        FinishedGoodsSalesTok: Label 'Finished Goods Sales', MaxLength = 100;
        SemiManufPartsSalesTok: Label 'Semi-Manuf. Parts Sales', MaxLength = 100;
        ByProductsScrapSalesTok: Label 'By Products & Scrap Sales', MaxLength = 100;
        RetEmpPackSalesTok: Label 'Ret. Emp. & Pack. Sales', MaxLength = 100;
        ProvisionOfServicesHeadingTok: Label 'Provision of Services, Heading', MaxLength = 100;
        ProvisionOfServicesTok: Label 'Provision of Services', MaxLength = 100;
        InternalResourcesPostingTok: Label 'Internal Resources, Posting', MaxLength = 100;
        ProjectsSalesTok: Label 'Projects Sales', MaxLength = 100;
        OtherServicesPostingTok: Label 'Other Services, Posting', MaxLength = 100;
        ProjectsSalesAdjustmentTok: Label 'Projects Sales Adjustment', MaxLength = 100;
        ProjectsSalesRecognizedTok: Label 'Projects Sales (Recognized)', MaxLength = 100;
        NationalServicesTok: Label 'National Services', MaxLength = 100;
        EuServicesTok: Label 'EU Services', MaxLength = 100;
        IntServicesNonEuTok: Label 'Int. Services (Non-EU)', MaxLength = 100;
        TotalSaleOfServContractsTok: Label 'Total Sale of Serv. Contracts', MaxLength = 100;
        ServiceContractSaleTok: Label 'Service Contract Sale', MaxLength = 100;
        SalesOfServiceContractsTok: Label 'Sales of Service Contracts', MaxLength = 100;
        DiscAllowedOnSalesTok: Label 'Disc. Allowed on Sales', MaxLength = 100;
        DiscAllowedOnSalesGoodsTok: Label 'Disc. Allowed on Sales, Goods', MaxLength = 100;
        DiscAllowOnSalesGoodsNTok: Label 'Disc Allow on Sales, Goods (N)', MaxLength = 100;
        DiscAllowOnSalesGoodsEuTok: Label 'Disc Allow on Sales, Goods(EU)', MaxLength = 100;
        DiscAllowOnSalesGoodsITok: Label 'Disc Allow on Sales, Goods (I)', MaxLength = 100;
        DiscAllowOnSalesFinGoodsTok: Label 'Disc Allow. on Sales,Fin Goods', MaxLength = 100;
        DiscAllowOnSalFinGoodsNTok: Label 'Disc Allow on Sal,Fin Goods(N)', MaxLength = 100;
        DiscAllowOnSFinGoodsEuTok: Label 'Disc Allow on S,Fin Goods(EU)', MaxLength = 100;
        DiscAllowOnSFinGoodsITok: Label 'Disc Allow on S,Fin Goods (I)', MaxLength = 100;
        DiscAllowOnSalesSemiManufTok: Label 'Disc Allow on Sales,Semi-Manuf', MaxLength = 100;
        DiscAllowOnSSemiManufNTok: Label 'Disc Allow on S,Semi-Manuf (N)', MaxLength = 100;
        DiscAllowOnSSemiManufEuTok: Label 'Disc Allow on S,Semi-Manuf(EU)', MaxLength = 100;
        DiscAllowOnSSemiManufITok: Label 'Disc Allow on S,Semi-Manuf (I)', MaxLength = 100;
        DiscAllOnSalProdScrapRetTok: Label 'Disc All on Sal,Prod&Scrap Ret', MaxLength = 100;
        DiscAllOnSProdScrRetNTok: Label 'Disc All on S,Prod&Scr Ret (N)', MaxLength = 100;
        DiscAllOnSProdScrRetEuTok: Label 'Disc All on S,Prod&Scr Ret(EU)', MaxLength = 100;
        DiscAllOnSProdScrRetITok: Label 'Disc All on S,Prod&Scr Ret(I)', MaxLength = 100;
        SalesReturnsTok: Label 'Sales Returns', MaxLength = 100;
        GoodsReturnsTok: Label 'Goods Returns', MaxLength = 100;
        NationalReturnsPostingTok: Label 'National Returns, Posting', MaxLength = 100;
        EuReturnsPostingTok: Label 'EU Returns, Posting', MaxLength = 100;
        IntNonEuReturnsTok: Label 'Int. (Non-EU) Returns', MaxLength = 100;
        FinishedGoodsReturnsTok: Label 'Finished Goods Returns', MaxLength = 100;
        SemiManufPartsReturnsTok: Label 'Semi-Manuf. Parts Returns', MaxLength = 100;
        ByProductsScrapReturnsTok: Label 'By Products & Scrap Returns', MaxLength = 100;
        RetEmpPackReturnsTok: Label 'Ret. Emp. & Pack. Returns', MaxLength = 100;
        SalesReturnAllowTok: Label 'Sales Return & Allow.', MaxLength = 100;
        GoodsSalesReturnAllowHeadingTok: Label 'Goods Sales Return & Allow., Heading', MaxLength = 100;
        GoodsSalesReturnAllowTok: Label 'Goods Sales Return & Allow.', MaxLength = 100;
        FinishGoodsSalesRetAllowTok: Label 'Finish. Goods Sales Ret&Allow.', MaxLength = 100;
        SemiManPSalesRetAllowTok: Label 'Semi-Man. P. Sales Ret&Allow.', MaxLength = 100;
        ByProdScrapSalesRetAllowTok: Label 'By Prod&Scrap Sales Ret&Allow.', MaxLength = 100;
        RetEmpPackSalesRetAllowTok: Label 'Ret. Emp&Pack Sales Ret&Allow.', MaxLength = 100;
        ChangesInStockIncomeTok: Label 'Changes in Stock, Income', MaxLength = 100;
        ChgsProdPrgManufGoodsTok: Label 'Chgs Prod. Prg-Manuf. Goods', MaxLength = 100;
        ChgsInSemiManufPartsTok: Label 'Chgs in Semi-Manuf. Parts', MaxLength = 100;
        ChangesInFinishedGoodsTok: Label 'Changes in Finished Goods', MaxLength = 100;
        ChgsInByProdOrScrapTok: Label 'Chgs in By Prod. or Scrap', MaxLength = 100;
        WorksDoneForTheCompTok: Label 'Works Done for the Comp.', MaxLength = 100;
        WorkDoneOnIntangATok: Label 'Work Done on Intang. A', MaxLength = 100;
        WorkDoneOnTangibleAHeadingTok: Label 'Work Done on Tangible A, Heading', MaxLength = 100;
        WorkDoneOnTangibleATok: Label 'Work Done on Tangible A', MaxLength = 100;
        WorkDoneOnRealEstateInvesTok: Label 'Work Done on Real Estate Inves', MaxLength = 100;
        WorkDoneIntgAInProgrTok: Label 'Work Done Intg. A in Progr', MaxLength = 100;
        SubvGrantsAndAdjTok: Label 'Subv., grants and adj.', MaxLength = 100;
        SubvGrantsAndLegaciesTok: Label 'Subv., grants and legacies', MaxLength = 100;
        SubvGrantsAndLegResultTok: Label 'Subv., grants and leg. Result', MaxLength = 100;
        OtherSubvGrantsAndLegResTok: Label 'Other subv, grants and leg res', MaxLength = 100;
        OtherOperatingIncomeTok: Label 'Other Operating Income', MaxLength = 100;
        JointVenturesResultsTok: Label 'Joint Ventures Results', MaxLength = 100;
        TransferredLossAdminTok: Label 'Transferred Loss(admin.)', MaxLength = 100;
        TransferredProfitParticipTok: Label 'Transferred Profit(particip.)', MaxLength = 100;
        LeaseChargesHeadingTok: Label 'Lease Charges, Heading', MaxLength = 100;
        RoyFConcessLicencTrdmrksTok: Label 'Roy. f Concess, Licenc,Trdmrks', MaxLength = 100;
        CommissionsHeadingTok: Label 'Commissions, Heading', MaxLength = 100;
        CommissionsTok: Label 'Commissions', MaxLength = 100;
        ServicesDoneToEmployeesTok: Label 'Services Done to Employees', MaxLength = 100;
        MiscellaneousServicesHeadingTok: Label 'Miscellaneous Services, Heading', MaxLength = 100;
        MiscellaneousServicesTok: Label 'Miscellaneous Services', MaxLength = 100;
        FinancialIncomeTok: Label 'Financial Income', MaxLength = 100;
        IncFromEquityInvestmTok: Label 'Inc. from Equity Investm.', MaxLength = 100;
        IncFromEquityInvestmGTok: Label 'Inc. from Equity Investm. (G)', MaxLength = 100;
        IncFromEquityInvestmATok: Label 'Inc. from Equity Investm. (A)', MaxLength = 100;
        IncFromEquityInvestmOVTok: Label 'Inc. from Equity Investm (O V)', MaxLength = 100;
        IncFromEquityInvestmOtTok: Label 'Inc. from Equity Investm. (Ot)', MaxLength = 100;
        IncDebtSecuritiesTok: Label 'Inc. Debt Securities', MaxLength = 100;
        IncDebtSecuritiesGTok: Label 'Inc. Debt Securities, (G)', MaxLength = 100;
        IncDebtSecuritiesATok: Label 'Inc. Debt Securities, (A)', MaxLength = 100;
        IncDebtSecuritiesOVinTok: Label 'Inc. Debt Securities, (O Vin)', MaxLength = 100;
        IncDebtSecuritiesOthTok: Label 'Inc. Debt Securities, (Oth)', MaxLength = 100;
        IncFromLoansTok: Label 'Inc. From Loans', MaxLength = 100;
        IncFromLtLoansTok: Label 'Inc. from LT Loans', MaxLength = 100;
        IncFromLtLoansGTok: Label 'Inc. from LT Loans (G)', MaxLength = 100;
        IncFromLtLoansATok: Label 'Inc. from LT Loans (A)', MaxLength = 100;
        IncFromLtLoansOtVinTok: Label 'Inc. from LT Loans (Ot Vin)', MaxLength = 100;
        IncLtLoansOthTok: Label 'Inc. LT Loans (Oth)', MaxLength = 100;
        IncomeFromStLoansTok: Label 'Income from ST Loans', MaxLength = 100;
        IncFromStLoansGTok: Label 'Inc. from ST Loans (G)', MaxLength = 100;
        IncFromStLoansATok: Label 'Inc. from ST Loans (A)', MaxLength = 100;
        IncFromStLoansOtVinTok: Label 'Inc. from ST Loans (Ot Vin)', MaxLength = 100;
        IncFromStLoansOthTok: Label 'Inc. from ST Loans (Oth)', MaxLength = 100;
        ProfitFinInstValueFVTok: Label 'Profit Fin. Inst. Value F. V.', MaxLength = 100;
        ProfitPortfolioTok: Label 'Profit Portfolio', MaxLength = 100;
        ProfitAssignByCompTok: Label 'Profit Assign. By Comp.', MaxLength = 100;
        ProfitAvailForSaleTok: Label 'Profit avail. For Sale', MaxLength = 100;
        ProfitCoverageInstrTok: Label 'Profit Coverage Instr.', MaxLength = 100;
        ProfitMarketableSecuritiesTok: Label 'Profit Marketable Securities', MaxLength = 100;
        ProfitMarkSecLtGTok: Label 'Profit Mark. Sec. LT, (G)', MaxLength = 100;
        ProfitMarkSecLtATok: Label 'Profit Mark. Sec. LT, (A)', MaxLength = 100;
        ProfitMarkSecLtOVinTok: Label 'Profit Mark. Sec. LT, (O Vin)', MaxLength = 100;
        ProfitMarkSecLtOTok: Label 'Profit Mark. Sec. LT, (O)', MaxLength = 100;
        ProfitMarkSecStGTok: Label 'Profit Mark. Sec. ST, (G)', MaxLength = 100;
        ProfitMarkSecStATok: Label 'Profit Mark. Sec. ST, (A)', MaxLength = 100;
        ProfitMarkSecStOVinTok: Label 'Profit Mark. Sec. ST, (O Vin)', MaxLength = 100;
        ProfitMarkSecStOTok: Label 'Profit Mark. Sec. ST, (O)', MaxLength = 100;
        LtIncFaAndReimbRTok: Label 'LT Inc. FA and Reimb. R.', MaxLength = 100;
        ExchangeGainHeadingTok: Label 'Exchange Gain, Heading', MaxLength = 100;
        ExchangeGainInternEurHeadingTok: Label 'Exchange Gain (Intern./Eur), Heading', MaxLength = 100;
        ExchangeGainInternEurTok: Label 'Exchange Gain (Intern./Eur)', MaxLength = 100;
        OtherExchangeGainsTok: Label 'Other Exchange Gains', MaxLength = 100;
        ExchangeGainPostingTok: Label 'Exchange Gain', MaxLength = 100;
        OtherFinancialIncomeHeadingIncomeTok: Label 'Other Financial Income, Heading-Income', MaxLength = 100;
        IncomeOnRoundOffEurosHeadingTok: Label 'Income on Round. Off Euros, Heading', MaxLength = 100;
        IncomeOnRoundOffEurosTok: Label 'Income on Round. Off Euros', MaxLength = 100;
        PositiveBalanceOnSettlTok: Label 'Positive Balance on Settl.', MaxLength = 100;
        OtherFinancialIncomeHeadingTok: Label 'Other Financial Income, Heading', MaxLength = 100;
        OtherFinancialIncomeTok: Label 'Other Financial Income', MaxLength = 100;
        ExcExtraordItemsIncTok: Label 'Exc. & Extraord. Items-Inc', MaxLength = 100;
        IntangibleAssetsProfitTok: Label 'Intangible Assets Profit', MaxLength = 100;
        TangibleAssetsProfitHeadingTok: Label 'Tangible Assets Profit, Heading', MaxLength = 100;
        TangibleAssetsProfitTok: Label 'Tangible Assets Profit', MaxLength = 100;
        PropertiesInvestmProfitTok: Label 'Properties Investm. Profit', MaxLength = 100;
        PrfOnLtEqInvestVinCTok: Label 'Prf. on LT Eq. Invest, Vin. C.', MaxLength = 100;
        PrfOnLtEqInvestGTok: Label 'Prf. on LT Eq. Invest (G)', MaxLength = 100;
        PrfOnLtEqInvestATok: Label 'Prf. on LT Eq. Invest (A)', MaxLength = 100;
        PrfOnLtEqInvestOtVinTok: Label 'Prf. on LT Eq. Invest (Ot Vin)', MaxLength = 100;
        NegDifferencesMergingBussTok: Label 'Neg. Differences Merging Buss', MaxLength = 100;
        ProfitOnDebentLoansTok: Label 'Profit on Debent Loans', MaxLength = 100;
        ProvisionsAppliedTok: Label 'Provisions Applied', MaxLength = 100;
        SurplResrvForIntangATok: Label 'Surpl. Resrv. for Intang. A', MaxLength = 100;
        SurplResrvForTangATok: Label 'Surpl. Resrv. for Tang. A', MaxLength = 100;
        SurplResrvForPropInvestTok: Label 'Surpl. Resrv. for Prop. Invest', MaxLength = 100;
        SurplResrvForInventoryTok: Label 'Surpl. Resrv. for Inventory', MaxLength = 100;
        SurplResrvFinishWipTok: Label 'Surpl. Resrv. Finish. & WIP', MaxLength = 100;
        SurplResrvForGoodsTok: Label 'Surpl. Resrv. for Goods', MaxLength = 100;
        SurplResrvForRawMatTok: Label 'Surpl. Resrv. for Raw Mat.', MaxLength = 100;
        SurplResrvForOtherMatTok: Label 'Surpl. Resrv. for Other Mat.', MaxLength = 100;
        RevDetTradeCreditsTok: Label 'Rev. Det.Trade Credits', MaxLength = 100;
        ProvisionExcessTok: Label 'Provision excess', MaxLength = 100;
        ProvisionForPensionsIncomeTok: Label 'Provision for Pensions, Income', MaxLength = 100;
        TaxationReserveIncomeTok: Label 'Taxation Reserve, Income', MaxLength = 100;
        ProvisionForOtherResponTok: Label 'Provision for other respon.', MaxLength = 100;
        ProvForTradeTransactIncomeTok: Label 'Prov. for Trade transact., Income', MaxLength = 100;
        OnerousContractsHeadingTok: Label 'Onerous Contracts, Heading', MaxLength = 100;
        OtherTradeTransactHeadingTok: Label 'Other Trade transact., Heading', MaxLength = 100;
        ProvForEnvironmentalActIncomeTok: Label 'Prov. for environmental act., Income', MaxLength = 100;
        ProvForRestructuringHeadingTok: Label 'Prov. for restructuring, Heading', MaxLength = 100;
        ProvPaymTranCapitalInstTok: Label 'Prov. Paym. Tran. Capital Inst', MaxLength = 100;
        SurplProviForLtSecTok: Label 'Surpl. Provi. for LT Sec.', MaxLength = 100;
        SurplResrvLtCapitalInsGTok: Label 'Surpl Resrv LT Capital Ins,(G)', MaxLength = 100;
        SurplResrvLtCapitalInsATok: Label 'Surpl Resrv LT Capital Ins,(A)', MaxLength = 100;
        SurplResrLtCapitalInsOvTok: Label 'Surpl Resr LT Capital Ins,(OV)', MaxLength = 100;
        SurplResrvLtCapitalInsOTok: Label 'Surpl Resrv LT Capital Ins,(O)', MaxLength = 100;
        SurplResrvLtSecGTok: Label 'Surpl. Resrv. LT Sec., (G)', MaxLength = 100;
        SurplResrvLtSecATok: Label 'Surpl. Resrv. LT Sec., (A)', MaxLength = 100;
        SurplResrvLtSecOVinTok: Label 'Surpl. Resrv. LT Sec., (O Vin)', MaxLength = 100;
        SurplResrvLtSecOthTok: Label 'Surpl. Resrv. LT Sec., (Oth)', MaxLength = 100;
        SurplResrvLtCreditsTok: Label 'Surpl. Resrv. LT Credits', MaxLength = 100;
        SurplResrvLtCreditsGTok: Label 'Surpl. Resrv. LT Credits, (G)', MaxLength = 100;
        SurplResrvLtCreditsATok: Label 'Surpl. Resrv. LT Credits, (A)', MaxLength = 100;
        SurplResrvLtCreditsOvTok: Label 'Surpl. Resrv. LT Credits,(OV)', MaxLength = 100;
        SurplResrvLtCreditsOtTok: Label 'Surpl. Resrv. LT Credits, (Ot)', MaxLength = 100;
        SurplResrvStSecuritiesTok: Label 'Surpl. Resrv. ST Securities', MaxLength = 100;
        SurplResrvStCapitalInsGTok: Label 'Surpl Resrv ST Capital Ins,(G)', MaxLength = 100;
        SurplResrvStCapitalInsATok: Label 'Surpl Resrv ST Capital Ins,(A)', MaxLength = 100;
        SurplResrStCapitalInsOvTok: Label 'Surpl Resr ST Capital Ins,(OV)', MaxLength = 100;
        SurplResrvStCapitalInsOTok: Label 'Surpl Resrv ST Capital Ins,(O)', MaxLength = 100;
        SurplResrvStSecGTok: Label 'Surpl. Resrv. ST Sec., (G)', MaxLength = 100;
        SurplResrvStSecATok: Label 'Surpl. Resrv. ST Sec., (A)', MaxLength = 100;
        SurplResrvStSecOVinTok: Label 'Surpl. Resrv. ST Sec., (O Vin)', MaxLength = 100;
        SurplResrvStSecOthTok: Label 'Surpl. Resrv. ST Sec., (Oth)', MaxLength = 100;
        SurplResrvStCreditsTok: Label 'Surpl. Resrv. ST Credits', MaxLength = 100;
        SurplResrvStCreditsGTok: Label 'Surpl. Resrv. ST Credits, (G)', MaxLength = 100;
        SurplResrvStCreditsATok: Label 'Surpl. Resrv. ST Credits, (A)', MaxLength = 100;
        SurplResrvStCreditsOvTok: Label 'Surpl. Resrv. ST Credits, (OV)', MaxLength = 100;
        SurplResrvStCreditsOtTok: Label 'Surpl. Resrv. ST Credits, (Ot)', MaxLength = 100;
        ExpensesChargedToCapitalTok: Label 'Expenses charged to Capital', MaxLength = 100;
        FinExpAssetsAndLiabValTok: Label 'Fin.Exp. Assets and Liab. Val.', MaxLength = 100;
        LossesFinAForSaleTok: Label 'Losses Fin. A For Sale', MaxLength = 100;
        GainsTransFinAForSaleTok: Label 'Gains Trans. Fin. A For Sale', MaxLength = 100;
        ExpensesInCoverageOperTok: Label 'Expenses in Coverage Oper.', MaxLength = 100;
        LossesCashFlowCoverageTok: Label 'Losses Cash Flow Coverage', MaxLength = 100;
        LossesInvestCoverageAbroadTok: Label 'Losses Invest. Coverage Abroad', MaxLength = 100;
        CashFlowCoverageGainsTransTok: Label 'Cash Flow Coverage Gains Trans', MaxLength = 100;
        InvestCovAbroadGainsTransfTok: Label 'Invest Cov Abroad Gains Transf', MaxLength = 100;
        ExpensesConversionDifferencTok: Label 'Expenses Conversion Differenc.', MaxLength = 100;
        NegativeConvDifferencesTok: Label 'Negative Conv. Differences', MaxLength = 100;
        PositiveConvDiffTransferTok: Label 'Positive Conv. Diff. Transfer', MaxLength = 100;
        ProfitTaxHeadingCapitalTok: Label 'Profit Tax, Heading-Capital', MaxLength = 100;
        ProfitTaxCapitalTok: Label 'Profit Tax, Capital', MaxLength = 100;
        RunningTaxHeadingTok: Label 'Running Tax, Heading', MaxLength = 100;
        DeferredTaxHeadingTok: Label 'Deferred Tax, Heading', MaxLength = 100;
        ProfitDepositNegativeAdjTok: Label 'Profit Deposit Negative Adj.', MaxLength = 100;
        FiscalIncomePermDifferTok: Label 'Fiscal Income Perm. Differ.', MaxLength = 100;
        FiscalIncomeDeductionsTok: Label 'Fiscal Income Deductions', MaxLength = 100;
        PermDifferTransfTok: Label 'Perm. Differ. Transf.', MaxLength = 100;
        DeducFiscalBenefTransfTok: Label 'Deduc & Fiscal Benef. Transf.', MaxLength = 100;
        ProfitDepositPositiveAdjTok: Label 'Profit Deposit Positive Adj.', MaxLength = 100;
        SubvGrantsAndLegTransfTok: Label 'Subv., Grants and Leg. Transf.', MaxLength = 100;
        OfficialSubvTransfTok: Label 'Official Subv. Transf.', MaxLength = 100;
        GrantsAndLegTransfTok: Label 'Grants and Leg. Transf.', MaxLength = 100;
        OtherSubvGrantsLegTransTok: Label 'Other subv, grants & leg trans', MaxLength = 100;
        LtLossAndAdjFeeExpensesTok: Label 'LT Loss and Adj. Fee Expenses', MaxLength = 100;
        ActuarialLossesTok: Label 'Actuarial Losses', MaxLength = 100;
        NegAdjLtFeeFixedProvTok: Label 'Neg. Adj. LT Fee Fixed Prov.', MaxLength = 100;
        NonCurrAssetsOnSaleExpTok: Label 'Non curr. Assets on Sale Exp.', MaxLength = 100;
        NonCurrAAndForSaleLosTok: Label 'Non Curr A and for Sale Los.', MaxLength = 100;
        NonCurrAAndSaleGTransTok: Label 'Non Curr A and Sale G Trans', MaxLength = 100;
        PartGOrACExpPosValAdjTok: Label 'Part G or A C. Exp,Pos Val Adj', MaxLength = 100;
        LiabPartDetGTok: Label 'Liab Part Det, (G)', MaxLength = 100;
        LiabPartDetATok: Label 'Liab Part Det, (A)', MaxLength = 100;
        IncomeChargedToCapitalTok: Label 'Income charged to Capital', MaxLength = 100;
        FinIncAssetsAndLiabValTok: Label 'Fin. Inc. Assets and Liab. Val', MaxLength = 100;
        GainsFinAForSaleTok: Label 'Gains Fin. A For Sale', MaxLength = 100;
        LossesTransfFinAForSaleTok: Label 'Losses Transf Fin A For Sale', MaxLength = 100;
        IncomeInCoverageOperTok: Label 'Income in Coverage Oper.', MaxLength = 100;
        IncomeCashFlowCoverageTok: Label 'Income Cash Flow Coverage', MaxLength = 100;
        IncomeInvestCoverageAbroadTok: Label 'Income Invest Coverage Abroad', MaxLength = 100;
        CashFlowCoverageLossTransfTok: Label 'Cash Flow Coverage Loss Transf', MaxLength = 100;
        InvestCovAbroadLossTransfTok: Label 'Invest. Cov Abroad Loss Transf', MaxLength = 100;
        IncomeConversionDifferencesTok: Label 'Income Conversion Differences', MaxLength = 100;
        PositiveConvDifferencesTok: Label 'Positive Conv. Differences', MaxLength = 100;
        NegativeConvDiffTransferTok: Label 'Negative Conv. Diff. Transfer', MaxLength = 100;
        SubvGrantsAndLegIncomeTok: Label 'Subv., Grants and Leg. Income', MaxLength = 100;
        OfficialSubvIncomeTok: Label 'Official Subv. Income', MaxLength = 100;
        GrantsAndLegIncomeTok: Label 'Grants and Leg. Income', MaxLength = 100;
        OtherSubvGrantsAndLegIncTok: Label 'Other subv, grants and leg Inc', MaxLength = 100;
        LtProfitAndAdjFeeIncomeTok: Label 'LT Profit and Adj. Fee Income', MaxLength = 100;
        ActuarialGainsTok: Label 'Actuarial Gains', MaxLength = 100;
        PosAdjLtFeeFixedProvTok: Label 'Pos. Adj. LT Fee Fixed Prov.', MaxLength = 100;
        NonCurrAssetsOnSaleIncTok: Label 'Non curr. Assets on Sale Inc.', MaxLength = 100;
        NonCurrAAndForSaleProfitTok: Label 'Non Curr A and for Sale Profit', MaxLength = 100;
        NonCurrAAndSaleLossTransTok: Label 'Non Curr A and Sale Loss Trans', MaxLength = 100;
        PartGOrACoIncPosValAdjTok: Label 'Part G or A Co Inc,Pos Val Adj', MaxLength = 100;
        PrevNegAdjRecGTok: Label 'Prev. Neg. Adj. Rec. (G)', MaxLength = 100;
        PrevNegAdjRecATok: Label 'Prev. Neg. Adj. Rec. (A)', MaxLength = 100;
        NegAdjDetValTransGTok: Label 'Neg. Adj. Det. Val. Trans. (G)', MaxLength = 100;
        NegAdjDetValTransATok: Label 'Neg. Adj. Det. Val. Trans. (A)', MaxLength = 100;
        RawMaterialsHeadingTok: Label 'Raw Materials, Heading', MaxLength = 100;
        RawMaterialsHeadingAssetsTok: Label 'Raw Materials', MaxLength = 100;
        RawMaterialsAssetsPostingTok: Label 'Raw Materials, Posting', MaxLength = 100;
        FinishedGoodsHeadingTok: Label 'Finished Goods, Heading', MaxLength = 100;
        FixedAssetsHeadingTok: Label 'Fixed Assets, Heading', MaxLength = 100;
        OfficeSuppliesHeadingTok: Label 'Office Supplies, Heading', MaxLength = 100;
        ExtraordinaryExpensesHeadingTok: Label 'Extraordinary Expenses, Heading', MaxLength = 100;
        ExtraordinaryExpensesHeadingExpenseTok: Label 'Extraordinary Expenses - HeadingExp', MaxLength = 100;
        ExtraordinaryIncomeHeadingTok: Label 'Extraordinary Income, Heading', MaxLength = 100;
}
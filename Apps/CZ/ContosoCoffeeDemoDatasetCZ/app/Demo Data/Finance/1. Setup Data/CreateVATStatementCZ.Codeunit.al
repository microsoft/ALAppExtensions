codeunit 31282 "Create VAT Statement CZ"
{
    InherentEntitlements = X;
    InherentPermissions = X;

    trigger OnRun()
    var
        ContosoCoffeeDemoDataSetup: Record "Contoso Coffee Demo Data Setup";
    begin
        ContosoCoffeeDemoDataSetup.Get();

        if ContosoCoffeeDemoDataSetup."Company Type" = ContosoCoffeeDemoDataSetup."Company Type"::"Sales Tax" then
            exit;

        DeleteVATSatementLines();
        CreateVATStatementLine();
    end;

    local procedure DeleteVATSatementLines()
    var
        VATStatementLine: Record "VAT Statement Line";
        CreateVATStatement: Codeunit "Create VAT Statement";
    begin
        VATStatementLine.SetRange("Statement Template Name", CreateVATStatement.VATTemplateName());
        VATStatementLine.SetRange("Statement Name", CreateVATStatement.VATStatementName());
        VATStatementLine.DeleteAll();
    end;

    local procedure CreateVATStatementLine()
    var
        VATCtrlReportSectionCZL: Record "VAT Ctrl. Report Section CZL";
        VATStatementLine: Record "VAT Statement Line";
        CreateVATPostingGroups: Codeunit "Create VAT Posting Groups";
        CreateVatPostingGroupsCZ: Codeunit "Create Vat Posting Groups CZ";
        CreateVATStatement: Codeunit "Create VAT Statement";
    begin
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 10000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, TaxabletransactionsLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 20000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, SupplyofgoodsorservicesindomesticLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 30000, '1Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticSalesAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 40000, '1Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21S(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticSalesAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 50000, '1ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '1Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratebasetotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-01Z', '', '01');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 60000, '1D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21I(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticSalesAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 70000, '1D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21S(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticSalesAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 80000, '1DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '1D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratetaxtotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-01D', '', '01');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 90000, '2Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticSalesAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 100000, '2Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12S(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticSalesAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 110000, '2ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '2Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratebasetotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-02Z', '', '02');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 120000, '2D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12I(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticSalesAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 130000, '2D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12S(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticSalesAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 140000, '2DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '2D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratetaxtotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-02D', '', '02');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 150000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 160000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, SupplyofgoodsfromothermemberstateLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 170000, '3Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT21I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.EUPurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 180000, '3ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '3Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratebasetotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-03Z', '', '03');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 190000, '3D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT21I(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.EUPurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 200000, '3DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '3D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratetaxtotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-03D', '', '03');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 210000, '4Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT12I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.EUPurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 220000, '4ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '4Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratebasetotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-04Z', '', '04');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 230000, '4D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT12I(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.EUPurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 240000, '4DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '4D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratetaxtotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-04D', '', '04');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 250000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, SupplyofservicesfromVATregisteredpersoninEULbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 260000, '5Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT21S(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.EUPurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 270000, '5ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '5Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratebasetotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-05Z', '', '05');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 280000, '5D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT21S(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.EUPurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 290000, '5DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '5D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratetaxtotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-05D', '', '05');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 300000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 310000, '6Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT12S(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.EUPurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 320000, '6ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '6Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratebasetotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-06Z', '', '06');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 330000, '6D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT12S(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.EUPurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 340000, '6DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '6D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratetaxtotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-06D', '', '06');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 350000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 360000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, ImportofgoodsLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 370000, '7Z', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 380000, '7ZAK', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratebaseLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-07Z', '', '07');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 390000, '7D', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 400000, '7DAN', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratetaxLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-07D', '', '07');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 410000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 420000, '8Z', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 430000, '8ZAK', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratebaseLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-08Z', '', '08');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 440000, '8D', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 450000, '8DAN', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratetaxLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-08D', '', '08');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 460000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 470000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, VehicleacquisitionLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 480000, '9ZAK', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", 'DP3-09Z', '', '09');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 490000, '9DAN', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", 'DP3-09D', '', '09');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 500000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 510000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, ReversechargeschemeLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 520000, '10Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21RC(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.ReverseChargePurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 530000, '10ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '10Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratebasetotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-10Z', '', '10');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 540000, '10D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21RC(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.ReverseChargePurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 550000, '10DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '10D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratetaxtotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-10D', '', '10');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 560000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 570000, '11Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12RC(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.ReverseChargePurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 580000, '11ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '11Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratebasetotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-11Z', '', '11');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 590000, '11D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12RC(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.ReverseChargePurchaseSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 600000, '11DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '11D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratetaxtotalLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-11D', '', '11');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 610000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 620000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, OthertaxabletransactionsforwhichthetaxpayerisLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 630000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, obligedtodeclaretaxontheirreceiptLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 640000, '12Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), CreateVATPostingGroupsCZ.VAT21S(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 650000, '12ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '12Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratebaseLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-12Z', '', '12');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 660000, '12D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), CreateVATPostingGroupsCZ.VAT21S(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 670000, '12DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '12D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratetaxLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-12D', '', '12');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 680000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 690000, '13Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), CreateVATPostingGroupsCZ.VAT12S(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 700000, '13ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '13Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratebaseLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-13Z', '', '13');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 710000, '13D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Export(), CreateVATPostingGroupsCZ.VAT12S(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 720000, '13DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '13D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratetaxLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-13D', '', '13');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 730000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 740000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, VATexempttransactionsLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 750000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, WithclaimondeductionLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 760000, '20Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT21I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 770000, '20Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT12I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 780000, '20ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '20Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, DeliveryofgoodstoamemberstateEULbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-20Z', '', '20');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 790000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 800000, '21Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT12S(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 810000, '21Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT21S(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 820000, '21ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '21Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, SupplyofservicesoutsidedomesticLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-21Z', '', '21');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 830000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 840000, '22Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), CreateVATPostingGroupsCZ.VAT12I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 850000, '22Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Export(), CreateVATPostingGroupsCZ.VAT21I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 860000, '22ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '22Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, GoodsexportLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-22Z', '', '22');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 870000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 880000, '23ZAK', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", 'DP3-23Z', '', '23');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 890000, '24ZAK', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", 'DP3-24Z', '', '24');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 900000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 910000, '25Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12RC(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.ReverseChargeSalesSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 920000, '25Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21RC(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.ReverseChargeSalesSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 930000, '25ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '25Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, ReversechargeschemeLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-25Z', '', '25');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 940000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 950000, '26Z', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 960000, '26Z', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 970000, '26ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '26Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, OthertaxabledeliverablesLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-26Z', '', '26');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 980000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 990000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, AdditionaldataLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1000000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, SimplifiedtrilateraltradeprocedureLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1010000, '30Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT21I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1020000, '30Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT12I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1030000, '30ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '30Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, TripartitetradeacquisitionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-30Z', '', '30');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1040000, '31Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT21I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1050000, '31Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Sale, CreateVATPostingGroups.EU(), CreateVATPostingGroupsCZ.VAT12I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::"Opposite Sign", false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1060000, '31ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '31Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, TripartitetradedeliveryLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-31Z', '', '31');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1070000, '32ZAK', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, ImportofgoodsexemptfromVATLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-32Z', '', '32');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1080000, '33DAN', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, TaxcorrectiononreceivablesfrominsolventdebtorscreditorLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-33D', '', '33');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1090000, '34DAN', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, TaxcorrectiononreceivablesfrominsolventdebtorsdebtorLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-34D', '', '34');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1100000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1110000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, EntitledtoataxdeductionLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1120000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, TaxabletransactionreceivedLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1130000, '40Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticPurchaseAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1140000, '40Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21S(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticPurchaseAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1150000, '40ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '40Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratebaseLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-40Z', '', '40');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1160000, '40D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21I(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticPurchaseAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1170000, '40D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT21S(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticPurchaseAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1180000, '40DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '40D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratetaxfulldeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-40D', '', '40');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1190000, '41Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12I(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticPurchaseAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1200000, '41Z', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12S(), '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticPurchaseAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1210000, '41ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '41Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratebaseLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-41Z', '', '41');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1220000, '41D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12I(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticPurchaseAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1230000, '41D', Enum::"VAT Statement Line Type"::"VAT Entry Totaling", Enum::"General Posting Type"::Purchase, CreateVATPostingGroups.Domestic(), CreateVATPostingGroupsCZ.VAT12S(), '', Enum::"VAT Statement Line Amount Type"::Amount, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', VATCtrlReportSectionCZL.DomesticPurchaseAbove10ThousandSection(), '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1240000, '41DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '41D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratetaxfulldeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-41D', '', '41');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1250000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, ImportofgoodswherethecustomsofficeistheVATadministratorLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1260000, '42ZAK', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", 'DP3-42Z', '', '42');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1270000, '42DAN', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", 'DP3-42D', '', '42');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1280000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1290000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, Taxabletransactionsreportedinrows313Lbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1300000, '43Z', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '3ZAK|5ZAK|7ZAK|9ZAK|10ZAK', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1310000, '43ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '43Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratebaseLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-43Z', '', '43');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1320000, '43D', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '3DAN|5DAN|7DAN|9DAN|10DAN', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1330000, '43DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '43D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, standardratetaxfulldeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-43D', '', '43');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1340000, '44Z', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '4ZAK|6ZAK|8ZAK|11ZAK', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1350000, '44ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '44Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratebaseLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-44Z', '', '44');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1360000, '44D', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '4DAN|6DAN|8DAN|11DAN', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1370000, '44DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '44D', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, reducedratetaxfulldeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-44D', '', '44');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1380000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1390000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, CorrectionofdeductionsVATLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1400000, '45DAN', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", 'DP3-45D', '', '45');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1410000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1420000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, TotaltaxdeductionLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1430000, '46DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '4?DAN', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, taxfulldeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-46D', '', '46');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1440000, '46DANK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, taxshorteneddeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-46K', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1450000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1460000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, ValueofacquiredfixedassetsLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1470000, '47DMZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, BaseLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-47Z', '', '47');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1480000, '47DMDAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, TaxfulldeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-47D', '', '47');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1490000, '47DMDANK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, taxshorteneddeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-47K', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1500000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1510000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, ReductionoftheentitledtoataxdeductionLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1520000, '50Z', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::Base, VATStatementLine."Calculate with"::Sign, false, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1530000, '50ZAK', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '50Z', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, ExempttransactionwithoutVATdeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-50Z', '', '50');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1540000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1550000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, ValueofperformacenotincludedinthecoefficientLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1560000, '51ZAKN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '30ZAK', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, withVATdeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-51S', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1570000, '51ZAKBN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, withoutVATdeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-51B', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1580000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, '', '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1590000, '', Enum::"VAT Statement Line Type"::Description, Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, TaxliabilitycalculationLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1600000, '60DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, AdjustmentoftaxdeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-60D', '', '60');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1610000, '61DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, TaxrefundLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-61D', '', '61');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1620000, '62DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '?DAN|1?DAN|61DAN', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, VAToutputLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-62D', '', '62');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1630000, '63DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '46DAN+60DAN', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, VATdeductionLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-63D', '', '63');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1640000, 'DPH', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '62DAN-63DAN', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, CalculationofVATLbl, '', false, VATStatementLine."Show CZL"::" ", '', '', '');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1650000, 'DPH-K', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', 'DPH', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, VATliabilityLbl, '', false, VATStatementLine."Show CZL"::"Zero If Negative", 'DP3-64D', '', '64');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1660000, 'DPH-D', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', 'DPH', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::"Opposite Sign", ExcessVATdeductionLbl, '', false, VATStatementLine."Show CZL"::"Zero If Positive", 'DP3-65D', '', '65');
        ContosoVatStatementCZ.InsertVatStatementLine(CreateVATStatement.VATTemplateName(), CreateVATStatement.VATStatementName(), 1670000, '66DAN', Enum::"VAT Statement Line Type"::"Formula CZL", Enum::"General Posting Type"::" ", '', '', '', Enum::"VAT Statement Line Amount Type"::" ", VATStatementLine."Calculate with"::Sign, true, VATStatementLine."Print with"::Sign, DifferencefromthelastknowntaxliabilityLbl, '', false, VATStatementLine."Show CZL"::" ", 'DP3-66D', '', '66');
    end;

    var
        ContosoVatStatementCZ: Codeunit "Contoso VAT Statement CZ";
        TaxabletransactionsLbl: Label 'Taxable transactions', MaxLength = 100;
        SupplyofgoodsorservicesindomesticLbl: Label 'Supply of goods or services in domestic', MaxLength = 100;
        standardratebasetotalLbl: Label 'standard rate (base) - total', MaxLength = 100;
        standardratetaxtotalLbl: Label 'standard rate (tax) - total', MaxLength = 100;
        reducedratebasetotalLbl: Label 'reduced rate (base) - total', MaxLength = 100;
        reducedratetaxtotalLbl: Label 'reduced rate (tax) - total', MaxLength = 100;
        SupplyofgoodsfromothermemberstateLbl: Label 'Supply of goods from other member state', MaxLength = 100;
        SupplyofservicesfromVATregisteredpersoninEULbl: Label 'Supply of services from VAT registered person in EU', MaxLength = 100;
        ImportofgoodsLbl: Label 'Import of goods', MaxLength = 100;
        standardratebaseLbl: Label 'standard rate (base)', MaxLength = 100;
        standardratetaxLbl: Label 'standard rate (tax)', MaxLength = 100;
        reducedratebaseLbl: Label 'reduced rate (base)', MaxLength = 100;
        reducedratetaxLbl: Label 'reduced rate (tax)', MaxLength = 100;
        VehicleacquisitionLbl: Label 'Vehicle acquisition', MaxLength = 100;
        ReversechargeschemeLbl: Label 'Reverse charge scheme', MaxLength = 100;
        OthertaxabletransactionsforwhichthetaxpayerisLbl: Label 'Other taxable transactions for which the taxpayer  is', MaxLength = 100;
        obligedtodeclaretaxontheirreceiptLbl: Label 'obliged to declare tax on their receipt', MaxLength = 100;
        VATexempttransactionsLbl: Label 'VAT exempt transactions', MaxLength = 100;
        WithclaimondeductionLbl: Label 'with claim on deduction', MaxLength = 100;
        DeliveryofgoodstoamemberstateEULbl: Label 'Delivery of goods to a member state EU', MaxLength = 100;
        SupplyofservicesoutsidedomesticLbl: Label 'Supply of services outside domestic', MaxLength = 100;
        GoodsexportLbl: Label 'Goods export', MaxLength = 100;
        OthertaxabledeliverablesLbl: Label 'Other taxable deliverables', MaxLength = 100;
        AdditionaldataLbl: Label 'Additional data', MaxLength = 100;
        SimplifiedtrilateraltradeprocedureLbl: Label 'Simplified trilateral trade procedure', MaxLength = 100;
        TripartitetradeacquisitionLbl: Label 'Tripartite trade - acquisition', MaxLength = 100;
        TripartitetradedeliveryLbl: Label 'Tripartite trade - delivery', MaxLength = 100;
        ImportofgoodsexemptfromVATLbl: Label 'Import of goods exempt from VAT', MaxLength = 100;
        TaxcorrectiononreceivablesfrominsolventdebtorscreditorLbl: Label 'Tax correction on receivables from insolvent debtors - creditor', MaxLength = 100;
        TaxcorrectiononreceivablesfrominsolventdebtorsdebtorLbl: Label 'Tax correction on receivables from insolvent debtors  - debtor', MaxLength = 100;
        EntitledtoataxdeductionLbl: Label 'Entitled to a tax deduction', MaxLength = 100;
        TaxabletransactionreceivedLbl: Label 'Taxable transaction received', MaxLength = 100;
        standardratetaxfulldeductionLbl: Label 'standard rate (tax - full deduction)', MaxLength = 100;
        reducedratetaxfulldeductionLbl: Label 'reduced rate (tax - full deduction)', MaxLength = 100;
        ImportofgoodswherethecustomsofficeistheVATadministratorLbl: Label 'Import of goods where the customs office is the VAT administrator', MaxLength = 100;
        Taxabletransactionsreportedinrows313Lbl: Label 'Taxable transactions reported in rows 3 - 13', MaxLength = 100;
        CorrectionofdeductionsVATLbl: Label 'Correction of deductions VAT', MaxLength = 100;
        TotaltaxdeductionLbl: Label 'Total tax deduction', MaxLength = 100;
        taxfulldeductionLbl: Label 'tax - full deduction', MaxLength = 100;
        taxshorteneddeductionLbl: Label 'tax - shoretened deduction', MaxLength = 100;
        ValueofacquiredfixedassetsLbl: Label 'Value of acquired fixed assets', MaxLength = 100;
        BaseLbl: Label 'Base', MaxLength = 100;
        ReductionoftheentitledtoataxdeductionLbl: Label 'Reduction of the entitled to a tax deduction', MaxLength = 100;
        ExempttransactionwithoutVATdeductionLbl: Label 'Exempt transaction without VAT deduction', MaxLength = 100;
        ValueofperformacenotincludedinthecoefficientLbl: Label 'Value of performace not included in the coefficient', MaxLength = 100;
        withVATdeductionLbl: Label 'with VAT deduction', MaxLength = 100;
        withoutVATdeductionLbl: Label 'without VAT deduction', MaxLength = 100;
        TaxliabilitycalculationLbl: Label 'Tax liability calculation', MaxLength = 100;
        AdjustmentoftaxdeductionLbl: Label 'Adjustment of tax deduction', MaxLength = 100;
        TaxrefundLbl: Label 'Tax refund', MaxLength = 100;
        VAToutputLbl: Label 'VAT output', MaxLength = 100;
        VATdeductionLbl: Label 'VAT deduction', MaxLength = 100;
        CalculationofVATLbl: Label 'Calculation of VAT', MaxLength = 100;
        VATliabilityLbl: Label 'VAT liability', MaxLength = 100;
        ExcessVATdeductionLbl: Label 'Excess VAT deduction', MaxLength = 100;
        DifferencefromthelastknowntaxliabilityLbl: Label 'Difference from the last known tax liability', MaxLength = 100;
}
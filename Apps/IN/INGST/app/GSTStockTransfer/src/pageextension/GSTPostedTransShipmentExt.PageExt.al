// ------------------------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// ------------------------------------------------------------------------------------------------
namespace Microsoft.Finance.GST.StockTransfer;

using Microsoft.Inventory.Transfer;

pageextension 18394 "GST Posted Trans. Shipment Ext" extends "Posted Transfer Shipment"
{
    layout
    {
        addafter("Entry/Exit Point")
        {
            field("Time of Removal"; Rec."Time of Removal")
            {
                ApplicationArea = Basic, Suite;
                ToolTip = 'Specifies the time of removal.';
            }
            field("Mode of Transport"; Rec."Mode of Transport")
            {
                ApplicationArea = Basic, Suite;
                ToolTip = 'Specifies the mode of transport used for transfer.';
            }
            field("Vehicle No."; Rec."Vehicle No.")
            {
                ApplicationArea = Basic, Suite;
                ToolTip = 'Specifies the vehicle no used for transfer.';
            }
            field("Vehicle Type"; Rec."Vehicle Type")
            {
                ApplicationArea = Basic, Suite;
                ToolTip = 'Specifies the type of vehicle used for transfer.';
            }
            field("LR/RR No."; Rec."LR/RR No.")
            {
                ApplicationArea = Basic, Suite;
                ToolTip = 'Specifies the lorry receipt number.';
            }
            field("LR/RR Date"; Rec."LR/RR Date")
            {
                ApplicationArea = Basic, Suite;
                ToolTip = 'Specifies the lorry receipt date.';
            }
            field("Distance (Km)"; Rec."Distance (Km)")
            {
                ApplicationArea = Basic, Suite;
                ToolTip = 'Specifies the distance of the the transfer route.';
            }
            field("E-Way Bill No."; Rec."E-Way Bill No.")
            {
                ApplicationArea = Basic, Suite;
                ToolTip = 'Specifies the E-way bill number on the purchase document.';
            }
            field("Acknowledgement No."; Rec."Acknowledgement No.")
            {
                ApplicationArea = Basic, Suite;
                Editable = MakeFieldUneditable;
                ToolTip = 'Specifies a unique number assigned by e-invoice portal.';
            }
            field("Acknowledgement Date"; Rec."Acknowledgement Date")
            {
                ApplicationArea = Basic, Suite;
                Editable = MakeFieldUneditable;
                ToolTip = 'Specifies the date of acknowledgement.';
            }
            field("IRN Hash"; Rec."IRN Hash")
            {
                ApplicationArea = Basic, Suite;
                Editable = MakeFieldUneditable;
                ToolTip = 'Specifies a unique number of 64 character generated by system.';
            }
            field("E-Inv. Cancelled Date"; Rec."E-Inv. Cancelled Date")
            {
                ApplicationArea = Basic, Suite;
                ToolTip = 'Specifies e-invoice cancellation date.';
            }
            field("Cancel Reason"; Rec."Cancel Reason")
            {
                ApplicationArea = Basic, Suite;
                ToolTip = 'Specifies the cancellation reason.';
            }
        }
        addafter(TaxInformation)
        {
            part("QR Code"; "Transfer Shipment QR Code")
            {
                Caption = 'QR Code';
                SubPageLink = "No." = field("No.");
                ApplicationArea = Basic, Suite;
            }
        }
    }

    actions
    {
        addafter(Dimensions)
        {
            action("Generate IRN")
            {
                ApplicationArea = Basic, Suite;
                Image = UpdateDescription;
                ToolTip = 'Specifies the function which will generate IRN No.';
                trigger OnAction()
                var
                    TransShipmentHeader: Record "Transfer Shipment Header";
                    eshptJsonManagement: Codeunit EInvTransshptJsonManagement;
                begin
                    if eshptJsonManagement.IsGSTApplicable(Rec."No.", Database::"Transfer Shipment Header") then begin
                        Clear(eshptJsonManagement);
                        TransShipmentHeader.Reset();
                        TransShipmentHeader.SetRange("No.", Rec."No.");
                        if not TransShipmentHeader.IsEmpty() then begin
                            eshptJsonManagement.GenerateIRN(Rec."No.", Database::"Transfer Shipment Header");
                            CurrPage.Update();
                        end else
                            Error(eInvoiceNonGSTTransactionErr);
                    end;
                end;
            }
            action("Cancel E-Invoice")
            {
                ApplicationArea = Basic, Suite;
                Image = Cancel;
                ToolTip = 'Specifies the function through which cancelled Json file will be generated.';
                trigger OnAction()
                var
                    TransferShipmentHeader: Record "Transfer Shipment Header";
                    eInvJsonHandlerForTransShpt: Codeunit "E-InvJsonHandlerForTransShpt";
                    eshptJsonManagement: Codeunit EInvTransshptJsonManagement;
                begin
                    Rec.TestField(Rec."IRN Hash");
                    Rec.TestField(Rec."Cancel Reason");

                    if eshptJsonManagement.IsGSTApplicable(Rec."No.", Database::"Transfer Shipment Header") then begin
                        TransferShipmentHeader.Reset();
                        TransferShipmentHeader.SetRange("No.", Rec."No.");
                        if TransferShipmentHeader.FindFirst() then begin
                            Clear(eInvJsonHandlerForTransShpt);
                            TransferShipmentHeader.Mark(true);
                            eInvJsonHandlerForTransShpt.SetTransferShipmentHeader(TransferShipmentHeader);
                            eInvJsonHandlerForTransShpt.GenerateCanceledInvoice();
                        end;
                    end else
                        Error(eInvoiceNonGSTTransactionErr);
                end;
            }
            action("Generate E-Invoice")
            {
                ApplicationArea = Basic, Suite;
                Image = ExportFile;
                Promoted = true;
                ToolTip = 'Specifies the function through which Json file will be generated.';

                trigger OnAction()
                var
                    TransferShipmentHeader: Record "Transfer Shipment Header";
                    eInvJsonHandlerForTransShpt: Codeunit "e-InvJsonHandlerForTransShpt";
                    eshptJsonManagement: Codeunit EInvTransshptJsonManagement;
                begin
                    if eshptJsonManagement.IsGSTApplicable(Rec."No.", Database::"Transfer Shipment Header") then begin
                        TransferShipmentHeader.Reset();
                        TransferShipmentHeader.SetRange("No.", Rec."No.");
                        if TransferShipmentHeader.FindFirst() then begin
                            Clear(eInvJsonHandlerForTransShpt);
                            TransferShipmentHeader.Mark(true);
                            eInvJsonHandlerForTransShpt.SetTransferShipmentHeader(TransferShipmentHeader);
                            eInvJsonHandlerForTransShpt.Run();
                        end;
                    end else
                        Error(eInvoiceNonGSTTransactionErr);
                end;
            }
            action("Import E-Invoice Response")
            {
                ApplicationArea = Basic, Suite;
                Image = ImportCodes;
                Promoted = true;
                PromotedCategory = Category4;
                ToolTip = 'Specifies the function through which Json file can be imported.';

                trigger OnAction()
                var
                    eInvJsonHandlerForTransShpt: Codeunit "e-InvJsonHandlerForTransShpt";
                    eshptJsonManagement: Codeunit EInvTransshptJsonManagement;
                    RecRef: RecordRef;
                begin
                    if eshptJsonManagement.IsGSTApplicable(Rec."No.", Database::"Transfer Shipment Header") then begin
                        Clear(eInvJsonHandlerForTransShpt);
                        Clear(RecRef);
                        RecRef.GetTable(Rec);
                        eInvJsonHandlerForTransShpt.GetEInvoiceResponse(RecRef);
                        CurrPage.Update();
                    end else
                        Error(eInvoiceNonGSTTransactionErr);
                end;
            }
        }
    }
    trigger OnAfterGetCurrRecord()
    begin
        MakeFieldUneditable := not Rec.IsJSONImported;
    end;

    var
        MakeFieldUneditable: Boolean;
        eInvoiceNonGSTTransactionErr: Label 'Error';
}